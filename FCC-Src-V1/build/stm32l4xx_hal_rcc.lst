ARM GAS  /tmp/ccqd3SsG.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32l4xx_hal_rcc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_RCC_DeInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_RCC_DeInit:
  27              	.LFB132:
  28              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @file    stm32l4xx_hal_rcc.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..]
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       After reset the device is running from Multiple Speed Internal oscillator
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (4 MHz) with Flash 0 wait state. Flash prefetch buffer, D-Cache
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHBs) and Low speed (APBs) busses:
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           all peripherals mapped on these busses are running at MSI speed.
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) All GPIOs are in analog mode, except the JTAG pins which
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..]
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
ARM GAS  /tmp/ccqd3SsG.s 			page 2


  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           derived from the System clock (SAIx, RTC, ADC, USB OTG FS/SDMMC1/RNG)
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @endverbatim
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ******************************************************************************
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @attention
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * Copyright (c) 2017 STMicroelectronics.
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * All rights reserved.
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * the root directory of this software component.
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   ******************************************************************************
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #include "stm32l4xx_hal.h"
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @addtogroup STM32L4xx_HAL_Driver
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC RCC
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  * @{
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  */
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define HSE_TIMEOUT_VALUE          HSE_STARTUP_TIMEOUT
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define HSI_TIMEOUT_VALUE          2U    /* 2 ms (minimum Tick + 1) */
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define MSI_TIMEOUT_VALUE          2U    /* 2 ms (minimum Tick + 1) */
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_CSR_LSIPREDIV)
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define LSI_TIMEOUT_VALUE          17U   /* 17 ms (16 ms starting time + 1) */
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define LSI_TIMEOUT_VALUE          2U    /* 2 ms (minimum Tick + 1) */
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_CSR_LSIPREDIV */
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define HSI48_TIMEOUT_VALUE        2U    /* 2 ms (minimum Tick + 1) */
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define PLL_TIMEOUT_VALUE          2U    /* 2 ms (minimum Tick + 1) */
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define CLOCKSWITCH_TIMEOUT_VALUE  5000U /* 5 s    */
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
ARM GAS  /tmp/ccqd3SsG.s 			page 3


  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #define RCC_PLL_OSCSOURCE_CONFIG(__HAL_RCC_PLLSOURCE__) \
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             (MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, (__HAL_RCC_PLLSOURCE__)))
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Private_Functions RCC Private Functions
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange);
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || \
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** static uint32_t          RCC_GetSysClockFreqFromPLLSource(void);
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Exported functions --------------------------------------------------------*/
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @verbatim
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..]
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal and external oscillators
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       (HSE, HSI, LSE, MSI, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        and APB2).
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) HSI (high-speed internal): 16 MHz factory-trimmed RC used directly or through
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              the PLL as System clock source.
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) MSI (Multiple Speed Internal): Its frequency is software trimmable from 100KHZ to 48MH
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              It can be used to generate the clock for the USB OTG FS (48 MHz).
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              The number of flash wait states is automatically adjusted when MSI range is updated wi
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              HAL_RCC_OscConfig() and the MSI is used as System clock source.
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) LSI (low-speed internal): 32 KHz low consumption RC used as IWDG and/or RTC
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              clock source.
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) HSE (high-speed external): 4 to 48 MHz crystal oscillator used directly or
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also optionally as RTC clock sourc
ARM GAS  /tmp/ccqd3SsG.s 			page 4


 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) LSE (low-speed external): 32.768 KHz oscillator used optionally as RTC clock source.
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) PLL (clocked by HSI, HSE or MSI) providing up to three independent output clocks:
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 80MHz).
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDMMC1 (<= 48 MHz).
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The third output is used to generate an accurate clock to achieve
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 high-quality audio performance on SAI interface.
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) PLLSAI1 (clocked by HSI, HSE or MSI) providing up to three independent output clocks:
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The first output is used to generate SAR ADC1 clock.
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDMMC1 (<= 48 MHz).
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The third output is used to generate an accurate clock to achieve
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 high-quality audio performance on SAI interface.
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) PLLSAI2 (clocked by HSI, HSE or MSI) providing up to three independent output clocks:
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The first output is used to generate an accurate clock to achieve
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 high-quality audio performance on SAI interface.
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The second output is used to generate either SAR ADC2 clock if ADC2 is present
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 or LCD clock if LTDC is present.
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (++) The third output is used to generate DSI clock if DSI is present.
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) CSS (Clock security system): once enabled, if a HSE clock failure occurs
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             (HSE used directly or through PLL as System clock source), the System clock
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              is automatically switched to HSI and an interrupt is generated if enabled.
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              The interrupt is linked to the Cortex-M4 NMI (Non-Maskable Interrupt)
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              exception vector.
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) MCO (microcontroller clock output): used to output MSI, LSI, HSI, LSE, HSE or
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              main PLL clock (through a configurable prescaler) on PA8 pin.
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) Several clock sources can be used to drive the System clock (SYSCLK): MSI, HSI,
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              HSE and main PLL.
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (+@) SAI: the SAI clock can be derived either from a specific PLL (PLLSAI1) or (PLLSAI2)
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 from an external clock mapped on the SAI_CKIN pin.
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 You have to use HAL_RCCEx_PeriphCLKConfig() function to configure this clock.
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (+@) RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 divided by 2 to 31.
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 You have to use __HAL_RCC_RTC_ENABLE() and HAL_RCCEx_PeriphCLKConfig() function
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 to configure this clock.
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (+@) USB OTG FS, SDMMC1 and RNG: USB OTG FS requires a frequency equal to 48 MHz
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 to work correctly, while the SDMMC1 and RNG peripherals require a frequency
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 equal or lower than to 48 MHz. This clock is derived of the main PLL or PLLSAI1
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 through PLLQ divider. You have to enable the peripheral clock and use
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 HAL_RCCEx_PeriphCLKConfig() function to configure this clock.
ARM GAS  /tmp/ccqd3SsG.s 			page 5


 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (+@) IWDG clock which is always the LSI clock.
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (+) The maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 is 80 MHz.
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              The clock source frequency should be adapted depending on the device voltage range
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              as listed in the Reference Manual "Clock source frequency versus voltage scaling" chap
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @endverbatim
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            Table 1. HCLK clock frequency for other STM32L4 devices
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            +-------------------------------------------------------+
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            | Latency         |    HCLK clock frequency (MHz)       |
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |-------------------------------------|
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 | voltage range 1  | voltage range 2  |
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |      1.2 V       |     1.0 V        |
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |0WS(1 CPU cycles)|  0 < HCLK <= 16  |  0 < HCLK <= 6   |
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |1WS(2 CPU cycles)| 16 < HCLK <= 32  |  6 < HCLK <= 12  |
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |2WS(3 CPU cycles)| 32 < HCLK <= 48  | 12 < HCLK <= 18  |
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |3WS(4 CPU cycles)| 48 < HCLK <= 64  | 18 < HCLK <= 26  |
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|------------------|------------------|
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |4WS(5 CPU cycles)| 64 < HCLK <= 80  | 18 < HCLK <= 26  |
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            +-------------------------------------------------------+
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            Table 2. HCLK clock frequency for STM32L4+ devices
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            +--------------------------------------------------------+
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            | Latency         |     HCLK clock frequency (MHz)       |
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |--------------------------------------|
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |  voltage range 1  | voltage range 2  |
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |                 |       1.2 V       |     1.0 V        |
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |0WS(1 CPU cycles)|   0 < HCLK <= 20  |  0 < HCLK <= 8   |
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |1WS(2 CPU cycles)|  20 < HCLK <= 40  |  8 < HCLK <= 16  |
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |2WS(3 CPU cycles)|  40 < HCLK <= 60  | 16 < HCLK <= 26  |
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |3WS(4 CPU cycles)|  60 < HCLK <= 80  | 16 < HCLK <= 26  |
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |4WS(5 CPU cycles)|  80 < HCLK <= 100 | 16 < HCLK <= 26  |
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |-----------------|-------------------|------------------|
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            |5WS(6 CPU cycles)| 100 < HCLK <= 120 | 16 < HCLK <= 26  |
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            +--------------------------------------------------------+
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Reset the RCC clock configuration to the default reset state.
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - MSI ON and used as system clock source
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - HSE, HSI, PLL, PLLSAI1 and PLLSAI2 OFF
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescalers set to 1.
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - CSS, MCO1 OFF
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - All interrupts disabled
ARM GAS  /tmp/ccqd3SsG.s 			page 6


 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - All interrupt and reset flags cleared
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - Peripheral clock sources
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks (Backup domain)
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval HAL status
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
  29              		.loc 1 266 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset to default System clock */
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Set MSION bit */
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_MSION);
  44              		.loc 1 271 3
  45 0006 454B     		ldr	r3, .L10
  46 0008 1B68     		ldr	r3, [r3]
  47 000a 444A     		ldr	r2, .L10
  48 000c 43F00103 		orr	r3, r3, #1
  49 0010 1360     		str	r3, [r2]
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Insure MSIRDY bit is set before writing default MSIRANGE value */
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get start tick */
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  50              		.loc 1 275 15
  51 0012 FFF7FEFF 		bl	HAL_GetTick
  52 0016 7860     		str	r0, [r7, #4]
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Wait till MSI is ready */
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
  53              		.loc 1 278 8
  54 0018 08E0     		b	.L2
  55              	.L4:
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
  56              		.loc 1 280 9
  57 001a FFF7FEFF 		bl	HAL_GetTick
  58 001e 0246     		mov	r2, r0
  59              		.loc 1 280 23
  60 0020 7B68     		ldr	r3, [r7, #4]
  61 0022 D31A     		subs	r3, r2, r3
  62              		.loc 1 280 7
  63 0024 022B     		cmp	r3, #2
ARM GAS  /tmp/ccqd3SsG.s 			page 7


  64 0026 01D9     		bls	.L2
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_TIMEOUT;
  65              		.loc 1 282 14
  66 0028 0323     		movs	r3, #3
  67 002a 73E0     		b	.L3
  68              	.L2:
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
  69              		.loc 1 278 9
  70 002c 3B4B     		ldr	r3, .L10
  71 002e 1B68     		ldr	r3, [r3]
  72 0030 03F00203 		and	r3, r3, #2
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
  73              		.loc 1 278 8
  74 0034 002B     		cmp	r3, #0
  75 0036 F0D0     		beq	.L4
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Set MSIRANGE default value */
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_MSIRANGE, RCC_MSIRANGE_6);
  76              		.loc 1 287 3
  77 0038 384B     		ldr	r3, .L10
  78 003a 1B68     		ldr	r3, [r3]
  79 003c 23F0F003 		bic	r3, r3, #240
  80 0040 364A     		ldr	r2, .L10
  81 0042 43F06003 		orr	r3, r3, #96
  82 0046 1360     		str	r3, [r2]
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset CFGR register (MSI is selected as system clock source) */
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  83              		.loc 1 290 3
  84 0048 344B     		ldr	r3, .L10
  85 004a 0022     		movs	r2, #0
  86 004c 9A60     		str	r2, [r3, #8]
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable for MSI as system clock source */
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SystemCoreClock = MSI_VALUE;
  87              		.loc 1 293 19
  88 004e 344B     		ldr	r3, .L10+4
  89 0050 344A     		ldr	r2, .L10+8
  90 0052 1A60     		str	r2, [r3]
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clock settings  */
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(HAL_InitTick(uwTickPrio) != HAL_OK)
  91              		.loc 1 296 6
  92 0054 344B     		ldr	r3, .L10+12
  93 0056 1B68     		ldr	r3, [r3]
  94 0058 1846     		mov	r0, r3
  95 005a FFF7FEFF 		bl	HAL_InitTick
  96 005e 0346     		mov	r3, r0
  97              		.loc 1 296 5
  98 0060 002B     		cmp	r3, #0
  99 0062 01D0     		beq	.L5
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     return HAL_ERROR;
 100              		.loc 1 298 12
ARM GAS  /tmp/ccqd3SsG.s 			page 8


 101 0064 0123     		movs	r3, #1
 102 0066 55E0     		b	.L3
 103              	.L5:
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Insure MSI selected as system clock source */
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get start tick */
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 104              		.loc 1 303 15
 105 0068 FFF7FEFF 		bl	HAL_GetTick
 106 006c 7860     		str	r0, [r7, #4]
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Wait till system clock source is ready */
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_MSI)
 107              		.loc 1 306 8
 108 006e 0AE0     		b	.L6
 109              	.L7:
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 110              		.loc 1 308 9
 111 0070 FFF7FEFF 		bl	HAL_GetTick
 112 0074 0246     		mov	r2, r0
 113              		.loc 1 308 23
 114 0076 7B68     		ldr	r3, [r7, #4]
 115 0078 D31A     		subs	r3, r2, r3
 116              		.loc 1 308 7
 117 007a 41F28832 		movw	r2, #5000
 118 007e 9342     		cmp	r3, r2
 119 0080 01D9     		bls	.L6
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_TIMEOUT;
 120              		.loc 1 310 14
 121 0082 0323     		movs	r3, #3
 122 0084 46E0     		b	.L3
 123              	.L6:
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 124              		.loc 1 306 9
 125 0086 254B     		ldr	r3, .L10
 126 0088 9B68     		ldr	r3, [r3, #8]
 127 008a 03F00C03 		and	r3, r3, #12
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 128              		.loc 1 306 8
 129 008e 002B     		cmp	r3, #0
 130 0090 EED1     		bne	.L7
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset HSION, HSIKERON, HSIASFS, HSEON, HSECSSON, PLLON, PLLSAIxON bits */
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSION | RCC_CR_HSIKERON| RCC_CR_HSIASFS | RCC_CR_PLLON |
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #elif defined(RCC_PLLSAI1_SUPPORT)
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSION | RCC_CR_HSIKERON| RCC_CR_HSIASFS | RCC_CR_PLLON |
 131              		.loc 1 321 3
 132 0092 224B     		ldr	r3, .L10
ARM GAS  /tmp/ccqd3SsG.s 			page 9


 133 0094 1A68     		ldr	r2, [r3]
 134 0096 2149     		ldr	r1, .L10
 135 0098 244B     		ldr	r3, .L10+16
 136 009a 1340     		ands	r3, r3, r2
 137 009c 0B60     		str	r3, [r1]
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSION | RCC_CR_HSIKERON| RCC_CR_HSIASFS | RCC_CR_PLLON);
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Insure PLLRDY, PLLSAI1RDY and PLLSAI2RDY (if present) are reset */
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get start tick */
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 138              		.loc 1 331 15
 139 009e FFF7FEFF 		bl	HAL_GetTick
 140 00a2 7860     		str	r0, [r7, #4]
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY | RCC_CR_PLLSAI1RDY | RCC_CR_PLLSAI2RDY) != 0U)
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #elif defined(RCC_PLLSAI1_SUPPORT)
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY | RCC_CR_PLLSAI1RDY) != 0U)
 141              		.loc 1 339 8
 142 00a4 08E0     		b	.L8
 143              	.L9:
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 144              		.loc 1 347 9
 145 00a6 FFF7FEFF 		bl	HAL_GetTick
 146 00aa 0246     		mov	r2, r0
 147              		.loc 1 347 23
 148 00ac 7B68     		ldr	r3, [r7, #4]
 149 00ae D31A     		subs	r3, r2, r3
 150              		.loc 1 347 7
 151 00b0 022B     		cmp	r3, #2
 152 00b2 01D9     		bls	.L8
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_TIMEOUT;
 153              		.loc 1 349 14
 154 00b4 0323     		movs	r3, #3
 155 00b6 2DE0     		b	.L3
 156              	.L8:
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 157              		.loc 1 339 9
 158 00b8 184B     		ldr	r3, .L10
 159 00ba 1B68     		ldr	r3, [r3]
 160 00bc 03F02063 		and	r3, r3, #167772160
ARM GAS  /tmp/ccqd3SsG.s 			page 10


 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 161              		.loc 1 339 8
 162 00c0 002B     		cmp	r3, #0
 163 00c2 F0D1     		bne	.L9
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset PLLCFGR register */
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->PLLCFGR);
 164              		.loc 1 354 3
 165 00c4 154B     		ldr	r3, .L10
 166 00c6 0022     		movs	r2, #0
 167 00c8 DA60     		str	r2, [r3, #12]
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN_4 );
 168              		.loc 1 355 3
 169 00ca 144B     		ldr	r3, .L10
 170 00cc DB68     		ldr	r3, [r3, #12]
 171 00ce 134A     		ldr	r2, .L10
 172 00d0 43F48053 		orr	r3, r3, #4096
 173 00d4 D360     		str	r3, [r2, #12]
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI1_SUPPORT)
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset PLLSAI1CFGR register */
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->PLLSAI1CFGR);
 174              		.loc 1 360 3
 175 00d6 114B     		ldr	r3, .L10
 176 00d8 0022     		movs	r2, #0
 177 00da 1A61     		str	r2, [r3, #16]
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLSAI1CFGR,  RCC_PLLSAI1CFGR_PLLSAI1N_4 );
 178              		.loc 1 361 3
 179 00dc 0F4B     		ldr	r3, .L10
 180 00de 1B69     		ldr	r3, [r3, #16]
 181 00e0 0E4A     		ldr	r2, .L10
 182 00e2 43F48053 		orr	r3, r3, #4096
 183 00e6 1361     		str	r3, [r2, #16]
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI1_SUPPORT */
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset PLLSAI2CFGR register */
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->PLLSAI2CFGR);
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->PLLSAI2CFGR,  RCC_PLLSAI2CFGR_PLLSAI2N_4 );
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI2_SUPPORT */
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 184              		.loc 1 374 3
 185 00e8 0C4B     		ldr	r3, .L10
 186 00ea 1B68     		ldr	r3, [r3]
 187 00ec 0B4A     		ldr	r2, .L10
 188 00ee 23F48023 		bic	r3, r3, #262144
 189 00f2 1360     		str	r3, [r2]
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Disable all interrupts */
ARM GAS  /tmp/ccqd3SsG.s 			page 11


 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   CLEAR_REG(RCC->CIER);
 190              		.loc 1 377 3
 191 00f4 094B     		ldr	r3, .L10
 192 00f6 0022     		movs	r2, #0
 193 00f8 9A61     		str	r2, [r3, #24]
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Clear all interrupt flags */
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   WRITE_REG(RCC->CICR, 0xFFFFFFFFU);
 194              		.loc 1 380 3
 195 00fa 084B     		ldr	r3, .L10
 196 00fc 4FF0FF32 		mov	r2, #-1
 197 0100 1A62     		str	r2, [r3, #32]
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Clear all reset flags */
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->CSR, RCC_CSR_RMVF);
 198              		.loc 1 383 3
 199 0102 064B     		ldr	r3, .L10
 200 0104 D3F89430 		ldr	r3, [r3, #148]
 201 0108 044A     		ldr	r2, .L10
 202 010a 43F40003 		orr	r3, r3, #8388608
 203 010e C2F89430 		str	r3, [r2, #148]
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return HAL_OK;
 204              		.loc 1 385 10
 205 0112 0023     		movs	r3, #0
 206              	.L3:
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 207              		.loc 1 386 1
 208 0114 1846     		mov	r0, r3
 209 0116 0837     		adds	r7, r7, #8
 210              	.LCFI3:
 211              		.cfi_def_cfa_offset 8
 212 0118 BD46     		mov	sp, r7
 213              	.LCFI4:
 214              		.cfi_def_cfa_register 13
 215              		@ sp needed
 216 011a 80BD     		pop	{r7, pc}
 217              	.L11:
 218              		.align	2
 219              	.L10:
 220 011c 00100240 		.word	1073876992
 221 0120 00000000 		.word	SystemCoreClock
 222 0124 00093D00 		.word	4000000
 223 0128 00000000 		.word	uwTickPrio
 224 012c FFF4FEFA 		.word	-83954433
 225              		.cfi_endproc
 226              	.LFE132:
 228              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 229              		.align	1
 230              		.global	HAL_RCC_OscConfig
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 235              	HAL_RCC_OscConfig:
 236              	.LFB133:
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
ARM GAS  /tmp/ccqd3SsG.s 			page 12


 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Initialize the RCC Oscillators according to the specified parameters in the
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct  pointer to an RCC_OscInitTypeDef structure that
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The PLL source is not updated when used as PLLSAI(s) clock source.
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval HAL status
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 237              		.loc 1 404 1
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 32
 240              		@ frame_needed = 1, uses_anonymous_args = 0
 241 0000 80B5     		push	{r7, lr}
 242              	.LCFI5:
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 7, -8
 245              		.cfi_offset 14, -4
 246 0002 88B0     		sub	sp, sp, #32
 247              	.LCFI6:
 248              		.cfi_def_cfa_offset 40
 249 0004 00AF     		add	r7, sp, #0
 250              	.LCFI7:
 251              		.cfi_def_cfa_register 7
 252 0006 7860     		str	r0, [r7, #4]
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   HAL_StatusTypeDef status;
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t sysclk_source, pll_config;
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check Null pointer */
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 253              		.loc 1 410 5
 254 0008 7B68     		ldr	r3, [r7, #4]
 255 000a 002B     		cmp	r3, #0
 256 000c 02D1     		bne	.L13
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     return HAL_ERROR;
 257              		.loc 1 412 12
 258 000e 0123     		movs	r3, #1
 259 0010 00F002BC 		b	.L14
 260              	.L13:
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 261              		.loc 1 418 19
 262 0014 964B     		ldr	r3, .L96
 263 0016 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccqd3SsG.s 			page 13


 264              		.loc 1 418 17
 265 0018 03F00C03 		and	r3, r3, #12
 266 001c BB61     		str	r3, [r7, #24]
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 267              		.loc 1 419 16
 268 001e 944B     		ldr	r3, .L96
 269 0020 DB68     		ldr	r3, [r3, #12]
 270              		.loc 1 419 14
 271 0022 03F00303 		and	r3, r3, #3
 272 0026 7B61     		str	r3, [r7, #20]
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*----------------------------- MSI Configuration --------------------------*/
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 273              		.loc 1 422 25
 274 0028 7B68     		ldr	r3, [r7, #4]
 275 002a 1B68     		ldr	r3, [r3]
 276              		.loc 1 422 43
 277 002c 03F01003 		and	r3, r3, #16
 278              		.loc 1 422 5
 279 0030 002B     		cmp	r3, #0
 280 0032 00F0E480 		beq	.L15
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check if MSI is used as system clock or as PLL source when PLL is selected as system clock *
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 281              		.loc 1 430 7
 282 0036 BB69     		ldr	r3, [r7, #24]
 283 0038 002B     		cmp	r3, #0
 284 003a 07D0     		beq	.L16
 285              		.loc 1 430 44 discriminator 1
 286 003c BB69     		ldr	r3, [r7, #24]
 287 003e 0C2B     		cmp	r3, #12
 288 0040 40F08B80 		bne	.L17
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_MSI)))
 289              		.loc 1 431 45
 290 0044 7B69     		ldr	r3, [r7, #20]
 291 0046 012B     		cmp	r3, #1
 292 0048 40F08780 		bne	.L17
 293              	.L16:
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 294              		.loc 1 433 11
 295 004c 884B     		ldr	r3, .L96
 296 004e 1B68     		ldr	r3, [r3]
 297 0050 03F00203 		and	r3, r3, #2
 298              		.loc 1 433 9
 299 0054 002B     		cmp	r3, #0
 300 0056 05D0     		beq	.L18
 301              		.loc 1 433 72 discriminator 1
 302 0058 7B68     		ldr	r3, [r7, #4]
 303 005a 9B69     		ldr	r3, [r3, #24]
 304              		.loc 1 433 51 discriminator 1
 305 005c 002B     		cmp	r3, #0
ARM GAS  /tmp/ccqd3SsG.s 			page 14


 306 005e 01D1     		bne	.L18
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 307              		.loc 1 435 16
 308 0060 0123     		movs	r3, #1
 309 0062 D9E3     		b	.L14
 310              	.L18:
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        /* Otherwise, just the calibration and MSI range change are allowed */
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            must be correctly programmed according to the frequency of the CPU clock
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            (HCLK) and the supply voltage of the device. */
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(RCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 311              		.loc 1 444 29
 312 0064 7B68     		ldr	r3, [r7, #4]
 313 0066 1A6A     		ldr	r2, [r3, #32]
 314              		.loc 1 444 47
 315 0068 814B     		ldr	r3, .L96
 316 006a 1B68     		ldr	r3, [r3]
 317 006c 03F00803 		and	r3, r3, #8
 318 0070 002B     		cmp	r3, #0
 319 0072 04D0     		beq	.L19
 320              		.loc 1 444 47 is_stmt 0 discriminator 1
 321 0074 7E4B     		ldr	r3, .L96
 322 0076 1B68     		ldr	r3, [r3]
 323 0078 03F0F003 		and	r3, r3, #240
 324 007c 05E0     		b	.L20
 325              	.L19:
 326              		.loc 1 444 47 discriminator 2
 327 007e 7C4B     		ldr	r3, .L96
 328 0080 D3F89430 		ldr	r3, [r3, #148]
 329 0084 1B09     		lsrs	r3, r3, #4
 330 0086 03F0F003 		and	r3, r3, #240
 331              	.L20:
 332              		.loc 1 444 11 is_stmt 1 discriminator 4
 333 008a 9342     		cmp	r3, r2
 334 008c 23D2     		bcs	.L21
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* First increase number of wait states update if necessary */
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 335              		.loc 1 447 14
 336 008e 7B68     		ldr	r3, [r7, #4]
 337 0090 1B6A     		ldr	r3, [r3, #32]
 338 0092 1846     		mov	r0, r3
 339 0094 FFF7FEFF 		bl	RCC_SetFlashLatencyFromMSIRange
 340 0098 0346     		mov	r3, r0
 341              		.loc 1 447 13
 342 009a 002B     		cmp	r3, #0
 343 009c 01D0     		beq	.L22
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_ERROR;
 344              		.loc 1 449 20
 345 009e 0123     		movs	r3, #1
 346 00a0 BAE3     		b	.L14
ARM GAS  /tmp/ccqd3SsG.s 			page 15


 347              	.L22:
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 348              		.loc 1 453 11
 349 00a2 734B     		ldr	r3, .L96
 350 00a4 1B68     		ldr	r3, [r3]
 351 00a6 724A     		ldr	r2, .L96
 352 00a8 43F00803 		orr	r3, r3, #8
 353 00ac 1360     		str	r3, [r2]
 354 00ae 704B     		ldr	r3, .L96
 355 00b0 1B68     		ldr	r3, [r3]
 356 00b2 23F0F002 		bic	r2, r3, #240
 357 00b6 7B68     		ldr	r3, [r7, #4]
 358 00b8 1B6A     		ldr	r3, [r3, #32]
 359 00ba 6D49     		ldr	r1, .L96
 360 00bc 1343     		orrs	r3, r3, r2
 361 00be 0B60     		str	r3, [r1]
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 362              		.loc 1 455 11
 363 00c0 6B4B     		ldr	r3, .L96
 364 00c2 5B68     		ldr	r3, [r3, #4]
 365 00c4 23F47F42 		bic	r2, r3, #65280
 366 00c8 7B68     		ldr	r3, [r7, #4]
 367 00ca DB69     		ldr	r3, [r3, #28]
 368 00cc 1B02     		lsls	r3, r3, #8
 369 00ce 6849     		ldr	r1, .L96
 370 00d0 1343     		orrs	r3, r3, r2
 371 00d2 4B60     		str	r3, [r1, #4]
 372 00d4 25E0     		b	.L23
 373              	.L21:
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         else
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Else, keep current flash latency while decreasing applies */
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 374              		.loc 1 461 11
 375 00d6 664B     		ldr	r3, .L96
 376 00d8 1B68     		ldr	r3, [r3]
 377 00da 654A     		ldr	r2, .L96
 378 00dc 43F00803 		orr	r3, r3, #8
 379 00e0 1360     		str	r3, [r2]
 380 00e2 634B     		ldr	r3, .L96
 381 00e4 1B68     		ldr	r3, [r3]
 382 00e6 23F0F002 		bic	r2, r3, #240
 383 00ea 7B68     		ldr	r3, [r7, #4]
 384 00ec 1B6A     		ldr	r3, [r3, #32]
 385 00ee 6049     		ldr	r1, .L96
 386 00f0 1343     		orrs	r3, r3, r2
 387 00f2 0B60     		str	r3, [r1]
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 388              		.loc 1 463 11
 389 00f4 5E4B     		ldr	r3, .L96
ARM GAS  /tmp/ccqd3SsG.s 			page 16


 390 00f6 5B68     		ldr	r3, [r3, #4]
 391 00f8 23F47F42 		bic	r2, r3, #65280
 392 00fc 7B68     		ldr	r3, [r7, #4]
 393 00fe DB69     		ldr	r3, [r3, #28]
 394 0100 1B02     		lsls	r3, r3, #8
 395 0102 5B49     		ldr	r1, .L96
 396 0104 1343     		orrs	r3, r3, r2
 397 0106 4B60     		str	r3, [r1, #4]
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Decrease number of wait states update if necessary */
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Only possible when MSI is the System clock source  */
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if(sysclk_source == RCC_CFGR_SWS_MSI)
 398              		.loc 1 467 13
 399 0108 BB69     		ldr	r3, [r7, #24]
 400 010a 002B     		cmp	r3, #0
 401 010c 09D1     		bne	.L23
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 402              		.loc 1 469 16
 403 010e 7B68     		ldr	r3, [r7, #4]
 404 0110 1B6A     		ldr	r3, [r3, #32]
 405 0112 1846     		mov	r0, r3
 406 0114 FFF7FEFF 		bl	RCC_SetFlashLatencyFromMSIRange
 407 0118 0346     		mov	r3, r0
 408              		.loc 1 469 15
 409 011a 002B     		cmp	r3, #0
 410 011c 01D0     		beq	.L23
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               return HAL_ERROR;
 411              		.loc 1 471 22
 412 011e 0123     		movs	r3, #1
 413 0120 7AE3     		b	.L14
 414              	.L23:
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             }
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Update the SystemCoreClock global variable */
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_
 415              		.loc 1 477 27
 416 0122 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 417 0126 0246     		mov	r2, r0
 418              		.loc 1 477 71
 419 0128 514B     		ldr	r3, .L96
 420 012a 9B68     		ldr	r3, [r3, #8]
 421              		.loc 1 477 106
 422 012c 1B09     		lsrs	r3, r3, #4
 423 012e 03F00F03 		and	r3, r3, #15
 424              		.loc 1 477 70
 425 0132 5049     		ldr	r1, .L96+4
 426 0134 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 427              		.loc 1 477 128
 428 0136 03F01F03 		and	r3, r3, #31
 429              		.loc 1 477 53
 430 013a 22FA03F3 		lsr	r3, r2, r3
 431              		.loc 1 477 25
 432 013e 4E4A     		ldr	r2, .L96+8
ARM GAS  /tmp/ccqd3SsG.s 			page 17


 433 0140 1360     		str	r3, [r2]
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Configure the source of time base considering new system clocks settings*/
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         status = HAL_InitTick(uwTickPrio);
 434              		.loc 1 480 18
 435 0142 4E4B     		ldr	r3, .L96+12
 436 0144 1B68     		ldr	r3, [r3]
 437 0146 1846     		mov	r0, r3
 438 0148 FFF7FEFF 		bl	HAL_InitTick
 439 014c 0346     		mov	r3, r0
 440 014e FB73     		strb	r3, [r7, #15]
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(status != HAL_OK)
 441              		.loc 1 481 11
 442 0150 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 443 0152 002B     		cmp	r3, #0
 444 0154 52D0     		beq	.L94
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return status;
 445              		.loc 1 483 18
 446 0156 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 447 0158 5EE3     		b	.L14
 448              	.L17:
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the MSI State */
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 449              		.loc 1 490 27
 450 015a 7B68     		ldr	r3, [r7, #4]
 451 015c 9B69     		ldr	r3, [r3, #24]
 452              		.loc 1 490 9
 453 015e 002B     		cmp	r3, #0
 454 0160 32D0     		beq	.L25
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (MSI). */
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_ENABLE();
 455              		.loc 1 493 9
 456 0162 434B     		ldr	r3, .L96
 457 0164 1B68     		ldr	r3, [r3]
 458 0166 424A     		ldr	r2, .L96
 459 0168 43F00103 		orr	r3, r3, #1
 460 016c 1360     		str	r3, [r2]
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get timeout */
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 461              		.loc 1 496 21
 462 016e FFF7FEFF 		bl	HAL_GetTick
 463 0172 3861     		str	r0, [r7, #16]
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till MSI is ready */
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 464              		.loc 1 499 14
 465 0174 08E0     		b	.L26
 466              	.L27:
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
ARM GAS  /tmp/ccqd3SsG.s 			page 18


 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 467              		.loc 1 501 15
 468 0176 FFF7FEFF 		bl	HAL_GetTick
 469 017a 0246     		mov	r2, r0
 470              		.loc 1 501 29
 471 017c 3B69     		ldr	r3, [r7, #16]
 472 017e D31A     		subs	r3, r2, r3
 473              		.loc 1 501 13
 474 0180 022B     		cmp	r3, #2
 475 0182 01D9     		bls	.L26
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 476              		.loc 1 503 20
 477 0184 0323     		movs	r3, #3
 478 0186 47E3     		b	.L14
 479              	.L26:
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 480              		.loc 1 499 15
 481 0188 394B     		ldr	r3, .L96
 482 018a 1B68     		ldr	r3, [r3]
 483 018c 03F00203 		and	r3, r3, #2
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 484              		.loc 1 499 14
 485 0190 002B     		cmp	r3, #0
 486 0192 F0D0     		beq	.L27
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          /* Selects the Multiple Speed oscillator (MSI) clock range .*/
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 487              		.loc 1 507 9
 488 0194 364B     		ldr	r3, .L96
 489 0196 1B68     		ldr	r3, [r3]
 490 0198 354A     		ldr	r2, .L96
 491 019a 43F00803 		orr	r3, r3, #8
 492 019e 1360     		str	r3, [r2]
 493 01a0 334B     		ldr	r3, .L96
 494 01a2 1B68     		ldr	r3, [r3]
 495 01a4 23F0F002 		bic	r2, r3, #240
 496 01a8 7B68     		ldr	r3, [r7, #4]
 497 01aa 1B6A     		ldr	r3, [r3, #32]
 498 01ac 3049     		ldr	r1, .L96
 499 01ae 1343     		orrs	r3, r3, r2
 500 01b0 0B60     		str	r3, [r1]
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 501              		.loc 1 509 9
 502 01b2 2F4B     		ldr	r3, .L96
 503 01b4 5B68     		ldr	r3, [r3, #4]
 504 01b6 23F47F42 		bic	r2, r3, #65280
 505 01ba 7B68     		ldr	r3, [r7, #4]
 506 01bc DB69     		ldr	r3, [r3, #28]
 507 01be 1B02     		lsls	r3, r3, #8
 508 01c0 2B49     		ldr	r1, .L96
 509 01c2 1343     		orrs	r3, r3, r2
 510 01c4 4B60     		str	r3, [r1, #4]
 511 01c6 1AE0     		b	.L15
 512              	.L25:
ARM GAS  /tmp/ccqd3SsG.s 			page 19


 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (MSI). */
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_MSI_DISABLE();
 513              		.loc 1 515 9
 514 01c8 294B     		ldr	r3, .L96
 515 01ca 1B68     		ldr	r3, [r3]
 516 01cc 284A     		ldr	r2, .L96
 517 01ce 23F00103 		bic	r3, r3, #1
 518 01d2 1360     		str	r3, [r2]
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get timeout */
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 519              		.loc 1 518 21
 520 01d4 FFF7FEFF 		bl	HAL_GetTick
 521 01d8 3861     		str	r0, [r7, #16]
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till MSI is ready */
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U)
 522              		.loc 1 521 14
 523 01da 08E0     		b	.L28
 524              	.L29:
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 525              		.loc 1 523 15
 526 01dc FFF7FEFF 		bl	HAL_GetTick
 527 01e0 0246     		mov	r2, r0
 528              		.loc 1 523 29
 529 01e2 3B69     		ldr	r3, [r7, #16]
 530 01e4 D31A     		subs	r3, r2, r3
 531              		.loc 1 523 13
 532 01e6 022B     		cmp	r3, #2
 533 01e8 01D9     		bls	.L28
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 534              		.loc 1 525 20
 535 01ea 0323     		movs	r3, #3
 536 01ec 14E3     		b	.L14
 537              	.L28:
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 538              		.loc 1 521 15
 539 01ee 204B     		ldr	r3, .L96
 540 01f0 1B68     		ldr	r3, [r3]
 541 01f2 03F00203 		and	r3, r3, #2
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 542              		.loc 1 521 14
 543 01f6 002B     		cmp	r3, #0
 544 01f8 F0D1     		bne	.L29
 545 01fa 00E0     		b	.L15
 546              	.L94:
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 547              		.loc 1 433 9
 548 01fc 00BF     		nop
 549              	.L15:
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
ARM GAS  /tmp/ccqd3SsG.s 			page 20


 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 550              		.loc 1 532 25
 551 01fe 7B68     		ldr	r3, [r7, #4]
 552 0200 1B68     		ldr	r3, [r3]
 553              		.loc 1 532 43
 554 0202 03F00103 		and	r3, r3, #1
 555              		.loc 1 532 5
 556 0206 002B     		cmp	r3, #0
 557 0208 73D0     		beq	.L30
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((sysclk_source == RCC_CFGR_SWS_HSE) ||
 558              		.loc 1 538 7
 559 020a BB69     		ldr	r3, [r7, #24]
 560 020c 082B     		cmp	r3, #8
 561 020e 05D0     		beq	.L31
 562              		.loc 1 538 44 discriminator 1
 563 0210 BB69     		ldr	r3, [r7, #24]
 564 0212 0C2B     		cmp	r3, #12
 565 0214 0ED1     		bne	.L32
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_HSE)))
 566              		.loc 1 539 45
 567 0216 7B69     		ldr	r3, [r7, #20]
 568 0218 032B     		cmp	r3, #3
 569 021a 0BD1     		bne	.L32
 570              	.L31:
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 571              		.loc 1 541 11
 572 021c 144B     		ldr	r3, .L96
 573 021e 1B68     		ldr	r3, [r3]
 574 0220 03F40033 		and	r3, r3, #131072
 575              		.loc 1 541 9
 576 0224 002B     		cmp	r3, #0
 577 0226 63D0     		beq	.L95
 578              		.loc 1 541 72 discriminator 1
 579 0228 7B68     		ldr	r3, [r7, #4]
 580 022a 5B68     		ldr	r3, [r3, #4]
 581              		.loc 1 541 51 discriminator 1
 582 022c 002B     		cmp	r3, #0
 583 022e 5FD1     		bne	.L95
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 584              		.loc 1 543 16
 585 0230 0123     		movs	r3, #1
 586 0232 F1E2     		b	.L14
 587              	.L32:
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccqd3SsG.s 			page 21


 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 588              		.loc 1 549 7
 589 0234 7B68     		ldr	r3, [r7, #4]
 590 0236 5B68     		ldr	r3, [r3, #4]
 591 0238 B3F5803F 		cmp	r3, #65536
 592 023c 06D1     		bne	.L34
 593              		.loc 1 549 7 is_stmt 0 discriminator 1
 594 023e 0C4B     		ldr	r3, .L96
 595 0240 1B68     		ldr	r3, [r3]
 596 0242 0B4A     		ldr	r2, .L96
 597 0244 43F48033 		orr	r3, r3, #65536
 598 0248 1360     		str	r3, [r2]
 599 024a 25E0     		b	.L35
 600              	.L34:
 601              		.loc 1 549 7 discriminator 2
 602 024c 7B68     		ldr	r3, [r7, #4]
 603 024e 5B68     		ldr	r3, [r3, #4]
 604 0250 B3F5A02F 		cmp	r3, #327680
 605 0254 14D1     		bne	.L36
 606              		.loc 1 549 7 discriminator 3
 607 0256 064B     		ldr	r3, .L96
 608 0258 1B68     		ldr	r3, [r3]
 609 025a 054A     		ldr	r2, .L96
 610 025c 43F48023 		orr	r3, r3, #262144
 611 0260 1360     		str	r3, [r2]
 612 0262 034B     		ldr	r3, .L96
 613 0264 1B68     		ldr	r3, [r3]
 614 0266 024A     		ldr	r2, .L96
 615 0268 43F48033 		orr	r3, r3, #65536
 616 026c 1360     		str	r3, [r2]
 617 026e 13E0     		b	.L35
 618              	.L97:
 619              		.align	2
 620              	.L96:
 621 0270 00100240 		.word	1073876992
 622 0274 00000000 		.word	AHBPrescTable
 623 0278 00000000 		.word	SystemCoreClock
 624 027c 00000000 		.word	uwTickPrio
 625              	.L36:
 626              		.loc 1 549 7 discriminator 4
 627 0280 A04B     		ldr	r3, .L98
 628 0282 1B68     		ldr	r3, [r3]
 629 0284 9F4A     		ldr	r2, .L98
 630 0286 23F48033 		bic	r3, r3, #65536
 631 028a 1360     		str	r3, [r2]
 632 028c 9D4B     		ldr	r3, .L98
 633 028e 1B68     		ldr	r3, [r3]
 634 0290 9C4A     		ldr	r2, .L98
 635 0292 23F48023 		bic	r3, r3, #262144
 636 0296 1360     		str	r3, [r2]
 637              	.L35:
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the HSE State */
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
ARM GAS  /tmp/ccqd3SsG.s 			page 22


 638              		.loc 1 552 27 is_stmt 1
 639 0298 7B68     		ldr	r3, [r7, #4]
 640 029a 5B68     		ldr	r3, [r3, #4]
 641              		.loc 1 552 9
 642 029c 002B     		cmp	r3, #0
 643 029e 13D0     		beq	.L37
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 644              		.loc 1 555 21
 645 02a0 FFF7FEFF 		bl	HAL_GetTick
 646 02a4 3861     		str	r0, [r7, #16]
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 647              		.loc 1 558 14
 648 02a6 08E0     		b	.L38
 649              	.L39:
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 650              		.loc 1 560 15
 651 02a8 FFF7FEFF 		bl	HAL_GetTick
 652 02ac 0246     		mov	r2, r0
 653              		.loc 1 560 29
 654 02ae 3B69     		ldr	r3, [r7, #16]
 655 02b0 D31A     		subs	r3, r2, r3
 656              		.loc 1 560 13
 657 02b2 642B     		cmp	r3, #100
 658 02b4 01D9     		bls	.L38
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 659              		.loc 1 562 20
 660 02b6 0323     		movs	r3, #3
 661 02b8 AEE2     		b	.L14
 662              	.L38:
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 663              		.loc 1 558 15
 664 02ba 924B     		ldr	r3, .L98
 665 02bc 1B68     		ldr	r3, [r3]
 666 02be 03F40033 		and	r3, r3, #131072
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 667              		.loc 1 558 14
 668 02c2 002B     		cmp	r3, #0
 669 02c4 F0D0     		beq	.L39
 670 02c6 14E0     		b	.L30
 671              	.L37:
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 672              		.loc 1 569 21
 673 02c8 FFF7FEFF 		bl	HAL_GetTick
 674 02cc 3861     		str	r0, [r7, #16]
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccqd3SsG.s 			page 23


 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 675              		.loc 1 572 14
 676 02ce 08E0     		b	.L40
 677              	.L41:
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 678              		.loc 1 574 15
 679 02d0 FFF7FEFF 		bl	HAL_GetTick
 680 02d4 0246     		mov	r2, r0
 681              		.loc 1 574 29
 682 02d6 3B69     		ldr	r3, [r7, #16]
 683 02d8 D31A     		subs	r3, r2, r3
 684              		.loc 1 574 13
 685 02da 642B     		cmp	r3, #100
 686 02dc 01D9     		bls	.L40
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 687              		.loc 1 576 20
 688 02de 0323     		movs	r3, #3
 689 02e0 9AE2     		b	.L14
 690              	.L40:
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 691              		.loc 1 572 15
 692 02e2 884B     		ldr	r3, .L98
 693 02e4 1B68     		ldr	r3, [r3]
 694 02e6 03F40033 		and	r3, r3, #131072
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 695              		.loc 1 572 14
 696 02ea 002B     		cmp	r3, #0
 697 02ec F0D1     		bne	.L41
 698 02ee 00E0     		b	.L30
 699              	.L95:
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 700              		.loc 1 541 9
 701 02f0 00BF     		nop
 702              	.L30:
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 703              		.loc 1 583 25
 704 02f2 7B68     		ldr	r3, [r7, #4]
 705 02f4 1B68     		ldr	r3, [r3]
 706              		.loc 1 583 43
 707 02f6 03F00203 		and	r3, r3, #2
 708              		.loc 1 583 5
 709 02fa 002B     		cmp	r3, #0
 710 02fc 60D0     		beq	.L42
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccqd3SsG.s 			page 24


 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((sysclk_source == RCC_CFGR_SWS_HSI) ||
 711              		.loc 1 590 7
 712 02fe BB69     		ldr	r3, [r7, #24]
 713 0300 042B     		cmp	r3, #4
 714 0302 05D0     		beq	.L43
 715              		.loc 1 590 44 discriminator 1
 716 0304 BB69     		ldr	r3, [r7, #24]
 717 0306 0C2B     		cmp	r3, #12
 718 0308 19D1     		bne	.L44
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****        ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_HSI)))
 719              		.loc 1 591 45
 720 030a 7B69     		ldr	r3, [r7, #20]
 721 030c 022B     		cmp	r3, #2
 722 030e 16D1     		bne	.L44
 723              	.L43:
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not be disabled */
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 724              		.loc 1 594 11
 725 0310 7C4B     		ldr	r3, .L98
 726 0312 1B68     		ldr	r3, [r3]
 727 0314 03F48063 		and	r3, r3, #1024
 728              		.loc 1 594 9
 729 0318 002B     		cmp	r3, #0
 730 031a 05D0     		beq	.L45
 731              		.loc 1 594 72 discriminator 1
 732 031c 7B68     		ldr	r3, [r7, #4]
 733 031e DB68     		ldr	r3, [r3, #12]
 734              		.loc 1 594 51 discriminator 1
 735 0320 002B     		cmp	r3, #0
 736 0322 01D1     		bne	.L45
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 737              		.loc 1 596 16
 738 0324 0123     		movs	r3, #1
 739 0326 77E2     		b	.L14
 740              	.L45:
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 741              		.loc 1 602 9
 742 0328 764B     		ldr	r3, .L98
 743 032a 5B68     		ldr	r3, [r3, #4]
 744 032c 23F0F852 		bic	r2, r3, #520093696
 745 0330 7B68     		ldr	r3, [r7, #4]
 746 0332 1B69     		ldr	r3, [r3, #16]
 747 0334 1B06     		lsls	r3, r3, #24
 748 0336 7349     		ldr	r1, .L98
 749 0338 1343     		orrs	r3, r3, r2
 750 033a 4B60     		str	r3, [r1, #4]
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 751              		.loc 1 594 9
 752 033c 40E0     		b	.L42
ARM GAS  /tmp/ccqd3SsG.s 			page 25


 753              	.L44:
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the HSI State */
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 754              		.loc 1 608 27
 755 033e 7B68     		ldr	r3, [r7, #4]
 756 0340 DB68     		ldr	r3, [r3, #12]
 757              		.loc 1 608 9
 758 0342 002B     		cmp	r3, #0
 759 0344 23D0     		beq	.L46
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 760              		.loc 1 611 9
 761 0346 6F4B     		ldr	r3, .L98
 762 0348 1B68     		ldr	r3, [r3]
 763 034a 6E4A     		ldr	r2, .L98
 764 034c 43F48073 		orr	r3, r3, #256
 765 0350 1360     		str	r3, [r2]
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 766              		.loc 1 614 21
 767 0352 FFF7FEFF 		bl	HAL_GetTick
 768 0356 3861     		str	r0, [r7, #16]
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 769              		.loc 1 617 14
 770 0358 08E0     		b	.L47
 771              	.L48:
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 772              		.loc 1 619 15
 773 035a FFF7FEFF 		bl	HAL_GetTick
 774 035e 0246     		mov	r2, r0
 775              		.loc 1 619 29
 776 0360 3B69     		ldr	r3, [r7, #16]
 777 0362 D31A     		subs	r3, r2, r3
 778              		.loc 1 619 13
 779 0364 022B     		cmp	r3, #2
 780 0366 01D9     		bls	.L47
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 781              		.loc 1 621 20
 782 0368 0323     		movs	r3, #3
 783 036a 55E2     		b	.L14
 784              	.L47:
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 785              		.loc 1 617 15
 786 036c 654B     		ldr	r3, .L98
 787 036e 1B68     		ldr	r3, [r3]
 788 0370 03F48063 		and	r3, r3, #1024
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
ARM GAS  /tmp/ccqd3SsG.s 			page 26


 789              		.loc 1 617 14
 790 0374 002B     		cmp	r3, #0
 791 0376 F0D0     		beq	.L48
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 792              		.loc 1 626 9
 793 0378 624B     		ldr	r3, .L98
 794 037a 5B68     		ldr	r3, [r3, #4]
 795 037c 23F0F852 		bic	r2, r3, #520093696
 796 0380 7B68     		ldr	r3, [r7, #4]
 797 0382 1B69     		ldr	r3, [r3, #16]
 798 0384 1B06     		lsls	r3, r3, #24
 799 0386 5F49     		ldr	r1, .L98
 800 0388 1343     		orrs	r3, r3, r2
 801 038a 4B60     		str	r3, [r1, #4]
 802 038c 18E0     		b	.L42
 803              	.L46:
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 804              		.loc 1 631 9
 805 038e 5D4B     		ldr	r3, .L98
 806 0390 1B68     		ldr	r3, [r3]
 807 0392 5C4A     		ldr	r2, .L98
 808 0394 23F48073 		bic	r3, r3, #256
 809 0398 1360     		str	r3, [r2]
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 810              		.loc 1 634 21
 811 039a FFF7FEFF 		bl	HAL_GetTick
 812 039e 3861     		str	r0, [r7, #16]
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 813              		.loc 1 637 14
 814 03a0 08E0     		b	.L49
 815              	.L50:
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 816              		.loc 1 639 15
 817 03a2 FFF7FEFF 		bl	HAL_GetTick
 818 03a6 0246     		mov	r2, r0
 819              		.loc 1 639 29
 820 03a8 3B69     		ldr	r3, [r7, #16]
 821 03aa D31A     		subs	r3, r2, r3
 822              		.loc 1 639 13
 823 03ac 022B     		cmp	r3, #2
 824 03ae 01D9     		bls	.L49
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 825              		.loc 1 641 20
ARM GAS  /tmp/ccqd3SsG.s 			page 27


 826 03b0 0323     		movs	r3, #3
 827 03b2 31E2     		b	.L14
 828              	.L49:
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 829              		.loc 1 637 15
 830 03b4 534B     		ldr	r3, .L98
 831 03b6 1B68     		ldr	r3, [r3]
 832 03b8 03F48063 		and	r3, r3, #1024
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 833              		.loc 1 637 14
 834 03bc 002B     		cmp	r3, #0
 835 03be F0D1     		bne	.L50
 836              	.L42:
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 837              		.loc 1 648 25
 838 03c0 7B68     		ldr	r3, [r7, #4]
 839 03c2 1B68     		ldr	r3, [r3]
 840              		.loc 1 648 43
 841 03c4 03F00803 		and	r3, r3, #8
 842              		.loc 1 648 5
 843 03c8 002B     		cmp	r3, #0
 844 03ca 3CD0     		beq	.L51
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the LSI State */
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 845              		.loc 1 654 25
 846 03cc 7B68     		ldr	r3, [r7, #4]
 847 03ce 5B69     		ldr	r3, [r3, #20]
 848              		.loc 1 654 7
 849 03d0 002B     		cmp	r3, #0
 850 03d2 1CD0     		beq	.L52
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_CSR_LSIPREDIV)
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       uint32_t csr_temp = RCC->CSR;
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check LSI division factor */
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       assert_param(IS_RCC_LSIDIV(RCC_OscInitStruct->LSIDiv));
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if (RCC_OscInitStruct->LSIDiv != (csr_temp & RCC_CSR_LSIPREDIV))
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if (((csr_temp & RCC_CSR_LSIRDY) == RCC_CSR_LSIRDY) && \
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             ((csr_temp & RCC_CSR_LSION) != RCC_CSR_LSION))
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****            /* If LSIRDY is set while LSION is not enabled,
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               LSIPREDIV can't be updated  */
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccqd3SsG.s 			page 28


 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Turn off LSI before changing RCC_CSR_LSIPREDIV */
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if ((csr_temp & RCC_CSR_LSION) == RCC_CSR_LSION)
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_LSI_DISABLE();
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Get Start Tick*/
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           tickstart = HAL_GetTick();
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Wait till LSI is disabled */
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               return HAL_TIMEOUT;
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             }
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Set LSI division factor */
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         MODIFY_REG(RCC->CSR, RCC_CSR_LSIPREDIV, RCC_OscInitStruct->LSIDiv);
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_CSR_LSIPREDIV */
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 851              		.loc 1 696 7
 852 03d4 4B4B     		ldr	r3, .L98
 853 03d6 D3F89430 		ldr	r3, [r3, #148]
 854 03da 4A4A     		ldr	r2, .L98
 855 03dc 43F00103 		orr	r3, r3, #1
 856 03e0 C2F89430 		str	r3, [r2, #148]
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 857              		.loc 1 699 19
 858 03e4 FFF7FEFF 		bl	HAL_GetTick
 859 03e8 3861     		str	r0, [r7, #16]
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 860              		.loc 1 702 12
 861 03ea 08E0     		b	.L53
 862              	.L54:
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 863              		.loc 1 704 13
 864 03ec FFF7FEFF 		bl	HAL_GetTick
 865 03f0 0246     		mov	r2, r0
 866              		.loc 1 704 27
 867 03f2 3B69     		ldr	r3, [r7, #16]
 868 03f4 D31A     		subs	r3, r2, r3
 869              		.loc 1 704 11
 870 03f6 022B     		cmp	r3, #2
 871 03f8 01D9     		bls	.L53
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 872              		.loc 1 706 18
ARM GAS  /tmp/ccqd3SsG.s 			page 29


 873 03fa 0323     		movs	r3, #3
 874 03fc 0CE2     		b	.L14
 875              	.L53:
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 876              		.loc 1 702 13
 877 03fe 414B     		ldr	r3, .L98
 878 0400 D3F89430 		ldr	r3, [r3, #148]
 879 0404 03F00203 		and	r3, r3, #2
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 880              		.loc 1 702 12
 881 0408 002B     		cmp	r3, #0
 882 040a EFD0     		beq	.L54
 883 040c 1BE0     		b	.L51
 884              	.L52:
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 885              		.loc 1 713 7
 886 040e 3D4B     		ldr	r3, .L98
 887 0410 D3F89430 		ldr	r3, [r3, #148]
 888 0414 3B4A     		ldr	r2, .L98
 889 0416 23F00103 		bic	r3, r3, #1
 890 041a C2F89430 		str	r3, [r2, #148]
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 891              		.loc 1 716 19
 892 041e FFF7FEFF 		bl	HAL_GetTick
 893 0422 3861     		str	r0, [r7, #16]
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSI is disabled */
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 894              		.loc 1 719 12
 895 0424 08E0     		b	.L55
 896              	.L56:
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 897              		.loc 1 721 13
 898 0426 FFF7FEFF 		bl	HAL_GetTick
 899 042a 0246     		mov	r2, r0
 900              		.loc 1 721 27
 901 042c 3B69     		ldr	r3, [r7, #16]
 902 042e D31A     		subs	r3, r2, r3
 903              		.loc 1 721 11
 904 0430 022B     		cmp	r3, #2
 905 0432 01D9     		bls	.L55
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 906              		.loc 1 723 18
 907 0434 0323     		movs	r3, #3
 908 0436 EFE1     		b	.L14
 909              	.L55:
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
ARM GAS  /tmp/ccqd3SsG.s 			page 30


 910              		.loc 1 719 13
 911 0438 324B     		ldr	r3, .L98
 912 043a D3F89430 		ldr	r3, [r3, #148]
 913 043e 03F00203 		and	r3, r3, #2
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 914              		.loc 1 719 12
 915 0442 002B     		cmp	r3, #0
 916 0444 EFD1     		bne	.L56
 917              	.L51:
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 918              		.loc 1 729 25
 919 0446 7B68     		ldr	r3, [r7, #4]
 920 0448 1B68     		ldr	r3, [r3]
 921              		.loc 1 729 43
 922 044a 03F00403 		and	r3, r3, #4
 923              		.loc 1 729 5
 924 044e 002B     		cmp	r3, #0
 925 0450 00F0A680 		beq	.L57
 926              	.LBB2:
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 927              		.loc 1 731 22
 928 0454 0023     		movs	r3, #0
 929 0456 FB77     		strb	r3, [r7, #31]
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(RCC->APB1ENR1, RCC_APB1ENR1_PWREN))
 930              		.loc 1 738 8
 931 0458 2A4B     		ldr	r3, .L98
 932 045a 9B6D     		ldr	r3, [r3, #88]
 933 045c 03F08053 		and	r3, r3, #268435456
 934              		.loc 1 738 7
 935 0460 002B     		cmp	r3, #0
 936 0462 0DD1     		bne	.L58
 937              	.LBB3:
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 938              		.loc 1 740 7
 939 0464 274B     		ldr	r3, .L98
 940 0466 9B6D     		ldr	r3, [r3, #88]
 941 0468 264A     		ldr	r2, .L98
 942 046a 43F08053 		orr	r3, r3, #268435456
 943 046e 9365     		str	r3, [r2, #88]
 944 0470 244B     		ldr	r3, .L98
 945 0472 9B6D     		ldr	r3, [r3, #88]
 946 0474 03F08053 		and	r3, r3, #268435456
 947 0478 BB60     		str	r3, [r7, #8]
 948 047a BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccqd3SsG.s 			page 31


 949              	.LBE3:
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pwrclkchanged = SET;
 950              		.loc 1 741 21
 951 047c 0123     		movs	r3, #1
 952 047e FB77     		strb	r3, [r7, #31]
 953              	.L58:
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 954              		.loc 1 744 8
 955 0480 214B     		ldr	r3, .L98+4
 956 0482 1B68     		ldr	r3, [r3]
 957 0484 03F48073 		and	r3, r3, #256
 958              		.loc 1 744 7
 959 0488 002B     		cmp	r3, #0
 960 048a 18D1     		bne	.L59
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       SET_BIT(PWR->CR1, PWR_CR1_DBP);
 961              		.loc 1 747 7
 962 048c 1E4B     		ldr	r3, .L98+4
 963 048e 1B68     		ldr	r3, [r3]
 964 0490 1D4A     		ldr	r2, .L98+4
 965 0492 43F48073 		orr	r3, r3, #256
 966 0496 1360     		str	r3, [r2]
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 967              		.loc 1 750 19
 968 0498 FFF7FEFF 		bl	HAL_GetTick
 969 049c 3861     		str	r0, [r7, #16]
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 970              		.loc 1 752 12
 971 049e 08E0     		b	.L60
 972              	.L61:
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 973              		.loc 1 754 13
 974 04a0 FFF7FEFF 		bl	HAL_GetTick
 975 04a4 0246     		mov	r2, r0
 976              		.loc 1 754 27
 977 04a6 3B69     		ldr	r3, [r7, #16]
 978 04a8 D31A     		subs	r3, r2, r3
 979              		.loc 1 754 11
 980 04aa 022B     		cmp	r3, #2
 981 04ac 01D9     		bls	.L60
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 982              		.loc 1 756 18
 983 04ae 0323     		movs	r3, #3
 984 04b0 B2E1     		b	.L14
 985              	.L60:
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 986              		.loc 1 752 13
 987 04b2 154B     		ldr	r3, .L98+4
 988 04b4 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccqd3SsG.s 			page 32


 989 04b6 03F48073 		and	r3, r3, #256
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 990              		.loc 1 752 12
 991 04ba 002B     		cmp	r3, #0
 992 04bc F0D0     		beq	.L61
 993              	.L59:
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_BDCR_LSESYSDIS)
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState & RCC_BDCR_LSEON) != 0U)
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Set LSESYSDIS bit according to LSE propagation option (enabled or disabled) */
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       MODIFY_REG(RCC->BDCR, RCC_BDCR_LSESYSDIS, (RCC_OscInitStruct->LSEState & RCC_BDCR_LSESYSDIS))
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((RCC_OscInitStruct->LSEState & RCC_BDCR_LSEBYP) != 0U)
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* LSE oscillator bypass enable */
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* LSE oscillator enable */
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 994              		.loc 1 786 5
 995 04be 7B68     		ldr	r3, [r7, #4]
 996 04c0 9B68     		ldr	r3, [r3, #8]
 997 04c2 012B     		cmp	r3, #1
 998 04c4 08D1     		bne	.L62
 999              		.loc 1 786 5 is_stmt 0 discriminator 1
 1000 04c6 0F4B     		ldr	r3, .L98
 1001 04c8 D3F89030 		ldr	r3, [r3, #144]
 1002 04cc 0D4A     		ldr	r2, .L98
 1003 04ce 43F00103 		orr	r3, r3, #1
 1004 04d2 C2F89030 		str	r3, [r2, #144]
 1005 04d6 29E0     		b	.L63
 1006              	.L62:
 1007              		.loc 1 786 5 discriminator 2
 1008 04d8 7B68     		ldr	r3, [r7, #4]
 1009 04da 9B68     		ldr	r3, [r3, #8]
 1010 04dc 052B     		cmp	r3, #5
 1011 04de 15D1     		bne	.L64
 1012              		.loc 1 786 5 discriminator 3
 1013 04e0 084B     		ldr	r3, .L98
 1014 04e2 D3F89030 		ldr	r3, [r3, #144]
ARM GAS  /tmp/ccqd3SsG.s 			page 33


 1015 04e6 074A     		ldr	r2, .L98
 1016 04e8 43F00403 		orr	r3, r3, #4
 1017 04ec C2F89030 		str	r3, [r2, #144]
 1018 04f0 044B     		ldr	r3, .L98
 1019 04f2 D3F89030 		ldr	r3, [r3, #144]
 1020 04f6 034A     		ldr	r2, .L98
 1021 04f8 43F00103 		orr	r3, r3, #1
 1022 04fc C2F89030 		str	r3, [r2, #144]
 1023 0500 14E0     		b	.L63
 1024              	.L99:
 1025 0502 00BF     		.align	2
 1026              	.L98:
 1027 0504 00100240 		.word	1073876992
 1028 0508 00700040 		.word	1073770496
 1029              	.L64:
 1030              		.loc 1 786 5 discriminator 4
 1031 050c 9A4B     		ldr	r3, .L100
 1032 050e D3F89030 		ldr	r3, [r3, #144]
 1033 0512 994A     		ldr	r2, .L100
 1034 0514 23F00103 		bic	r3, r3, #1
 1035 0518 C2F89030 		str	r3, [r2, #144]
 1036 051c 964B     		ldr	r3, .L100
 1037 051e D3F89030 		ldr	r3, [r3, #144]
 1038 0522 954A     		ldr	r2, .L100
 1039 0524 23F00403 		bic	r3, r3, #4
 1040 0528 C2F89030 		str	r3, [r2, #144]
 1041              	.L63:
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the LSE State */
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 1042              		.loc 1 790 25 is_stmt 1
 1043 052c 7B68     		ldr	r3, [r7, #4]
 1044 052e 9B68     		ldr	r3, [r3, #8]
 1045              		.loc 1 790 7
 1046 0530 002B     		cmp	r3, #0
 1047 0532 16D0     		beq	.L65
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1048              		.loc 1 793 19
 1049 0534 FFF7FEFF 		bl	HAL_GetTick
 1050 0538 3861     		str	r0, [r7, #16]
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 1051              		.loc 1 796 12
 1052 053a 0AE0     		b	.L66
 1053              	.L67:
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 1054              		.loc 1 798 13
 1055 053c FFF7FEFF 		bl	HAL_GetTick
 1056 0540 0246     		mov	r2, r0
 1057              		.loc 1 798 27
 1058 0542 3B69     		ldr	r3, [r7, #16]
 1059 0544 D31A     		subs	r3, r2, r3
ARM GAS  /tmp/ccqd3SsG.s 			page 34


 1060              		.loc 1 798 11
 1061 0546 41F28832 		movw	r2, #5000
 1062 054a 9342     		cmp	r3, r2
 1063 054c 01D9     		bls	.L66
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1064              		.loc 1 800 18
 1065 054e 0323     		movs	r3, #3
 1066 0550 62E1     		b	.L14
 1067              	.L66:
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1068              		.loc 1 796 13
 1069 0552 894B     		ldr	r3, .L100
 1070 0554 D3F89030 		ldr	r3, [r3, #144]
 1071 0558 03F00203 		and	r3, r3, #2
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1072              		.loc 1 796 12
 1073 055c 002B     		cmp	r3, #0
 1074 055e EDD0     		beq	.L67
 1075 0560 15E0     		b	.L68
 1076              	.L65:
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1077              		.loc 1 807 19
 1078 0562 FFF7FEFF 		bl	HAL_GetTick
 1079 0566 3861     		str	r0, [r7, #16]
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till LSE is disabled */
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 1080              		.loc 1 810 12
 1081 0568 0AE0     		b	.L69
 1082              	.L70:
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 1083              		.loc 1 812 13
 1084 056a FFF7FEFF 		bl	HAL_GetTick
 1085 056e 0246     		mov	r2, r0
 1086              		.loc 1 812 27
 1087 0570 3B69     		ldr	r3, [r7, #16]
 1088 0572 D31A     		subs	r3, r2, r3
 1089              		.loc 1 812 11
 1090 0574 41F28832 		movw	r2, #5000
 1091 0578 9342     		cmp	r3, r2
 1092 057a 01D9     		bls	.L69
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1093              		.loc 1 814 18
 1094 057c 0323     		movs	r3, #3
 1095 057e 4BE1     		b	.L14
 1096              	.L69:
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1097              		.loc 1 810 13
ARM GAS  /tmp/ccqd3SsG.s 			page 35


 1098 0580 7D4B     		ldr	r3, .L100
 1099 0582 D3F89030 		ldr	r3, [r3, #144]
 1100 0586 03F00203 		and	r3, r3, #2
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1101              		.loc 1 810 12
 1102 058a 002B     		cmp	r3, #0
 1103 058c EDD1     		bne	.L70
 1104              	.L68:
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_BDCR_LSESYSDIS)
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* By default, stop disabling LSE propagation */
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSDIS);
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 1105              		.loc 1 825 7
 1106 058e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1107 0590 012B     		cmp	r3, #1
 1108 0592 05D1     		bne	.L57
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 1109              		.loc 1 827 7
 1110 0594 784B     		ldr	r3, .L100
 1111 0596 9B6D     		ldr	r3, [r3, #88]
 1112 0598 774A     		ldr	r2, .L100
 1113 059a 23F08053 		bic	r3, r3, #268435456
 1114 059e 9365     		str	r3, [r2, #88]
 1115              	.L57:
 1116              	.LBE2:
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------------ HSI48 Configuration -----------------------*/
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 1117              		.loc 1 832 25
 1118 05a0 7B68     		ldr	r3, [r7, #4]
 1119 05a2 1B68     		ldr	r3, [r3]
 1120              		.loc 1 832 43
 1121 05a4 03F02003 		and	r3, r3, #32
 1122              		.loc 1 832 5
 1123 05a8 002B     		cmp	r3, #0
 1124 05aa 3CD0     		beq	.L71
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the parameters */
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check the LSI State */
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 1125              		.loc 1 838 25
 1126 05ac 7B68     		ldr	r3, [r7, #4]
 1127 05ae 5B6A     		ldr	r3, [r3, #36]
 1128              		.loc 1 838 7
 1129 05b0 002B     		cmp	r3, #0
ARM GAS  /tmp/ccqd3SsG.s 			page 36


 1130 05b2 1CD0     		beq	.L72
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (HSI48). */
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_HSI48_ENABLE();
 1131              		.loc 1 841 7
 1132 05b4 704B     		ldr	r3, .L100
 1133 05b6 D3F89830 		ldr	r3, [r3, #152]
 1134 05ba 6F4A     		ldr	r2, .L100
 1135 05bc 43F00103 		orr	r3, r3, #1
 1136 05c0 C2F89830 		str	r3, [r2, #152]
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1137              		.loc 1 844 19
 1138 05c4 FFF7FEFF 		bl	HAL_GetTick
 1139 05c8 3861     		str	r0, [r7, #16]
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till HSI48 is ready */
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == 0U)
 1140              		.loc 1 847 12
 1141 05ca 08E0     		b	.L73
 1142              	.L74:
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 1143              		.loc 1 849 13
 1144 05cc FFF7FEFF 		bl	HAL_GetTick
 1145 05d0 0246     		mov	r2, r0
 1146              		.loc 1 849 27
 1147 05d2 3B69     		ldr	r3, [r7, #16]
 1148 05d4 D31A     		subs	r3, r2, r3
 1149              		.loc 1 849 11
 1150 05d6 022B     		cmp	r3, #2
 1151 05d8 01D9     		bls	.L73
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1152              		.loc 1 851 18
 1153 05da 0323     		movs	r3, #3
 1154 05dc 1CE1     		b	.L14
 1155              	.L73:
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1156              		.loc 1 847 13
 1157 05de 664B     		ldr	r3, .L100
 1158 05e0 D3F89830 		ldr	r3, [r3, #152]
 1159 05e4 03F00203 		and	r3, r3, #2
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1160              		.loc 1 847 12
 1161 05e8 002B     		cmp	r3, #0
 1162 05ea EFD0     		beq	.L74
 1163 05ec 1BE0     		b	.L71
 1164              	.L72:
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (HSI48). */
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       __HAL_RCC_HSI48_DISABLE();
ARM GAS  /tmp/ccqd3SsG.s 			page 37


 1165              		.loc 1 858 7
 1166 05ee 624B     		ldr	r3, .L100
 1167 05f0 D3F89830 		ldr	r3, [r3, #152]
 1168 05f4 604A     		ldr	r2, .L100
 1169 05f6 23F00103 		bic	r3, r3, #1
 1170 05fa C2F89830 		str	r3, [r2, #152]
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Get Start Tick*/
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1171              		.loc 1 861 19
 1172 05fe FFF7FEFF 		bl	HAL_GetTick
 1173 0602 3861     		str	r0, [r7, #16]
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Wait till HSI48 is disabled */
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) != 0U)
 1174              		.loc 1 864 12
 1175 0604 08E0     		b	.L75
 1176              	.L76:
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 1177              		.loc 1 866 13
 1178 0606 FFF7FEFF 		bl	HAL_GetTick
 1179 060a 0246     		mov	r2, r0
 1180              		.loc 1 866 27
 1181 060c 3B69     		ldr	r3, [r7, #16]
 1182 060e D31A     		subs	r3, r2, r3
 1183              		.loc 1 866 11
 1184 0610 022B     		cmp	r3, #2
 1185 0612 01D9     		bls	.L75
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1186              		.loc 1 868 18
 1187 0614 0323     		movs	r3, #3
 1188 0616 FFE0     		b	.L14
 1189              	.L75:
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1190              		.loc 1 864 13
 1191 0618 574B     		ldr	r3, .L100
 1192 061a D3F89830 		ldr	r3, [r3, #152]
 1193 061e 03F00203 		and	r3, r3, #2
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 1194              		.loc 1 864 12
 1195 0622 002B     		cmp	r3, #0
 1196 0624 EFD1     		bne	.L76
 1197              	.L71:
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 1198              		.loc 1 878 28
 1199 0626 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccqd3SsG.s 			page 38


 1200 0628 9B6A     		ldr	r3, [r3, #40]
 1201              		.loc 1 878 5
 1202 062a 002B     		cmp	r3, #0
 1203 062c 00F0F380 		beq	.L77
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* PLL On ? */
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 1204              		.loc 1 881 30
 1205 0630 7B68     		ldr	r3, [r7, #4]
 1206 0632 9B6A     		ldr	r3, [r3, #40]
 1207              		.loc 1 881 7
 1208 0634 022B     		cmp	r3, #2
 1209 0636 40F0C980 		bne	.L78
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the parameters */
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLP_SUPPORT */
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Do nothing if PLL configuration is the unchanged */
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pll_config = RCC->PLLCFGR;
 1210              		.loc 1 894 23
 1211 063a 4F4B     		ldr	r3, .L100
 1212              		.loc 1 894 18
 1213 063c DB68     		ldr	r3, [r3, #12]
 1214 063e 7B61     		str	r3, [r7, #20]
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 1215              		.loc 1 895 11
 1216 0640 7B69     		ldr	r3, [r7, #20]
 1217 0642 03F00302 		and	r2, r3, #3
 1218              		.loc 1 895 78
 1219 0646 7B68     		ldr	r3, [r7, #4]
 1220 0648 DB6A     		ldr	r3, [r3, #44]
 1221              		.loc 1 895 9
 1222 064a 9A42     		cmp	r2, r3
 1223 064c 2CD1     		bne	.L79
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC_P
 1224              		.loc 1 896 11 discriminator 1
 1225 064e 7B69     		ldr	r3, [r7, #20]
 1226 0650 03F07002 		and	r2, r3, #112
 1227              		.loc 1 896 80 discriminator 1
 1228 0654 7B68     		ldr	r3, [r7, #4]
 1229 0656 1B6B     		ldr	r3, [r3, #48]
 1230              		.loc 1 896 86 discriminator 1
 1231 0658 013B     		subs	r3, r3, #1
 1232              		.loc 1 896 92 discriminator 1
 1233 065a 1B01     		lsls	r3, r3, #4
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 1234              		.loc 1 895 90 discriminator 1
 1235 065c 9A42     		cmp	r2, r3
 1236 065e 23D1     		bne	.L79
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_
ARM GAS  /tmp/ccqd3SsG.s 			page 39


 1237              		.loc 1 897 11
 1238 0660 7B69     		ldr	r3, [r7, #20]
 1239 0662 03F4FE42 		and	r2, r3, #32512
 1240              		.loc 1 897 79
 1241 0666 7B68     		ldr	r3, [r7, #4]
 1242 0668 5B6B     		ldr	r3, [r3, #52]
 1243              		.loc 1 897 85
 1244 066a 1B02     		lsls	r3, r3, #8
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC_P
 1245              		.loc 1 896 118
 1246 066c 9A42     		cmp	r2, r3
 1247 066e 1BD1     		bne	.L79
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_DIV_2_31_SUPPORT)
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLPDIV) != (RCC_OscInitStruct->PLL.PLLP << RCC_PLLCFGR_
 1248              		.loc 1 900 11
 1249 0670 7B69     		ldr	r3, [r7, #20]
 1250 0672 03F07842 		and	r2, r3, #-134217728
 1251              		.loc 1 900 79
 1252 0676 7B68     		ldr	r3, [r7, #4]
 1253 0678 9B6B     		ldr	r3, [r3, #56]
 1254              		.loc 1 900 85
 1255 067a DB06     		lsls	r3, r3, #27
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_
 1256              		.loc 1 897 111
 1257 067c 9A42     		cmp	r2, r3
 1258 067e 13D1     		bne	.L79
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP)    != ((RCC_OscInitStruct->PLL.PLLP == RCC_PLLP_DI
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ)    != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U
 1259              		.loc 1 905 11
 1260 0680 7B69     		ldr	r3, [r7, #20]
 1261 0682 03F4C002 		and	r2, r3, #6291456
 1262              		.loc 1 905 82
 1263 0686 7B68     		ldr	r3, [r7, #4]
 1264 0688 DB6B     		ldr	r3, [r3, #60]
 1265              		.loc 1 905 89
 1266 068a 5B08     		lsrs	r3, r3, #1
 1267              		.loc 1 905 96
 1268 068c 013B     		subs	r3, r3, #1
 1269              		.loc 1 905 102
 1270 068e 5B05     		lsls	r3, r3, #21
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 1271              		.loc 1 900 114
 1272 0690 9A42     		cmp	r2, r3
 1273 0692 09D1     		bne	.L79
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLR)    != ((((RCC_OscInitStruct->PLL.PLLR) >> 1U) - 1U
 1274              		.loc 1 906 11
 1275 0694 7B69     		ldr	r3, [r7, #20]
 1276 0696 03F0C062 		and	r2, r3, #100663296
 1277              		.loc 1 906 82
 1278 069a 7B68     		ldr	r3, [r7, #4]
 1279 069c 1B6C     		ldr	r3, [r3, #64]
 1280              		.loc 1 906 89
 1281 069e 5B08     		lsrs	r3, r3, #1
ARM GAS  /tmp/ccqd3SsG.s 			page 40


 1282              		.loc 1 906 96
 1283 06a0 013B     		subs	r3, r3, #1
 1284              		.loc 1 906 102
 1285 06a2 5B06     		lsls	r3, r3, #25
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****          (READ_BIT(pll_config, RCC_PLLCFGR_PLLR)    != ((((RCC_OscInitStruct->PLL.PLLR) >> 1U) - 1U
 1286              		.loc 1 905 128
 1287 06a4 9A42     		cmp	r2, r3
 1288 06a6 6BD0     		beq	.L80
 1289              	.L79:
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Check if the PLL is used as system clock or not */
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(sysclk_source != RCC_CFGR_SWS_PLL)
 1290              		.loc 1 909 11
 1291 06a8 BB69     		ldr	r3, [r7, #24]
 1292 06aa 0C2B     		cmp	r3, #12
 1293 06ac 62D0     		beq	.L81
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI1_SUPPORT) || defined(RCC_PLLSAI2_SUPPORT)
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Check if main PLL can be updated */
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Not possible if the source is shared by other enabled PLLSAIx */
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((READ_BIT(RCC->CR, RCC_CR_PLLSAI1ON) != 0U)
 1294              		.loc 1 914 15
 1295 06ae 324B     		ldr	r3, .L100
 1296 06b0 1B68     		ldr	r3, [r3]
 1297 06b2 03F08063 		and	r3, r3, #67108864
 1298              		.loc 1 914 13
 1299 06b6 002B     		cmp	r3, #0
 1300 06b8 01D0     		beq	.L82
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****              || (READ_BIT(RCC->CR, RCC_CR_PLLSAI2ON) != 0U)
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             )
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_ERROR;
 1301              		.loc 1 920 20
 1302 06ba 0123     		movs	r3, #1
 1303 06bc ACE0     		b	.L14
 1304              	.L82:
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           else
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI1_SUPPORT || RCC_PLLSAI2_SUPPORT */
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             /* Disable the main PLL. */
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             __HAL_RCC_PLL_DISABLE();
 1305              		.loc 1 926 13
 1306 06be 2E4B     		ldr	r3, .L100
 1307 06c0 1B68     		ldr	r3, [r3]
 1308 06c2 2D4A     		ldr	r2, .L100
 1309 06c4 23F08073 		bic	r3, r3, #16777216
 1310 06c8 1360     		str	r3, [r2]
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             /* Get Start Tick*/
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             tickstart = HAL_GetTick();
 1311              		.loc 1 929 25
 1312 06ca FFF7FEFF 		bl	HAL_GetTick
 1313 06ce 3861     		str	r0, [r7, #16]
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccqd3SsG.s 			page 41


 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             /* Wait till PLL is ready */
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 1314              		.loc 1 932 18
 1315 06d0 08E0     		b	.L83
 1316              	.L84:
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1317              		.loc 1 934 19
 1318 06d2 FFF7FEFF 		bl	HAL_GetTick
 1319 06d6 0246     		mov	r2, r0
 1320              		.loc 1 934 33
 1321 06d8 3B69     		ldr	r3, [r7, #16]
 1322 06da D31A     		subs	r3, r2, r3
 1323              		.loc 1 934 17
 1324 06dc 022B     		cmp	r3, #2
 1325 06de 01D9     		bls	.L83
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               {
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 return HAL_TIMEOUT;
 1326              		.loc 1 936 24
 1327 06e0 0323     		movs	r3, #3
 1328 06e2 99E0     		b	.L14
 1329              	.L83:
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 1330              		.loc 1 932 19
 1331 06e4 244B     		ldr	r3, .L100
 1332 06e6 1B68     		ldr	r3, [r3]
 1333 06e8 03F00073 		and	r3, r3, #33554432
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 1334              		.loc 1 932 18
 1335 06ec 002B     		cmp	r3, #0
 1336 06ee F0D1     		bne	.L84
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               }
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             }
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             /* Configure the main PLL clock source, multiplication and division factors. */
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 1337              		.loc 1 942 13
 1338 06f0 214B     		ldr	r3, .L100
 1339 06f2 DA68     		ldr	r2, [r3, #12]
 1340 06f4 214B     		ldr	r3, .L100+4
 1341 06f6 1340     		ands	r3, r3, r2
 1342 06f8 7A68     		ldr	r2, [r7, #4]
 1343 06fa D16A     		ldr	r1, [r2, #44]
 1344 06fc 7A68     		ldr	r2, [r7, #4]
 1345 06fe 126B     		ldr	r2, [r2, #48]
 1346 0700 013A     		subs	r2, r2, #1
 1347 0702 1201     		lsls	r2, r2, #4
 1348 0704 1143     		orrs	r1, r1, r2
 1349 0706 7A68     		ldr	r2, [r7, #4]
 1350 0708 526B     		ldr	r2, [r2, #52]
 1351 070a 1202     		lsls	r2, r2, #8
 1352 070c 1143     		orrs	r1, r1, r2
 1353 070e 7A68     		ldr	r2, [r7, #4]
 1354 0710 D26B     		ldr	r2, [r2, #60]
 1355 0712 5208     		lsrs	r2, r2, #1
 1356 0714 013A     		subs	r2, r2, #1
ARM GAS  /tmp/ccqd3SsG.s 			page 42


 1357 0716 5205     		lsls	r2, r2, #21
 1358 0718 1143     		orrs	r1, r1, r2
 1359 071a 7A68     		ldr	r2, [r7, #4]
 1360 071c 126C     		ldr	r2, [r2, #64]
 1361 071e 5208     		lsrs	r2, r2, #1
 1362 0720 013A     		subs	r2, r2, #1
 1363 0722 5206     		lsls	r2, r2, #25
 1364 0724 1143     		orrs	r1, r1, r2
 1365 0726 7A68     		ldr	r2, [r7, #4]
 1366 0728 926B     		ldr	r2, [r2, #56]
 1367 072a D206     		lsls	r2, r2, #27
 1368 072c 0A43     		orrs	r2, r2, r1
 1369 072e 1249     		ldr	r1, .L100
 1370 0730 1343     		orrs	r3, r3, r2
 1371 0732 CB60     		str	r3, [r1, #12]
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLM,
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLN,
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLP,
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLQ,
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLR);
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLM,
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLN,
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLQ,
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLR);
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             /* Enable the main PLL. */
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             __HAL_RCC_PLL_ENABLE();
 1372              		.loc 1 957 13
 1373 0734 104B     		ldr	r3, .L100
 1374 0736 1B68     		ldr	r3, [r3]
 1375 0738 0F4A     		ldr	r2, .L100
 1376 073a 43F08073 		orr	r3, r3, #16777216
 1377 073e 1360     		str	r3, [r2]
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             /* Enable PLL System Clock output. */
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 1378              		.loc 1 960 13
 1379 0740 0D4B     		ldr	r3, .L100
 1380 0742 DB68     		ldr	r3, [r3, #12]
 1381 0744 0C4A     		ldr	r2, .L100
 1382 0746 43F08073 		orr	r3, r3, #16777216
 1383 074a D360     		str	r3, [r2, #12]
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             /* Get Start Tick*/
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             tickstart = HAL_GetTick();
 1384              		.loc 1 963 25
 1385 074c FFF7FEFF 		bl	HAL_GetTick
 1386 0750 3861     		str	r0, [r7, #16]
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             /* Wait till PLL is ready */
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 1387              		.loc 1 966 18
 1388 0752 08E0     		b	.L85
 1389              	.L86:
ARM GAS  /tmp/ccqd3SsG.s 			page 43


 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1390              		.loc 1 968 19
 1391 0754 FFF7FEFF 		bl	HAL_GetTick
 1392 0758 0246     		mov	r2, r0
 1393              		.loc 1 968 33
 1394 075a 3B69     		ldr	r3, [r7, #16]
 1395 075c D31A     		subs	r3, r2, r3
 1396              		.loc 1 968 17
 1397 075e 022B     		cmp	r3, #2
 1398 0760 01D9     		bls	.L85
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               {
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                 return HAL_TIMEOUT;
 1399              		.loc 1 970 24
 1400 0762 0323     		movs	r3, #3
 1401 0764 58E0     		b	.L14
 1402              	.L85:
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 1403              		.loc 1 966 19
 1404 0766 044B     		ldr	r3, .L100
 1405 0768 1B68     		ldr	r3, [r3]
 1406 076a 03F00073 		and	r3, r3, #33554432
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
 1407              		.loc 1 966 18
 1408 076e 002B     		cmp	r3, #0
 1409 0770 F0D0     		beq	.L86
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1410              		.loc 1 909 11
 1411 0772 50E0     		b	.L77
 1412              	.L81:
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               }
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             }
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         else
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* PLL is already used as System core clock */
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 1413              		.loc 1 978 18
 1414 0774 0123     		movs	r3, #1
 1415 0776 4FE0     		b	.L14
 1416              	.L101:
 1417              		.align	2
 1418              	.L100:
 1419 0778 00100240 		.word	1073876992
 1420 077c 8C809D01 		.word	27099276
 1421              	.L80:
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* PLL configuration is unchanged */
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Re-enable PLL if it was disabled (ie. low power mode) */
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 1422              		.loc 1 985 12
 1423 0780 274B     		ldr	r3, .L102
 1424 0782 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccqd3SsG.s 			page 44


 1425 0784 03F00073 		and	r3, r3, #33554432
 1426              		.loc 1 985 11
 1427 0788 002B     		cmp	r3, #0
 1428 078a 44D1     		bne	.L77
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Enable the main PLL. */
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_PLL_ENABLE();
 1429              		.loc 1 988 11
 1430 078c 244B     		ldr	r3, .L102
 1431 078e 1B68     		ldr	r3, [r3]
 1432 0790 234A     		ldr	r2, .L102
 1433 0792 43F08073 		orr	r3, r3, #16777216
 1434 0796 1360     		str	r3, [r2]
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Enable PLL System Clock output. */
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 1435              		.loc 1 991 11
 1436 0798 214B     		ldr	r3, .L102
 1437 079a DB68     		ldr	r3, [r3, #12]
 1438 079c 204A     		ldr	r2, .L102
 1439 079e 43F08073 		orr	r3, r3, #16777216
 1440 07a2 D360     		str	r3, [r2, #12]
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Get Start Tick*/
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           tickstart = HAL_GetTick();
 1441              		.loc 1 994 23
 1442 07a4 FFF7FEFF 		bl	HAL_GetTick
 1443 07a8 3861     		str	r0, [r7, #16]
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           /* Wait till PLL is ready */
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 1444              		.loc 1 997 16
 1445 07aa 08E0     		b	.L89
 1446              	.L90:
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1447              		.loc 1 999 17
 1448 07ac FFF7FEFF 		bl	HAL_GetTick
 1449 07b0 0246     		mov	r2, r0
 1450              		.loc 1 999 31
 1451 07b2 3B69     		ldr	r3, [r7, #16]
 1452 07b4 D31A     		subs	r3, r2, r3
 1453              		.loc 1 999 15
 1454 07b6 022B     		cmp	r3, #2
 1455 07b8 01D9     		bls	.L89
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             {
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****               return HAL_TIMEOUT;
 1456              		.loc 1 1001 22
 1457 07ba 0323     		movs	r3, #3
 1458 07bc 2CE0     		b	.L14
 1459              	.L89:
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
 1460              		.loc 1 997 17
 1461 07be 184B     		ldr	r3, .L102
 1462 07c0 1B68     		ldr	r3, [r3]
 1463 07c2 03F00073 		and	r3, r3, #33554432
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
ARM GAS  /tmp/ccqd3SsG.s 			page 45


 1464              		.loc 1 997 16
 1465 07c6 002B     		cmp	r3, #0
 1466 07c8 F0D0     		beq	.L90
 1467 07ca 24E0     		b	.L77
 1468              	.L78:
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             }
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check that PLL is not used as system clock or not */
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(sysclk_source != RCC_CFGR_SWS_PLL)
 1469              		.loc 1 1010 9
 1470 07cc BB69     		ldr	r3, [r7, #24]
 1471 07ce 0C2B     		cmp	r3, #12
 1472 07d0 1FD0     		beq	.L91
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Disable the main PLL. */
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1473              		.loc 1 1013 9
 1474 07d2 134B     		ldr	r3, .L102
 1475 07d4 1B68     		ldr	r3, [r3]
 1476 07d6 124A     		ldr	r2, .L102
 1477 07d8 23F08073 		bic	r3, r3, #16777216
 1478 07dc 1360     		str	r3, [r2]
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Get Start Tick*/
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1479              		.loc 1 1016 21
 1480 07de FFF7FEFF 		bl	HAL_GetTick
 1481 07e2 3861     		str	r0, [r7, #16]
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Wait till PLL is disabled */
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 1482              		.loc 1 1019 14
 1483 07e4 08E0     		b	.L92
 1484              	.L93:
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1485              		.loc 1 1021 15
 1486 07e6 FFF7FEFF 		bl	HAL_GetTick
 1487 07ea 0246     		mov	r2, r0
 1488              		.loc 1 1021 29
 1489 07ec 3B69     		ldr	r3, [r7, #16]
 1490 07ee D31A     		subs	r3, r2, r3
 1491              		.loc 1 1021 13
 1492 07f0 022B     		cmp	r3, #2
 1493 07f2 01D9     		bls	.L92
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           {
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1494              		.loc 1 1023 20
 1495 07f4 0323     		movs	r3, #3
 1496 07f6 0FE0     		b	.L14
 1497              	.L92:
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
ARM GAS  /tmp/ccqd3SsG.s 			page 46


 1498              		.loc 1 1019 15
 1499 07f8 094B     		ldr	r3, .L102
 1500 07fa 1B68     		ldr	r3, [r3]
 1501 07fc 03F00073 		and	r3, r3, #33554432
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
 1502              		.loc 1 1019 14
 1503 0800 002B     		cmp	r3, #0
 1504 0802 F0D1     		bne	.L93
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           }
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Unselect main PLL clock source and disable main PLL outputs to save power */
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLSAI2_SUPPORT)
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLSRC | RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI3CLK);
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #elif defined(RCC_PLLSAI1_SUPPORT)
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLSRC | RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI2CLK);
 1505              		.loc 1 1030 22
 1506 0804 064B     		ldr	r3, .L102
 1507 0806 DA68     		ldr	r2, [r3, #12]
 1508 0808 0549     		ldr	r1, .L102
 1509 080a 064B     		ldr	r3, .L102+4
 1510 080c 1340     		ands	r3, r3, r2
 1511 080e CB60     		str	r3, [r1, #12]
 1512 0810 01E0     		b	.L77
 1513              	.L91:
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLSRC | RCC_PLL_SYSCLK | RCC_PLL_48M1CLK);
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLSAI2_SUPPORT */
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* PLL is already used as System core clock */
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 1514              		.loc 1 1038 16
 1515 0812 0123     		movs	r3, #1
 1516 0814 00E0     		b	.L14
 1517              	.L77:
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return HAL_OK;
 1518              		.loc 1 1042 10
 1519 0816 0023     		movs	r3, #0
 1520              	.L14:
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 1521              		.loc 1 1043 1
 1522 0818 1846     		mov	r0, r3
 1523 081a 2037     		adds	r7, r7, #32
 1524              	.LCFI8:
 1525              		.cfi_def_cfa_offset 8
 1526 081c BD46     		mov	sp, r7
 1527              	.LCFI9:
 1528              		.cfi_def_cfa_register 13
 1529              		@ sp needed
 1530 081e 80BD     		pop	{r7, pc}
 1531              	.L103:
 1532              		.align	2
 1533              	.L102:
ARM GAS  /tmp/ccqd3SsG.s 			page 47


 1534 0820 00100240 		.word	1073876992
 1535 0824 FCFFEEFE 		.word	-17891332
 1536              		.cfi_endproc
 1537              	.LFE133:
 1539              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1540              		.align	1
 1541              		.global	HAL_RCC_ClockConfig
 1542              		.syntax unified
 1543              		.thumb
 1544              		.thumb_func
 1546              	HAL_RCC_ClockConfig:
 1547              	.LFB134:
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Initialize the CPU, AHB and APB busses clocks according to the specified
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct  pointer to an RCC_OscInitTypeDef structure that
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  FLatency  FLASH Latency
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_0   FLASH 0 Latency cycle
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_1   FLASH 1 Latency cycle
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_2   FLASH 2 Latency cycles
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_3   FLASH 3 Latency cycles
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_4   FLASH 4 Latency cycles
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @if STM32L4S9xx
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_5   FLASH 5 Latency cycles
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_6   FLASH 6 Latency cycles
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_7   FLASH 7 Latency cycles
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_8   FLASH 8 Latency cycles
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_9   FLASH 9 Latency cycles
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_10  FLASH 10 Latency cycles
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_11  FLASH 11 Latency cycles
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_12  FLASH 12 Latency cycles
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_13  FLASH 13 Latency cycles
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_14  FLASH 14 Latency cycles
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_15  FLASH 15 Latency cycles
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @endif
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The MSI is used by default as system clock source after
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STANDBY mode. After restart from Reset,
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         the MSI frequency is set to its default value 4 MHz.
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The HSI can be selected as system clock source after
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         from STOP modes or in case of failure of the HSE used directly or indirectly
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         as system clock (if the Clock Security System CSS is enabled).
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         occur when the clock source is ready.
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   You can use HAL_RCC_GetClockConfig() function to know which clock is
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         currently used as system clock source.
ARM GAS  /tmp/ccqd3SsG.s 			page 48


1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 1548              		.loc 1 1096 1
 1549              		.cfi_startproc
 1550              		@ args = 0, pretend = 0, frame = 16
 1551              		@ frame_needed = 1, uses_anonymous_args = 0
 1552 0000 80B5     		push	{r7, lr}
 1553              	.LCFI10:
 1554              		.cfi_def_cfa_offset 8
 1555              		.cfi_offset 7, -8
 1556              		.cfi_offset 14, -4
 1557 0002 84B0     		sub	sp, sp, #16
 1558              	.LCFI11:
 1559              		.cfi_def_cfa_offset 24
 1560 0004 00AF     		add	r7, sp, #0
 1561              	.LCFI12:
 1562              		.cfi_def_cfa_register 7
 1563 0006 7860     		str	r0, [r7, #4]
 1564 0008 3960     		str	r1, [r7]
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t tickstart;
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || \
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t hpre = RCC_SYSCLK_DIV1;
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   HAL_StatusTypeDef status;
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check Null pointer */
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 1565              		.loc 1 1105 5
 1566 000a 7B68     		ldr	r3, [r7, #4]
 1567 000c 002B     		cmp	r3, #0
 1568 000e 01D1     		bne	.L105
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     return HAL_ERROR;
 1569              		.loc 1 1107 12
 1570 0010 0123     		movs	r3, #1
 1571 0012 E7E0     		b	.L106
 1572              	.L105:
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 1573              		.loc 1 1119 17
ARM GAS  /tmp/ccqd3SsG.s 			page 49


 1574 0014 754B     		ldr	r3, .L120
 1575 0016 1B68     		ldr	r3, [r3]
 1576 0018 03F00703 		and	r3, r3, #7
 1577              		.loc 1 1119 5
 1578 001c 3A68     		ldr	r2, [r7]
 1579 001e 9A42     		cmp	r2, r3
 1580 0020 10D9     		bls	.L107
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1581              		.loc 1 1122 5
 1582 0022 724B     		ldr	r3, .L120
 1583 0024 1B68     		ldr	r3, [r3]
 1584 0026 23F00702 		bic	r2, r3, #7
 1585 002a 7049     		ldr	r1, .L120
 1586 002c 3B68     		ldr	r3, [r7]
 1587 002e 1343     		orrs	r3, r3, r2
 1588 0030 0B60     		str	r3, [r1]
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1589              		.loc 1 1126 8
 1590 0032 6E4B     		ldr	r3, .L120
 1591 0034 1B68     		ldr	r3, [r3]
 1592 0036 03F00703 		and	r3, r3, #7
 1593              		.loc 1 1126 7
 1594 003a 3A68     		ldr	r2, [r7]
 1595 003c 9A42     		cmp	r2, r3
 1596 003e 01D0     		beq	.L107
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_ERROR;
 1597              		.loc 1 1128 14
 1598 0040 0123     		movs	r3, #1
 1599 0042 CFE0     		b	.L106
 1600              	.L107:
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*----------------- HCLK Configuration prior to SYSCLK----------------------*/
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Apply higher HCLK prescaler request here to ensure CPU clock is not of of spec when SYSCLK is 
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1601              		.loc 1 1134 25
 1602 0044 7B68     		ldr	r3, [r7, #4]
 1603 0046 1B68     		ldr	r3, [r3]
 1604              		.loc 1 1134 38
 1605 0048 03F00203 		and	r3, r3, #2
 1606              		.loc 1 1134 5
 1607 004c 002B     		cmp	r3, #0
 1608 004e 10D0     		beq	.L108
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_ClkInitStruct->AHBCLKDivider > READ_BIT(RCC->CFGR, RCC_CFGR_HPRE))
 1609              		.loc 1 1138 25
 1610 0050 7B68     		ldr	r3, [r7, #4]
 1611 0052 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/ccqd3SsG.s 			page 50


 1612              		.loc 1 1138 43
 1613 0054 664B     		ldr	r3, .L120+4
 1614 0056 9B68     		ldr	r3, [r3, #8]
 1615 0058 03F0F003 		and	r3, r3, #240
 1616              		.loc 1 1138 7
 1617 005c 9A42     		cmp	r2, r3
 1618 005e 08D9     		bls	.L108
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1619              		.loc 1 1140 7
 1620 0060 634B     		ldr	r3, .L120+4
 1621 0062 9B68     		ldr	r3, [r3, #8]
 1622 0064 23F0F002 		bic	r2, r3, #240
 1623 0068 7B68     		ldr	r3, [r7, #4]
 1624 006a 9B68     		ldr	r3, [r3, #8]
 1625 006c 6049     		ldr	r1, .L120+4
 1626 006e 1343     		orrs	r3, r3, r2
 1627 0070 8B60     		str	r3, [r1, #8]
 1628              	.L108:
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1629              		.loc 1 1145 25
 1630 0072 7B68     		ldr	r3, [r7, #4]
 1631 0074 1B68     		ldr	r3, [r3]
 1632              		.loc 1 1145 38
 1633 0076 03F00103 		and	r3, r3, #1
 1634              		.loc 1 1145 5
 1635 007a 002B     		cmp	r3, #0
 1636 007c 4CD0     		beq	.L109
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1637              		.loc 1 1150 25
 1638 007e 7B68     		ldr	r3, [r7, #4]
 1639 0080 5B68     		ldr	r3, [r3, #4]
 1640              		.loc 1 1150 7
 1641 0082 032B     		cmp	r3, #3
 1642 0084 07D1     		bne	.L110
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Check the PLL ready flag */
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 1643              		.loc 1 1153 10
 1644 0086 5A4B     		ldr	r3, .L120+4
 1645 0088 1B68     		ldr	r3, [r3]
 1646 008a 03F00073 		and	r3, r3, #33554432
 1647              		.loc 1 1153 9
 1648 008e 002B     		cmp	r3, #0
 1649 0090 21D1     		bne	.L111
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_ERROR;
 1650              		.loc 1 1155 16
 1651 0092 0123     		movs	r3, #1
ARM GAS  /tmp/ccqd3SsG.s 			page 51


 1652 0094 A6E0     		b	.L106
 1653              	.L110:
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || \
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Undershoot management when selection PLL as SYSCLK source and frequency above 80Mhz */
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Compute target PLL output frequency */
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_GetSysClockFreqFromPLLSource() > 80000000U)
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* If lowest HCLK prescaler, apply intermediate step with HCLK prescaler 2 necessary before
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) == RCC_SYSCLK_DIV1)
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           hpre = RCC_SYSCLK_DIV2;
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* HSE is selected as System Clock Source */
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1654              		.loc 1 1175 27
 1655 0096 7B68     		ldr	r3, [r7, #4]
 1656 0098 5B68     		ldr	r3, [r3, #4]
 1657              		.loc 1 1175 9
 1658 009a 022B     		cmp	r3, #2
 1659 009c 07D1     		bne	.L112
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Check the HSE ready flag */
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 1660              		.loc 1 1178 12
 1661 009e 544B     		ldr	r3, .L120+4
 1662 00a0 1B68     		ldr	r3, [r3]
 1663 00a2 03F40033 		and	r3, r3, #131072
 1664              		.loc 1 1178 11
 1665 00a6 002B     		cmp	r3, #0
 1666 00a8 15D1     		bne	.L111
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 1667              		.loc 1 1180 18
 1668 00aa 0123     		movs	r3, #1
 1669 00ac 9AE0     		b	.L106
 1670              	.L112:
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI is selected as System Clock Source */
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 1671              		.loc 1 1184 32
 1672 00ae 7B68     		ldr	r3, [r7, #4]
 1673 00b0 5B68     		ldr	r3, [r3, #4]
 1674              		.loc 1 1184 14
 1675 00b2 002B     		cmp	r3, #0
 1676 00b4 07D1     		bne	.L113
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Check the MSI ready flag */
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
ARM GAS  /tmp/ccqd3SsG.s 			page 52


 1677              		.loc 1 1187 12
 1678 00b6 4E4B     		ldr	r3, .L120+4
 1679 00b8 1B68     		ldr	r3, [r3]
 1680 00ba 03F00203 		and	r3, r3, #2
 1681              		.loc 1 1187 11
 1682 00be 002B     		cmp	r3, #0
 1683 00c0 09D1     		bne	.L111
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 1684              		.loc 1 1189 18
 1685 00c2 0123     		movs	r3, #1
 1686 00c4 8EE0     		b	.L106
 1687              	.L113:
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* HSI is selected as System Clock Source */
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* Check the HSI ready flag */
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 1688              		.loc 1 1196 12
 1689 00c6 4A4B     		ldr	r3, .L120+4
 1690 00c8 1B68     		ldr	r3, [r3]
 1691 00ca 03F48063 		and	r3, r3, #1024
 1692              		.loc 1 1196 11
 1693 00ce 002B     		cmp	r3, #0
 1694 00d0 01D1     		bne	.L111
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           return HAL_ERROR;
 1695              		.loc 1 1198 18
 1696 00d2 0123     		movs	r3, #1
 1697 00d4 86E0     		b	.L106
 1698              	.L111:
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || \
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* Overshoot management when going down from PLL as SYSCLK source and frequency above 80Mhz *
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(HAL_RCC_GetSysClockFreq() > 80000000U)
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* If lowest HCLK prescaler, apply intermediate step with HCLK prescaler 2 necessary before
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         if(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) == RCC_SYSCLK_DIV1)
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         {
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****           hpre = RCC_SYSCLK_DIV2;
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         }
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 1699              		.loc 1 1217 5
 1700 00d6 464B     		ldr	r3, .L120+4
 1701 00d8 9B68     		ldr	r3, [r3, #8]
 1702 00da 23F00302 		bic	r2, r3, #3
 1703 00de 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccqd3SsG.s 			page 53


 1704 00e0 5B68     		ldr	r3, [r3, #4]
 1705 00e2 4349     		ldr	r1, .L120+4
 1706 00e4 1343     		orrs	r3, r3, r2
 1707 00e6 8B60     		str	r3, [r1, #8]
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Get Start Tick*/
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1708              		.loc 1 1220 17
 1709 00e8 FFF7FEFF 		bl	HAL_GetTick
 1710 00ec F860     		str	r0, [r7, #12]
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     while(__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1711              		.loc 1 1222 10
 1712 00ee 0AE0     		b	.L114
 1713              	.L115:
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1714              		.loc 1 1224 11
 1715 00f0 FFF7FEFF 		bl	HAL_GetTick
 1716 00f4 0246     		mov	r2, r0
 1717              		.loc 1 1224 25
 1718 00f6 FB68     		ldr	r3, [r7, #12]
 1719 00f8 D31A     		subs	r3, r2, r3
 1720              		.loc 1 1224 9
 1721 00fa 41F28832 		movw	r2, #5000
 1722 00fe 9342     		cmp	r3, r2
 1723 0100 01D9     		bls	.L114
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1724              		.loc 1 1226 16
 1725 0102 0323     		movs	r3, #3
 1726 0104 6EE0     		b	.L106
 1727              	.L114:
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1728              		.loc 1 1222 11
 1729 0106 3A4B     		ldr	r3, .L120+4
 1730 0108 9B68     		ldr	r3, [r3, #8]
 1731 010a 03F00C02 		and	r2, r3, #12
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1732              		.loc 1 1222 62
 1733 010e 7B68     		ldr	r3, [r7, #4]
 1734 0110 5B68     		ldr	r3, [r3, #4]
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1735              		.loc 1 1222 77
 1736 0112 9B00     		lsls	r3, r3, #2
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 1737              		.loc 1 1222 10
 1738 0114 9A42     		cmp	r2, r3
 1739 0116 EBD1     		bne	.L115
 1740              	.L109:
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || \
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Is intermediate HCLK prescaler 2 applied internally, resume with HCLK prescaler 1 */
ARM GAS  /tmp/ccqd3SsG.s 			page 54


1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(hpre == RCC_SYSCLK_DIV2)
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV1);
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*----------------- HCLK Configuration after SYSCLK-------------------------*/
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Apply lower HCLK prescaler request here to ensure CPU clock is not of of spec when SYSCLK is s
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1741              		.loc 1 1242 25
 1742 0118 7B68     		ldr	r3, [r7, #4]
 1743 011a 1B68     		ldr	r3, [r3]
 1744              		.loc 1 1242 38
 1745 011c 03F00203 		and	r3, r3, #2
 1746              		.loc 1 1242 5
 1747 0120 002B     		cmp	r3, #0
 1748 0122 10D0     		beq	.L116
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(RCC_ClkInitStruct->AHBCLKDivider < READ_BIT(RCC->CFGR, RCC_CFGR_HPRE))
 1749              		.loc 1 1244 25
 1750 0124 7B68     		ldr	r3, [r7, #4]
 1751 0126 9A68     		ldr	r2, [r3, #8]
 1752              		.loc 1 1244 43
 1753 0128 314B     		ldr	r3, .L120+4
 1754 012a 9B68     		ldr	r3, [r3, #8]
 1755 012c 03F0F003 		and	r3, r3, #240
 1756              		.loc 1 1244 7
 1757 0130 9A42     		cmp	r2, r3
 1758 0132 08D2     		bcs	.L116
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1759              		.loc 1 1246 7
 1760 0134 2E4B     		ldr	r3, .L120+4
 1761 0136 9B68     		ldr	r3, [r3, #8]
 1762 0138 23F0F002 		bic	r2, r3, #240
 1763 013c 7B68     		ldr	r3, [r7, #4]
 1764 013e 9B68     		ldr	r3, [r3, #8]
 1765 0140 2B49     		ldr	r1, .L120+4
 1766 0142 1343     		orrs	r3, r3, r2
 1767 0144 8B60     		str	r3, [r1, #8]
 1768              	.L116:
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Allow decreasing of the number of wait states (because of lower CPU frequency expected) */
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 1769              		.loc 1 1251 17
 1770 0146 294B     		ldr	r3, .L120
 1771 0148 1B68     		ldr	r3, [r3]
 1772 014a 03F00703 		and	r3, r3, #7
 1773              		.loc 1 1251 5
 1774 014e 3A68     		ldr	r2, [r7]
 1775 0150 9A42     		cmp	r2, r3
 1776 0152 10D2     		bcs	.L117
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
ARM GAS  /tmp/ccqd3SsG.s 			page 55


 1777              		.loc 1 1254 5
 1778 0154 254B     		ldr	r3, .L120
 1779 0156 1B68     		ldr	r3, [r3]
 1780 0158 23F00702 		bic	r2, r3, #7
 1781 015c 2349     		ldr	r1, .L120
 1782 015e 3B68     		ldr	r3, [r7]
 1783 0160 1343     		orrs	r3, r3, r2
 1784 0162 0B60     		str	r3, [r1]
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1785              		.loc 1 1258 8
 1786 0164 214B     		ldr	r3, .L120
 1787 0166 1B68     		ldr	r3, [r3]
 1788 0168 03F00703 		and	r3, r3, #7
 1789              		.loc 1 1258 7
 1790 016c 3A68     		ldr	r2, [r7]
 1791 016e 9A42     		cmp	r2, r3
 1792 0170 01D0     		beq	.L117
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       return HAL_ERROR;
 1793              		.loc 1 1260 14
 1794 0172 0123     		movs	r3, #1
 1795 0174 36E0     		b	.L106
 1796              	.L117:
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1797              		.loc 1 1265 25
 1798 0176 7B68     		ldr	r3, [r7, #4]
 1799 0178 1B68     		ldr	r3, [r3]
 1800              		.loc 1 1265 38
 1801 017a 03F00403 		and	r3, r3, #4
 1802              		.loc 1 1265 5
 1803 017e 002B     		cmp	r3, #0
 1804 0180 08D0     		beq	.L118
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1805              		.loc 1 1268 5
 1806 0182 1B4B     		ldr	r3, .L120+4
 1807 0184 9B68     		ldr	r3, [r3, #8]
 1808 0186 23F4E062 		bic	r2, r3, #1792
 1809 018a 7B68     		ldr	r3, [r7, #4]
 1810 018c DB68     		ldr	r3, [r3, #12]
 1811 018e 1849     		ldr	r1, .L120+4
 1812 0190 1343     		orrs	r3, r3, r2
 1813 0192 8B60     		str	r3, [r1, #8]
 1814              	.L118:
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1815              		.loc 1 1272 25
ARM GAS  /tmp/ccqd3SsG.s 			page 56


 1816 0194 7B68     		ldr	r3, [r7, #4]
 1817 0196 1B68     		ldr	r3, [r3]
 1818              		.loc 1 1272 38
 1819 0198 03F00803 		and	r3, r3, #8
 1820              		.loc 1 1272 5
 1821 019c 002B     		cmp	r3, #0
 1822 019e 09D0     		beq	.L119
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1823              		.loc 1 1275 5
 1824 01a0 134B     		ldr	r3, .L120+4
 1825 01a2 9B68     		ldr	r3, [r3, #8]
 1826 01a4 23F46052 		bic	r2, r3, #14336
 1827 01a8 7B68     		ldr	r3, [r7, #4]
 1828 01aa 1B69     		ldr	r3, [r3, #16]
 1829 01ac DB00     		lsls	r3, r3, #3
 1830 01ae 1049     		ldr	r1, .L120+4
 1831 01b0 1343     		orrs	r3, r3, r2
 1832 01b2 8B60     		str	r3, [r1, #8]
 1833              	.L119:
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) 
 1834              		.loc 1 1279 21
 1835 01b4 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1836 01b8 0246     		mov	r2, r0
 1837              		.loc 1 1279 65
 1838 01ba 0D4B     		ldr	r3, .L120+4
 1839 01bc 9B68     		ldr	r3, [r3, #8]
 1840              		.loc 1 1279 100
 1841 01be 1B09     		lsrs	r3, r3, #4
 1842 01c0 03F00F03 		and	r3, r3, #15
 1843              		.loc 1 1279 64
 1844 01c4 0B49     		ldr	r1, .L120+8
 1845 01c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1846              		.loc 1 1279 122
 1847 01c8 03F01F03 		and	r3, r3, #31
 1848              		.loc 1 1279 47
 1849 01cc 22FA03F3 		lsr	r3, r2, r3
 1850              		.loc 1 1279 19
 1851 01d0 094A     		ldr	r2, .L120+12
 1852 01d2 1360     		str	r3, [r2]
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   status = HAL_InitTick(uwTickPrio);
 1853              		.loc 1 1282 12
 1854 01d4 094B     		ldr	r3, .L120+16
 1855 01d6 1B68     		ldr	r3, [r3]
 1856 01d8 1846     		mov	r0, r3
 1857 01da FFF7FEFF 		bl	HAL_InitTick
 1858 01de 0346     		mov	r3, r0
 1859 01e0 FB72     		strb	r3, [r7, #11]
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return status;
 1860              		.loc 1 1284 10
ARM GAS  /tmp/ccqd3SsG.s 			page 57


 1861 01e2 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1862              	.L106:
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 1863              		.loc 1 1285 1
 1864 01e4 1846     		mov	r0, r3
 1865 01e6 1037     		adds	r7, r7, #16
 1866              	.LCFI13:
 1867              		.cfi_def_cfa_offset 8
 1868 01e8 BD46     		mov	sp, r7
 1869              	.LCFI14:
 1870              		.cfi_def_cfa_register 13
 1871              		@ sp needed
 1872 01ea 80BD     		pop	{r7, pc}
 1873              	.L121:
 1874              		.align	2
 1875              	.L120:
 1876 01ec 00200240 		.word	1073881088
 1877 01f0 00100240 		.word	1073876992
 1878 01f4 00000000 		.word	AHBPrescTable
 1879 01f8 00000000 		.word	SystemCoreClock
 1880 01fc 00000000 		.word	uwTickPrio
 1881              		.cfi_endproc
 1882              	.LFE134:
 1884              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1885              		.align	1
 1886              		.global	HAL_RCC_MCOConfig
 1887              		.syntax unified
 1888              		.thumb
 1889              		.thumb_func
 1891              	HAL_RCC_MCOConfig:
 1892              	.LFB135:
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  *
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** @verbatim
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****  ===============================================================================
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     [..]
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to:
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     (+) Output clock to MCO pin.
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     (+) Retrieve current clock frequencies.
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     (+) Enable the Clock Security System.
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** @endverbatim
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Select the clock source to output on MCO pin(PA8).
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   PA8 should be configured in alternate function mode.
ARM GAS  /tmp/ccqd3SsG.s 			page 58


1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_MCOx  specifies the output direction for the clock source.
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          For STM32L4xx family this parameter can have only one value:
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1  Clock source to output on MCO1 pin(PA8).
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_MCOSource  specifies the clock source to output.
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK  MCO output disabled, no clock on MCO
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK  system  clock selected as MCO source
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_MSI  MSI clock selected as MCO source
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI  HSI clock selected as MCO source
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE  HSE clock selected as MCO sourcee
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK  main PLL clock selected as MCO source
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI  LSI clock selected as MCO source
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE  LSE clock selected as MCO source
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @if STM32L443xx
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48  HSI48 clock selected as MCO source for devices with 
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   @endif
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_MCODiv  specifies the MCO prescaler.
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1  no division applied to MCO clock
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2  division by 2 applied to MCO clock
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4  division by 4 applied to MCO clock
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8  division by 8 applied to MCO clock
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_MCOConfig( uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 1893              		.loc 1 1338 1
 1894              		.cfi_startproc
 1895              		@ args = 0, pretend = 0, frame = 40
 1896              		@ frame_needed = 1, uses_anonymous_args = 0
 1897 0000 80B5     		push	{r7, lr}
 1898              	.LCFI15:
 1899              		.cfi_def_cfa_offset 8
 1900              		.cfi_offset 7, -8
 1901              		.cfi_offset 14, -4
 1902 0002 8AB0     		sub	sp, sp, #40
 1903              	.LCFI16:
 1904              		.cfi_def_cfa_offset 48
 1905 0004 00AF     		add	r7, sp, #0
 1906              	.LCFI17:
 1907              		.cfi_def_cfa_register 7
 1908 0006 F860     		str	r0, [r7, #12]
 1909 0008 B960     		str	r1, [r7, #8]
 1910 000a 7A60     		str	r2, [r7, #4]
 1911              	.LBB4:
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   UNUSED(RCC_MCOx);
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* MCO Clock Enable */
ARM GAS  /tmp/ccqd3SsG.s 			page 59


1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   __MCO1_CLK_ENABLE();
 1912              		.loc 1 1350 3
 1913 000c 154B     		ldr	r3, .L123
 1914 000e DB6C     		ldr	r3, [r3, #76]
 1915 0010 144A     		ldr	r2, .L123
 1916 0012 43F00103 		orr	r3, r3, #1
 1917 0016 D364     		str	r3, [r2, #76]
 1918 0018 124B     		ldr	r3, .L123
 1919 001a DB6C     		ldr	r3, [r3, #76]
 1920 001c 03F00103 		and	r3, r3, #1
 1921 0020 3B61     		str	r3, [r7, #16]
 1922 0022 3B69     		ldr	r3, [r7, #16]
 1923              	.LBE4:
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Pin = MCO1_PIN;
 1924              		.loc 1 1353 23
 1925 0024 4FF48073 		mov	r3, #256
 1926 0028 7B61     		str	r3, [r7, #20]
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1927              		.loc 1 1354 24
 1928 002a 0223     		movs	r3, #2
 1929 002c BB61     		str	r3, [r7, #24]
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 1930              		.loc 1 1355 25
 1931 002e 0223     		movs	r3, #2
 1932 0030 3B62     		str	r3, [r7, #32]
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1933              		.loc 1 1356 24
 1934 0032 0023     		movs	r3, #0
 1935 0034 FB61     		str	r3, [r7, #28]
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1936              		.loc 1 1357 29
 1937 0036 0023     		movs	r3, #0
 1938 0038 7B62     		str	r3, [r7, #36]
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1939              		.loc 1 1358 3
 1940 003a 07F11403 		add	r3, r7, #20
 1941 003e 1946     		mov	r1, r3
 1942 0040 4FF09040 		mov	r0, #1207959552
 1943 0044 FFF7FEFF 		bl	HAL_GPIO_Init
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Mask MCOSEL[] and MCOPRE[] bits then set MCO1 clock source and prescaler */
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCOSEL | RCC_CFGR_MCOPRE), (RCC_MCOSource | RCC_MCODiv ));
 1944              		.loc 1 1361 3
 1945 0048 064B     		ldr	r3, .L123
 1946 004a 9B68     		ldr	r3, [r3, #8]
 1947 004c 23F0FE42 		bic	r2, r3, #2130706432
 1948 0050 B968     		ldr	r1, [r7, #8]
 1949 0052 7B68     		ldr	r3, [r7, #4]
 1950 0054 0B43     		orrs	r3, r3, r1
 1951 0056 0349     		ldr	r1, .L123
 1952 0058 1343     		orrs	r3, r3, r2
 1953 005a 8B60     		str	r3, [r1, #8]
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 1954              		.loc 1 1362 1
 1955 005c 00BF     		nop
ARM GAS  /tmp/ccqd3SsG.s 			page 60


 1956 005e 2837     		adds	r7, r7, #40
 1957              	.LCFI18:
 1958              		.cfi_def_cfa_offset 8
 1959 0060 BD46     		mov	sp, r7
 1960              	.LCFI19:
 1961              		.cfi_def_cfa_register 13
 1962              		@ sp needed
 1963 0062 80BD     		pop	{r7, pc}
 1964              	.L124:
 1965              		.align	2
 1966              	.L123:
 1967 0064 00100240 		.word	1073876992
 1968              		.cfi_endproc
 1969              	.LFE135:
 1971              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1972              		.align	1
 1973              		.global	HAL_RCC_GetSysClockFreq
 1974              		.syntax unified
 1975              		.thumb
 1976              		.thumb_func
 1978              	HAL_RCC_GetSysClockFreq:
 1979              	.LFB136:
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the SYSCLK frequency.
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         constant and the selected clock source:
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is MSI, function returns values based on MSI
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *             Value as defined by the MSI range.
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**),
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *           HSI_VALUE(*) or MSI Value multiplied/divided by the PLL factors.
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32l4xx_hal_conf.h file (default value
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *               in voltage and temperature.
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32l4xx_hal_conf.h file (default value
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *                have wrong result.
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         value for HSE crystal.
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval SYSCLK frequency
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
ARM GAS  /tmp/ccqd3SsG.s 			page 61


 1980              		.loc 1 1397 1
 1981              		.cfi_startproc
 1982              		@ args = 0, pretend = 0, frame = 32
 1983              		@ frame_needed = 1, uses_anonymous_args = 0
 1984              		@ link register save eliminated.
 1985 0000 80B4     		push	{r7}
 1986              	.LCFI20:
 1987              		.cfi_def_cfa_offset 4
 1988              		.cfi_offset 7, -4
 1989 0002 89B0     		sub	sp, sp, #36
 1990              	.LCFI21:
 1991              		.cfi_def_cfa_offset 40
 1992 0004 00AF     		add	r7, sp, #0
 1993              	.LCFI22:
 1994              		.cfi_def_cfa_register 7
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t msirange = 0U, sysclockfreq = 0U;
 1995              		.loc 1 1398 12
 1996 0006 0023     		movs	r3, #0
 1997 0008 FB61     		str	r3, [r7, #28]
 1998              		.loc 1 1398 27
 1999 000a 0023     		movs	r3, #0
 2000 000c BB61     		str	r3, [r7, #24]
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t pllvco, pllsource, pllr, pllm;    /* no init needed */
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t sysclk_source, pll_oscsource;
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 2001              		.loc 1 1402 19
 2002 000e 3E4B     		ldr	r3, .L140
 2003 0010 9B68     		ldr	r3, [r3, #8]
 2004              		.loc 1 1402 17
 2005 0012 03F00C03 		and	r3, r3, #12
 2006 0016 3B61     		str	r3, [r7, #16]
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 2007              		.loc 1 1403 19
 2008 0018 3B4B     		ldr	r3, .L140
 2009 001a DB68     		ldr	r3, [r3, #12]
 2010              		.loc 1 1403 17
 2011 001c 03F00303 		and	r3, r3, #3
 2012 0020 FB60     		str	r3, [r7, #12]
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 2013              		.loc 1 1405 5
 2014 0022 3B69     		ldr	r3, [r7, #16]
 2015 0024 002B     		cmp	r3, #0
 2016 0026 05D0     		beq	.L126
 2017              		.loc 1 1405 42 discriminator 1
 2018 0028 3B69     		ldr	r3, [r7, #16]
 2019 002a 0C2B     		cmp	r3, #12
 2020 002c 21D1     		bne	.L127
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****      ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 2021              		.loc 1 1406 43
 2022 002e FB68     		ldr	r3, [r7, #12]
 2023 0030 012B     		cmp	r3, #1
 2024 0032 1ED1     		bne	.L127
 2025              	.L126:
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* MSI or PLL with MSI source used as system clock source */
ARM GAS  /tmp/ccqd3SsG.s 			page 62


1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Get SYSCLK source */
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
 2026              		.loc 1 1411 8
 2027 0034 344B     		ldr	r3, .L140
 2028 0036 1B68     		ldr	r3, [r3]
 2029 0038 03F00803 		and	r3, r3, #8
 2030              		.loc 1 1411 7
 2031 003c 002B     		cmp	r3, #0
 2032 003e 07D1     		bne	.L128
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     { /* MSISRANGE from RCC_CSR applies */
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 2033              		.loc 1 1413 18
 2034 0040 314B     		ldr	r3, .L140
 2035 0042 D3F89430 		ldr	r3, [r3, #148]
 2036              		.loc 1 1413 56
 2037 0046 1B0A     		lsrs	r3, r3, #8
 2038              		.loc 1 1413 16
 2039 0048 03F00F03 		and	r3, r3, #15
 2040 004c FB61     		str	r3, [r7, #28]
 2041 004e 05E0     		b	.L129
 2042              	.L128:
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     { /* MSIRANGE from RCC_CR applies */
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 2043              		.loc 1 1417 18
 2044 0050 2D4B     		ldr	r3, .L140
 2045 0052 1B68     		ldr	r3, [r3]
 2046              		.loc 1 1417 53
 2047 0054 1B09     		lsrs	r3, r3, #4
 2048              		.loc 1 1417 16
 2049 0056 03F00F03 		and	r3, r3, #15
 2050 005a FB61     		str	r3, [r7, #28]
 2051              	.L129:
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /*MSI frequency range in HZ*/
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     msirange = MSIRangeTable[msirange];
 2052              		.loc 1 1420 14
 2053 005c 2B4A     		ldr	r2, .L140+4
 2054 005e FB69     		ldr	r3, [r7, #28]
 2055 0060 52F82330 		ldr	r3, [r2, r3, lsl #2]
 2056 0064 FB61     		str	r3, [r7, #28]
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(sysclk_source == RCC_CFGR_SWS_MSI)
 2057              		.loc 1 1422 7
 2058 0066 3B69     		ldr	r3, [r7, #16]
 2059 0068 002B     		cmp	r3, #0
 2060 006a 0DD1     		bne	.L131
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI used as system clock source */
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       sysclockfreq = msirange;
 2061              		.loc 1 1425 20
 2062 006c FB69     		ldr	r3, [r7, #28]
 2063 006e BB61     		str	r3, [r7, #24]
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
 2064              		.loc 1 1422 7
ARM GAS  /tmp/ccqd3SsG.s 			page 63


 2065 0070 0AE0     		b	.L131
 2066              	.L127:
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else if(sysclk_source == RCC_CFGR_SWS_HSI)
 2067              		.loc 1 1428 10
 2068 0072 3B69     		ldr	r3, [r7, #16]
 2069 0074 042B     		cmp	r3, #4
 2070 0076 02D1     		bne	.L132
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* HSI used as system clock source */
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = HSI_VALUE;
 2071              		.loc 1 1431 18
 2072 0078 254B     		ldr	r3, .L140+8
 2073 007a BB61     		str	r3, [r7, #24]
 2074 007c 04E0     		b	.L131
 2075              	.L132:
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else if(sysclk_source == RCC_CFGR_SWS_HSE)
 2076              		.loc 1 1433 10
 2077 007e 3B69     		ldr	r3, [r7, #16]
 2078 0080 082B     		cmp	r3, #8
 2079 0082 01D1     		bne	.L131
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* HSE used as system clock source */
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = HSE_VALUE;
 2080              		.loc 1 1436 18
 2081 0084 234B     		ldr	r3, .L140+12
 2082 0086 BB61     		str	r3, [r7, #24]
 2083              	.L131:
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* unexpected case: sysclockfreq at 0 */
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(sysclk_source == RCC_CFGR_SWS_PLL)
 2084              		.loc 1 1443 5
 2085 0088 3B69     		ldr	r3, [r7, #16]
 2086 008a 0C2B     		cmp	r3, #12
 2087 008c 34D1     		bne	.L133
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* PLL used as system clock  source */
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE) * PLLN / PLLM
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     SYSCLK = PLL_VCO / PLLR
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     */
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 2088              		.loc 1 1450 17
 2089 008e 1E4B     		ldr	r3, .L140
 2090 0090 DB68     		ldr	r3, [r3, #12]
 2091              		.loc 1 1450 15
 2092 0092 03F00303 		and	r3, r3, #3
 2093 0096 BB60     		str	r3, [r7, #8]
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     switch (pllsource)
 2094              		.loc 1 1452 5
ARM GAS  /tmp/ccqd3SsG.s 			page 64


 2095 0098 BB68     		ldr	r3, [r7, #8]
 2096 009a 022B     		cmp	r3, #2
 2097 009c 03D0     		beq	.L134
 2098 009e BB68     		ldr	r3, [r7, #8]
 2099 00a0 032B     		cmp	r3, #3
 2100 00a2 03D0     		beq	.L135
 2101 00a4 05E0     		b	.L139
 2102              	.L134:
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pllvco = HSI_VALUE;
 2103              		.loc 1 1455 14
 2104 00a6 1A4B     		ldr	r3, .L140+8
 2105 00a8 7B61     		str	r3, [r7, #20]
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       break;
 2106              		.loc 1 1456 7
 2107 00aa 05E0     		b	.L137
 2108              	.L135:
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pllvco = HSE_VALUE;
 2109              		.loc 1 1459 14
 2110 00ac 194B     		ldr	r3, .L140+12
 2111 00ae 7B61     		str	r3, [r7, #20]
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       break;
 2112              		.loc 1 1460 7
 2113 00b0 02E0     		b	.L137
 2114              	.L139:
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     case RCC_PLLSOURCE_MSI:  /* MSI used as PLL clock source */
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     default:
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       pllvco = msirange;
 2115              		.loc 1 1464 14
 2116 00b2 FB69     		ldr	r3, [r7, #28]
 2117 00b4 7B61     		str	r3, [r7, #20]
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       break;
 2118              		.loc 1 1465 7
 2119 00b6 00BF     		nop
 2120              	.L137:
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 2121              		.loc 1 1467 13
 2122 00b8 134B     		ldr	r3, .L140
 2123 00ba DB68     		ldr	r3, [r3, #12]
 2124              		.loc 1 1467 54
 2125 00bc 1B09     		lsrs	r3, r3, #4
 2126 00be 03F00703 		and	r3, r3, #7
 2127              		.loc 1 1467 10
 2128 00c2 0133     		adds	r3, r3, #1
 2129 00c4 7B60     		str	r3, [r7, #4]
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     pllvco = (pllvco * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)) / pllm;
 2130              		.loc 1 1468 25
 2131 00c6 104B     		ldr	r3, .L140
 2132 00c8 DB68     		ldr	r3, [r3, #12]
 2133              		.loc 1 1468 66
 2134 00ca 1B0A     		lsrs	r3, r3, #8
 2135 00cc 03F07F03 		and	r3, r3, #127
ARM GAS  /tmp/ccqd3SsG.s 			page 65


 2136              		.loc 1 1468 22
 2137 00d0 7A69     		ldr	r2, [r7, #20]
 2138 00d2 03FB02F2 		mul	r2, r3, r2
 2139              		.loc 1 1468 12
 2140 00d6 7B68     		ldr	r3, [r7, #4]
 2141 00d8 B2FBF3F3 		udiv	r3, r2, r3
 2142 00dc 7B61     		str	r3, [r7, #20]
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 2143              		.loc 1 1469 14
 2144 00de 0A4B     		ldr	r3, .L140
 2145 00e0 DB68     		ldr	r3, [r3, #12]
 2146              		.loc 1 1469 55
 2147 00e2 5B0E     		lsrs	r3, r3, #25
 2148 00e4 03F00303 		and	r3, r3, #3
 2149              		.loc 1 1469 80
 2150 00e8 0133     		adds	r3, r3, #1
 2151              		.loc 1 1469 10
 2152 00ea 5B00     		lsls	r3, r3, #1
 2153 00ec 3B60     		str	r3, [r7]
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     sysclockfreq = pllvco / pllr;
 2154              		.loc 1 1470 18
 2155 00ee 7A69     		ldr	r2, [r7, #20]
 2156 00f0 3B68     		ldr	r3, [r7]
 2157 00f2 B2FBF3F3 		udiv	r3, r2, r3
 2158 00f6 BB61     		str	r3, [r7, #24]
 2159              	.L133:
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return sysclockfreq;
 2160              		.loc 1 1473 10
 2161 00f8 BB69     		ldr	r3, [r7, #24]
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2162              		.loc 1 1474 1
 2163 00fa 1846     		mov	r0, r3
 2164 00fc 2437     		adds	r7, r7, #36
 2165              	.LCFI23:
 2166              		.cfi_def_cfa_offset 4
 2167 00fe BD46     		mov	sp, r7
 2168              	.LCFI24:
 2169              		.cfi_def_cfa_register 13
 2170              		@ sp needed
 2171 0100 5DF8047B 		ldr	r7, [sp], #4
 2172              	.LCFI25:
 2173              		.cfi_restore 7
 2174              		.cfi_def_cfa_offset 0
 2175 0104 7047     		bx	lr
 2176              	.L141:
 2177 0106 00BF     		.align	2
 2178              	.L140:
 2179 0108 00100240 		.word	1073876992
 2180 010c 00000000 		.word	MSIRangeTable
 2181 0110 0024F400 		.word	16000000
 2182 0114 00127A00 		.word	8000000
 2183              		.cfi_endproc
 2184              	.LFE136:
 2186              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2187              		.align	1
ARM GAS  /tmp/ccqd3SsG.s 			page 66


 2188              		.global	HAL_RCC_GetHCLKFreq
 2189              		.syntax unified
 2190              		.thumb
 2191              		.thumb_func
 2193              	HAL_RCC_GetHCLKFreq:
 2194              	.LFB137:
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the HCLK frequency.
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval HCLK frequency in Hz
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2195              		.loc 1 1485 1
 2196              		.cfi_startproc
 2197              		@ args = 0, pretend = 0, frame = 0
 2198              		@ frame_needed = 1, uses_anonymous_args = 0
 2199              		@ link register save eliminated.
 2200 0000 80B4     		push	{r7}
 2201              	.LCFI26:
 2202              		.cfi_def_cfa_offset 4
 2203              		.cfi_offset 7, -4
 2204 0002 00AF     		add	r7, sp, #0
 2205              	.LCFI27:
 2206              		.cfi_def_cfa_register 7
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return SystemCoreClock;
 2207              		.loc 1 1486 10
 2208 0004 034B     		ldr	r3, .L144
 2209 0006 1B68     		ldr	r3, [r3]
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2210              		.loc 1 1487 1
 2211 0008 1846     		mov	r0, r3
 2212 000a BD46     		mov	sp, r7
 2213              	.LCFI28:
 2214              		.cfi_def_cfa_register 13
 2215              		@ sp needed
 2216 000c 5DF8047B 		ldr	r7, [sp], #4
 2217              	.LCFI29:
 2218              		.cfi_restore 7
 2219              		.cfi_def_cfa_offset 0
 2220 0010 7047     		bx	lr
 2221              	.L145:
 2222 0012 00BF     		.align	2
 2223              	.L144:
 2224 0014 00000000 		.word	SystemCoreClock
 2225              		.cfi_endproc
 2226              	.LFE137:
 2228              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2229              		.align	1
 2230              		.global	HAL_RCC_GetPCLK1Freq
 2231              		.syntax unified
 2232              		.thumb
 2233              		.thumb_func
ARM GAS  /tmp/ccqd3SsG.s 			page 67


 2235              	HAL_RCC_GetPCLK1Freq:
 2236              	.LFB138:
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the PCLK1 frequency.
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval PCLK1 frequency in Hz
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2237              		.loc 1 1496 1
 2238              		.cfi_startproc
 2239              		@ args = 0, pretend = 0, frame = 0
 2240              		@ frame_needed = 1, uses_anonymous_args = 0
 2241 0000 80B5     		push	{r7, lr}
 2242              	.LCFI30:
 2243              		.cfi_def_cfa_offset 8
 2244              		.cfi_offset 7, -8
 2245              		.cfi_offset 14, -4
 2246 0002 00AF     		add	r7, sp, #0
 2247              	.LCFI31:
 2248              		.cfi_def_cfa_register 7
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1) >> RCC_CFGR_P
 2249              		.loc 1 1498 11
 2250 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2251 0008 0246     		mov	r2, r0
 2252              		.loc 1 1498 51
 2253 000a 064B     		ldr	r3, .L148
 2254 000c 9B68     		ldr	r3, [r3, #8]
 2255              		.loc 1 1498 87
 2256 000e 1B0A     		lsrs	r3, r3, #8
 2257 0010 03F00703 		and	r3, r3, #7
 2258              		.loc 1 1498 50
 2259 0014 0449     		ldr	r1, .L148+4
 2260 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2261              		.loc 1 1498 110
 2262 0018 03F01F03 		and	r3, r3, #31
 2263              		.loc 1 1498 33
 2264 001c 22FA03F3 		lsr	r3, r2, r3
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2265              		.loc 1 1499 1
 2266 0020 1846     		mov	r0, r3
 2267 0022 80BD     		pop	{r7, pc}
 2268              	.L149:
 2269              		.align	2
 2270              	.L148:
 2271 0024 00100240 		.word	1073876992
 2272 0028 00000000 		.word	APBPrescTable
 2273              		.cfi_endproc
 2274              	.LFE138:
 2276              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2277              		.align	1
 2278              		.global	HAL_RCC_GetPCLK2Freq
 2279              		.syntax unified
 2280              		.thumb
ARM GAS  /tmp/ccqd3SsG.s 			page 68


 2281              		.thumb_func
 2283              	HAL_RCC_GetPCLK2Freq:
 2284              	.LFB139:
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Return the PCLK2 frequency.
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval PCLK2 frequency in Hz
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2285              		.loc 1 1508 1
 2286              		.cfi_startproc
 2287              		@ args = 0, pretend = 0, frame = 0
 2288              		@ frame_needed = 1, uses_anonymous_args = 0
 2289 0000 80B5     		push	{r7, lr}
 2290              	.LCFI32:
 2291              		.cfi_def_cfa_offset 8
 2292              		.cfi_offset 7, -8
 2293              		.cfi_offset 14, -4
 2294 0002 00AF     		add	r7, sp, #0
 2295              	.LCFI33:
 2296              		.cfi_def_cfa_register 7
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> RCC_CFGR_PP
 2297              		.loc 1 1510 11
 2298 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2299 0008 0246     		mov	r2, r0
 2300              		.loc 1 1510 50
 2301 000a 064B     		ldr	r3, .L152
 2302 000c 9B68     		ldr	r3, [r3, #8]
 2303              		.loc 1 1510 86
 2304 000e DB0A     		lsrs	r3, r3, #11
 2305 0010 03F00703 		and	r3, r3, #7
 2306              		.loc 1 1510 49
 2307 0014 0449     		ldr	r1, .L152+4
 2308 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2309              		.loc 1 1510 109
 2310 0018 03F01F03 		and	r3, r3, #31
 2311              		.loc 1 1510 32
 2312 001c 22FA03F3 		lsr	r3, r2, r3
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2313              		.loc 1 1511 1
 2314 0020 1846     		mov	r0, r3
 2315 0022 80BD     		pop	{r7, pc}
 2316              	.L153:
 2317              		.align	2
 2318              	.L152:
 2319 0024 00100240 		.word	1073876992
 2320 0028 00000000 		.word	APBPrescTable
 2321              		.cfi_endproc
 2322              	.LFE139:
 2324              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2325              		.align	1
 2326              		.global	HAL_RCC_GetOscConfig
 2327              		.syntax unified
ARM GAS  /tmp/ccqd3SsG.s 			page 69


 2328              		.thumb
 2329              		.thumb_func
 2331              	HAL_RCC_GetOscConfig:
 2332              	.LFB140:
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Configure the RCC_OscInitStruct according to the internal
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         RCC configuration registers.
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct  pointer to an RCC_OscInitTypeDef structure that
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         will be configured.
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2333              		.loc 1 1521 1
 2334              		.cfi_startproc
 2335              		@ args = 0, pretend = 0, frame = 8
 2336              		@ frame_needed = 1, uses_anonymous_args = 0
 2337              		@ link register save eliminated.
 2338 0000 80B4     		push	{r7}
 2339              	.LCFI34:
 2340              		.cfi_def_cfa_offset 4
 2341              		.cfi_offset 7, -4
 2342 0002 83B0     		sub	sp, sp, #12
 2343              	.LCFI35:
 2344              		.cfi_def_cfa_offset 16
 2345 0004 00AF     		add	r7, sp, #0
 2346              	.LCFI36:
 2347              		.cfi_def_cfa_register 7
 2348 0006 7860     		str	r0, [r7, #4]
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != (void *)NULL);
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 2349              		.loc 1 1527 37
 2350 0008 7B68     		ldr	r3, [r7, #4]
 2351 000a 3F22     		movs	r2, #63
 2352 000c 1A60     		str	r2, [r3]
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLA
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2353              		.loc 1 1535 6
 2354 000e 604B     		ldr	r3, .L171
 2355 0010 1B68     		ldr	r3, [r3]
 2356 0012 03F48023 		and	r3, r3, #262144
 2357              		.loc 1 1535 5
 2358 0016 B3F5802F 		cmp	r3, #262144
 2359 001a 04D1     		bne	.L155
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
ARM GAS  /tmp/ccqd3SsG.s 			page 70


 2360              		.loc 1 1537 33
 2361 001c 7B68     		ldr	r3, [r7, #4]
 2362 001e 4FF4A022 		mov	r2, #327680
 2363 0022 5A60     		str	r2, [r3, #4]
 2364 0024 0EE0     		b	.L156
 2365              	.L155:
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else if(READ_BIT(RCC->CR, RCC_CR_HSEON) == RCC_CR_HSEON)
 2366              		.loc 1 1539 11
 2367 0026 5A4B     		ldr	r3, .L171
 2368 0028 1B68     		ldr	r3, [r3]
 2369 002a 03F48033 		and	r3, r3, #65536
 2370              		.loc 1 1539 10
 2371 002e B3F5803F 		cmp	r3, #65536
 2372 0032 04D1     		bne	.L157
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2373              		.loc 1 1541 33
 2374 0034 7B68     		ldr	r3, [r7, #4]
 2375 0036 4FF48032 		mov	r2, #65536
 2376 003a 5A60     		str	r2, [r3, #4]
 2377 003c 02E0     		b	.L156
 2378              	.L157:
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2379              		.loc 1 1545 33
 2380 003e 7B68     		ldr	r3, [r7, #4]
 2381 0040 0022     		movs	r2, #0
 2382 0042 5A60     		str	r2, [r3, #4]
 2383              	.L156:
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****    /* Get the MSI configuration -----------------------------------------------*/
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_MSION) == RCC_CR_MSION)
 2384              		.loc 1 1549 6
 2385 0044 524B     		ldr	r3, .L171
 2386 0046 1B68     		ldr	r3, [r3]
 2387 0048 03F00103 		and	r3, r3, #1
 2388              		.loc 1 1549 5
 2389 004c 012B     		cmp	r3, #1
 2390 004e 03D1     		bne	.L158
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->MSIState = RCC_MSI_ON;
 2391              		.loc 1 1551 33
 2392 0050 7B68     		ldr	r3, [r7, #4]
 2393 0052 0122     		movs	r2, #1
 2394 0054 9A61     		str	r2, [r3, #24]
 2395 0056 02E0     		b	.L159
 2396              	.L158:
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->MSIState = RCC_MSI_OFF;
 2397              		.loc 1 1555 33
 2398 0058 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccqd3SsG.s 			page 71


 2399 005a 0022     		movs	r2, #0
 2400 005c 9A61     		str	r2, [r3, #24]
 2401              	.L159:
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->MSICalibrationValue = READ_BIT(RCC->ICSCR, RCC_ICSCR_MSITRIM) >> RCC_ICSCR_MSI
 2402              		.loc 1 1558 44
 2403 005e 4C4B     		ldr	r3, .L171
 2404 0060 5B68     		ldr	r3, [r3, #4]
 2405              		.loc 1 1558 84
 2406 0062 1B0A     		lsrs	r3, r3, #8
 2407 0064 DAB2     		uxtb	r2, r3
 2408              		.loc 1 1558 42
 2409 0066 7B68     		ldr	r3, [r7, #4]
 2410 0068 DA61     		str	r2, [r3, #28]
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->MSIClockRange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE);
 2411              		.loc 1 1559 38
 2412 006a 494B     		ldr	r3, .L171
 2413 006c 1B68     		ldr	r3, [r3]
 2414 006e 03F0F002 		and	r2, r3, #240
 2415              		.loc 1 1559 36
 2416 0072 7B68     		ldr	r3, [r7, #4]
 2417 0074 1A62     		str	r2, [r3, #32]
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_HSION) == RCC_CR_HSION)
 2418              		.loc 1 1562 6
 2419 0076 464B     		ldr	r3, .L171
 2420 0078 1B68     		ldr	r3, [r3]
 2421 007a 03F48073 		and	r3, r3, #256
 2422              		.loc 1 1562 5
 2423 007e B3F5807F 		cmp	r3, #256
 2424 0082 04D1     		bne	.L160
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2425              		.loc 1 1564 33
 2426 0084 7B68     		ldr	r3, [r7, #4]
 2427 0086 4FF48072 		mov	r2, #256
 2428 008a DA60     		str	r2, [r3, #12]
 2429 008c 02E0     		b	.L161
 2430              	.L160:
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2431              		.loc 1 1568 33
 2432 008e 7B68     		ldr	r3, [r7, #4]
 2433 0090 0022     		movs	r2, #0
 2434 0092 DA60     		str	r2, [r3, #12]
 2435              	.L161:
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = READ_BIT(RCC->ICSCR, RCC_ICSCR_HSITRIM) >> RCC_ICSCR_HSI
 2436              		.loc 1 1571 44
 2437 0094 3E4B     		ldr	r3, .L171
 2438 0096 5B68     		ldr	r3, [r3, #4]
 2439              		.loc 1 1571 84
ARM GAS  /tmp/ccqd3SsG.s 			page 72


 2440 0098 1B0E     		lsrs	r3, r3, #24
 2441 009a 03F01F02 		and	r2, r3, #31
 2442              		.loc 1 1571 42
 2443 009e 7B68     		ldr	r3, [r7, #4]
 2444 00a0 1A61     		str	r2, [r3, #16]
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->BDCR, RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2445              		.loc 1 1574 6
 2446 00a2 3B4B     		ldr	r3, .L171
 2447 00a4 D3F89030 		ldr	r3, [r3, #144]
 2448 00a8 03F00403 		and	r3, r3, #4
 2449              		.loc 1 1574 5
 2450 00ac 042B     		cmp	r3, #4
 2451 00ae 03D1     		bne	.L162
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_BDCR_LSESYSDIS)
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((RCC->BDCR & RCC_BDCR_LSESYSDIS) == RCC_BDCR_LSESYSDIS)
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS_RTC_ONLY;
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2452              		.loc 1 1584 35
 2453 00b0 7B68     		ldr	r3, [r7, #4]
 2454 00b2 0522     		movs	r2, #5
 2455 00b4 9A60     		str	r2, [r3, #8]
 2456 00b6 0DE0     		b	.L163
 2457              	.L162:
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else if(READ_BIT(RCC->BDCR, RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2458              		.loc 1 1587 11
 2459 00b8 354B     		ldr	r3, .L171
 2460 00ba D3F89030 		ldr	r3, [r3, #144]
 2461 00be 03F00103 		and	r3, r3, #1
 2462              		.loc 1 1587 10
 2463 00c2 012B     		cmp	r3, #1
 2464 00c4 03D1     		bne	.L164
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_BDCR_LSESYSDIS)
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if((RCC->BDCR & RCC_BDCR_LSESYSDIS) == RCC_BDCR_LSESYSDIS)
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       RCC_OscInitStruct->LSEState = RCC_LSE_ON_RTC_ONLY;
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_BDCR_LSESYSDIS */
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2465              		.loc 1 1597 35
 2466 00c6 7B68     		ldr	r3, [r7, #4]
 2467 00c8 0122     		movs	r2, #1
 2468 00ca 9A60     		str	r2, [r3, #8]
 2469 00cc 02E0     		b	.L163
 2470              	.L164:
ARM GAS  /tmp/ccqd3SsG.s 			page 73


1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2471              		.loc 1 1602 33
 2472 00ce 7B68     		ldr	r3, [r7, #4]
 2473 00d0 0022     		movs	r2, #0
 2474 00d2 9A60     		str	r2, [r3, #8]
 2475              	.L163:
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CSR, RCC_CSR_LSION) == RCC_CSR_LSION)
 2476              		.loc 1 1606 6
 2477 00d4 2E4B     		ldr	r3, .L171
 2478 00d6 D3F89430 		ldr	r3, [r3, #148]
 2479 00da 03F00103 		and	r3, r3, #1
 2480              		.loc 1 1606 5
 2481 00de 012B     		cmp	r3, #1
 2482 00e0 03D1     		bne	.L165
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2483              		.loc 1 1608 33
 2484 00e2 7B68     		ldr	r3, [r7, #4]
 2485 00e4 0122     		movs	r2, #1
 2486 00e6 5A61     		str	r2, [r3, #20]
 2487 00e8 02E0     		b	.L166
 2488              	.L165:
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2489              		.loc 1 1612 33
 2490 00ea 7B68     		ldr	r3, [r7, #4]
 2491 00ec 0022     		movs	r2, #0
 2492 00ee 5A61     		str	r2, [r3, #20]
 2493              	.L166:
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_CSR_LSIPREDIV)
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if((RCC->CSR & RCC_CSR_LSIPREDIV) == RCC_CSR_LSIPREDIV)
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIDiv = RCC_LSI_DIV128;
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIDiv = RCC_LSI_DIV1;
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_CSR_LSIPREDIV */
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the HSI48 configuration ---------------------------------------------*/
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48ON) == RCC_CRRCR_HSI48ON)
 2494              		.loc 1 1629 6
 2495 00f0 274B     		ldr	r3, .L171
ARM GAS  /tmp/ccqd3SsG.s 			page 74


 2496 00f2 D3F89830 		ldr	r3, [r3, #152]
 2497 00f6 03F00103 		and	r3, r3, #1
 2498              		.loc 1 1629 5
 2499 00fa 012B     		cmp	r3, #1
 2500 00fc 03D1     		bne	.L167
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_ON;
 2501              		.loc 1 1631 35
 2502 00fe 7B68     		ldr	r3, [r7, #4]
 2503 0100 0122     		movs	r2, #1
 2504 0102 5A62     		str	r2, [r3, #36]
 2505 0104 02E0     		b	.L168
 2506              	.L167:
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_OFF;
 2507              		.loc 1 1635 35
 2508 0106 7B68     		ldr	r3, [r7, #4]
 2509 0108 0022     		movs	r2, #0
 2510 010a 5A62     		str	r2, [r3, #36]
 2511              	.L168:
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->HSI48State = RCC_HSI48_OFF;
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_PLLON) == RCC_CR_PLLON)
 2512              		.loc 1 1642 6
 2513 010c 204B     		ldr	r3, .L171
 2514 010e 1B68     		ldr	r3, [r3]
 2515 0110 03F08073 		and	r3, r3, #16777216
 2516              		.loc 1 1642 5
 2517 0114 B3F1807F 		cmp	r3, #16777216
 2518 0118 03D1     		bne	.L169
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2519              		.loc 1 1644 37
 2520 011a 7B68     		ldr	r3, [r7, #4]
 2521 011c 0222     		movs	r2, #2
 2522 011e 9A62     		str	r2, [r3, #40]
 2523 0120 02E0     		b	.L170
 2524              	.L169:
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2525              		.loc 1 1648 37
 2526 0122 7B68     		ldr	r3, [r7, #4]
 2527 0124 0122     		movs	r2, #1
 2528 0126 9A62     		str	r2, [r3, #40]
 2529              	.L170:
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 2530              		.loc 1 1650 38
 2531 0128 194B     		ldr	r3, .L171
ARM GAS  /tmp/ccqd3SsG.s 			page 75


 2532 012a DB68     		ldr	r3, [r3, #12]
 2533 012c 03F00302 		and	r2, r3, #3
 2534              		.loc 1 1650 36
 2535 0130 7B68     		ldr	r3, [r7, #4]
 2536 0132 DA62     		str	r2, [r3, #44]
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) 
 2537              		.loc 1 1651 34
 2538 0134 164B     		ldr	r3, .L171
 2539 0136 DB68     		ldr	r3, [r3, #12]
 2540              		.loc 1 1651 75
 2541 0138 1B09     		lsrs	r3, r3, #4
 2542 013a 03F00703 		and	r3, r3, #7
 2543              		.loc 1 1651 100
 2544 013e 5A1C     		adds	r2, r3, #1
 2545              		.loc 1 1651 31
 2546 0140 7B68     		ldr	r3, [r7, #4]
 2547 0142 1A63     		str	r2, [r3, #48]
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
 2548              		.loc 1 1652 33
 2549 0144 124B     		ldr	r3, .L171
 2550 0146 DB68     		ldr	r3, [r3, #12]
 2551              		.loc 1 1652 74
 2552 0148 1B0A     		lsrs	r3, r3, #8
 2553 014a 03F07F02 		and	r2, r3, #127
 2554              		.loc 1 1652 31
 2555 014e 7B68     		ldr	r3, [r7, #4]
 2556 0150 5A63     		str	r2, [r3, #52]
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Pos
 2557              		.loc 1 1653 36
 2558 0152 0F4B     		ldr	r3, .L171
 2559 0154 DB68     		ldr	r3, [r3, #12]
 2560              		.loc 1 1653 77
 2561 0156 5B0D     		lsrs	r3, r3, #21
 2562 0158 03F00303 		and	r3, r3, #3
 2563              		.loc 1 1653 102
 2564 015c 0133     		adds	r3, r3, #1
 2565              		.loc 1 1653 108
 2566 015e 5A00     		lsls	r2, r3, #1
 2567              		.loc 1 1653 31
 2568 0160 7B68     		ldr	r3, [r7, #4]
 2569 0162 DA63     		str	r2, [r3, #60]
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos
 2570              		.loc 1 1654 36
 2571 0164 0A4B     		ldr	r3, .L171
 2572 0166 DB68     		ldr	r3, [r3, #12]
 2573              		.loc 1 1654 77
 2574 0168 5B0E     		lsrs	r3, r3, #25
 2575 016a 03F00303 		and	r3, r3, #3
 2576              		.loc 1 1654 102
 2577 016e 0133     		adds	r3, r3, #1
 2578              		.loc 1 1654 108
 2579 0170 5A00     		lsls	r2, r3, #1
 2580              		.loc 1 1654 31
 2581 0172 7B68     		ldr	r3, [r7, #4]
 2582 0174 1A64     		str	r2, [r3, #64]
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_SUPPORT)
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(RCC_PLLP_DIV_2_31_SUPPORT)
ARM GAS  /tmp/ccqd3SsG.s 			page 76


1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLPDIV) >> RCC_PLLCFGR_PLLPDIV_
 2583              		.loc 1 1657 33
 2584 0176 064B     		ldr	r3, .L171
 2585 0178 DB68     		ldr	r3, [r3, #12]
 2586              		.loc 1 1657 77
 2587 017a DB0E     		lsrs	r3, r3, #27
 2588 017c 03F01F02 		and	r2, r3, #31
 2589              		.loc 1 1657 31
 2590 0180 7B68     		ldr	r3, [r7, #4]
 2591 0182 9A63     		str	r2, [r3, #56]
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLP) != 0U)
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLP = RCC_PLLP_DIV17;
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLP = RCC_PLLP_DIV7;
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLP_DIV_2_31_SUPPORT */
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif /* RCC_PLLP_SUPPORT */
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2592              		.loc 1 1669 1
 2593 0184 00BF     		nop
 2594 0186 0C37     		adds	r7, r7, #12
 2595              	.LCFI37:
 2596              		.cfi_def_cfa_offset 4
 2597 0188 BD46     		mov	sp, r7
 2598              	.LCFI38:
 2599              		.cfi_def_cfa_register 13
 2600              		@ sp needed
 2601 018a 5DF8047B 		ldr	r7, [sp], #4
 2602              	.LCFI39:
 2603              		.cfi_restore 7
 2604              		.cfi_def_cfa_offset 0
 2605 018e 7047     		bx	lr
 2606              	.L172:
 2607              		.align	2
 2608              	.L171:
 2609 0190 00100240 		.word	1073876992
 2610              		.cfi_endproc
 2611              	.LFE140:
 2613              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2614              		.align	1
 2615              		.global	HAL_RCC_GetClockConfig
 2616              		.syntax unified
 2617              		.thumb
 2618              		.thumb_func
 2620              	HAL_RCC_GetClockConfig:
 2621              	.LFB141:
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Configure the RCC_ClkInitStruct according to the internal
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         RCC configuration registers.
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct  pointer to an RCC_ClkInitTypeDef structure that
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         will be configured.
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  pFLatency  Pointer on the Flash Latency.
ARM GAS  /tmp/ccqd3SsG.s 			page 77


1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2622              		.loc 1 1680 1
 2623              		.cfi_startproc
 2624              		@ args = 0, pretend = 0, frame = 8
 2625              		@ frame_needed = 1, uses_anonymous_args = 0
 2626              		@ link register save eliminated.
 2627 0000 80B4     		push	{r7}
 2628              	.LCFI40:
 2629              		.cfi_def_cfa_offset 4
 2630              		.cfi_offset 7, -4
 2631 0002 83B0     		sub	sp, sp, #12
 2632              	.LCFI41:
 2633              		.cfi_def_cfa_offset 16
 2634 0004 00AF     		add	r7, sp, #0
 2635              	.LCFI42:
 2636              		.cfi_def_cfa_register 7
 2637 0006 7860     		str	r0, [r7, #4]
 2638 0008 3960     		str	r1, [r7]
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check the parameters */
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != (void  *)NULL);
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   assert_param(pFLatency != (void *)NULL);
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2639              		.loc 1 1686 32
 2640 000a 7B68     		ldr	r3, [r7, #4]
 2641 000c 0F22     		movs	r2, #15
 2642 000e 1A60     		str	r2, [r3]
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = READ_BIT(RCC->CFGR, RCC_CFGR_SW);
 2643              		.loc 1 1689 37
 2644 0010 124B     		ldr	r3, .L174
 2645 0012 9B68     		ldr	r3, [r3, #8]
 2646 0014 03F00302 		and	r2, r3, #3
 2647              		.loc 1 1689 35
 2648 0018 7B68     		ldr	r3, [r7, #4]
 2649 001a 5A60     		str	r2, [r3, #4]
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = READ_BIT(RCC->CFGR, RCC_CFGR_HPRE);
 2650              		.loc 1 1692 38
 2651 001c 0F4B     		ldr	r3, .L174
 2652 001e 9B68     		ldr	r3, [r3, #8]
 2653 0020 03F0F002 		and	r2, r3, #240
 2654              		.loc 1 1692 36
 2655 0024 7B68     		ldr	r3, [r7, #4]
 2656 0026 9A60     		str	r2, [r3, #8]
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1);
 2657              		.loc 1 1695 39
 2658 0028 0C4B     		ldr	r3, .L174
 2659 002a 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccqd3SsG.s 			page 78


 2660 002c 03F4E062 		and	r2, r3, #1792
 2661              		.loc 1 1695 37
 2662 0030 7B68     		ldr	r3, [r7, #4]
 2663 0032 DA60     		str	r2, [r3, #12]
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> 3U);
 2664              		.loc 1 1698 40
 2665 0034 094B     		ldr	r3, .L174
 2666 0036 9B68     		ldr	r3, [r3, #8]
 2667              		.loc 1 1698 76
 2668 0038 DB08     		lsrs	r3, r3, #3
 2669 003a 03F4E062 		and	r2, r3, #1792
 2670              		.loc 1 1698 37
 2671 003e 7B68     		ldr	r3, [r7, #4]
 2672 0040 1A61     		str	r2, [r3, #16]
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *pFLatency = __HAL_FLASH_GET_LATENCY();
 2673              		.loc 1 1701 16
 2674 0042 074B     		ldr	r3, .L174+4
 2675 0044 1B68     		ldr	r3, [r3]
 2676 0046 03F00702 		and	r2, r3, #7
 2677              		.loc 1 1701 14
 2678 004a 3B68     		ldr	r3, [r7]
 2679 004c 1A60     		str	r2, [r3]
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2680              		.loc 1 1702 1
 2681 004e 00BF     		nop
 2682 0050 0C37     		adds	r7, r7, #12
 2683              	.LCFI43:
 2684              		.cfi_def_cfa_offset 4
 2685 0052 BD46     		mov	sp, r7
 2686              	.LCFI44:
 2687              		.cfi_def_cfa_register 13
 2688              		@ sp needed
 2689 0054 5DF8047B 		ldr	r7, [sp], #4
 2690              	.LCFI45:
 2691              		.cfi_restore 7
 2692              		.cfi_def_cfa_offset 0
 2693 0058 7047     		bx	lr
 2694              	.L175:
 2695 005a 00BF     		.align	2
 2696              	.L174:
 2697 005c 00100240 		.word	1073876992
 2698 0060 00200240 		.word	1073881088
 2699              		.cfi_endproc
 2700              	.LFE141:
 2702              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 2703              		.align	1
 2704              		.global	HAL_RCC_EnableCSS
 2705              		.syntax unified
 2706              		.thumb
 2707              		.thumb_func
 2709              	HAL_RCC_EnableCSS:
 2710              	.LFB142:
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccqd3SsG.s 			page 79


1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Enable the Clock Security System.
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   The Clock Security System can only be cleared by reset.
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2711              		.loc 1 1715 1
 2712              		.cfi_startproc
 2713              		@ args = 0, pretend = 0, frame = 0
 2714              		@ frame_needed = 1, uses_anonymous_args = 0
 2715              		@ link register save eliminated.
 2716 0000 80B4     		push	{r7}
 2717              	.LCFI46:
 2718              		.cfi_def_cfa_offset 4
 2719              		.cfi_offset 7, -4
 2720 0002 00AF     		add	r7, sp, #0
 2721              	.LCFI47:
 2722              		.cfi_def_cfa_register 7
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 2723              		.loc 1 1716 3
 2724 0004 054B     		ldr	r3, .L177
 2725 0006 1B68     		ldr	r3, [r3]
 2726 0008 044A     		ldr	r2, .L177
 2727 000a 43F40023 		orr	r3, r3, #524288
 2728 000e 1360     		str	r3, [r2]
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2729              		.loc 1 1717 1
 2730 0010 00BF     		nop
 2731 0012 BD46     		mov	sp, r7
 2732              	.LCFI48:
 2733              		.cfi_def_cfa_register 13
 2734              		@ sp needed
 2735 0014 5DF8047B 		ldr	r7, [sp], #4
 2736              	.LCFI49:
 2737              		.cfi_restore 7
 2738              		.cfi_def_cfa_offset 0
 2739 0018 7047     		bx	lr
 2740              	.L178:
 2741 001a 00BF     		.align	2
 2742              	.L177:
 2743 001c 00100240 		.word	1073876992
 2744              		.cfi_endproc
 2745              	.LFE142:
 2747              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2748              		.align	1
 2749              		.global	HAL_RCC_NMI_IRQHandler
 2750              		.syntax unified
 2751              		.thumb
 2752              		.thumb_func
 2754              	HAL_RCC_NMI_IRQHandler:
 2755              	.LFB143:
ARM GAS  /tmp/ccqd3SsG.s 			page 80


1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief Handle the RCC Clock Security System interrupt request.
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval None
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2756              		.loc 1 1725 1
 2757              		.cfi_startproc
 2758              		@ args = 0, pretend = 0, frame = 0
 2759              		@ frame_needed = 1, uses_anonymous_args = 0
 2760 0000 80B5     		push	{r7, lr}
 2761              	.LCFI50:
 2762              		.cfi_def_cfa_offset 8
 2763              		.cfi_offset 7, -8
 2764              		.cfi_offset 14, -4
 2765 0002 00AF     		add	r7, sp, #0
 2766              	.LCFI51:
 2767              		.cfi_def_cfa_register 7
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check RCC CSSF interrupt flag  */
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2768              		.loc 1 1727 6
 2769 0004 074B     		ldr	r3, .L182
 2770 0006 DB69     		ldr	r3, [r3, #28]
 2771 0008 03F48073 		and	r3, r3, #256
 2772              		.loc 1 1727 5
 2773 000c B3F5807F 		cmp	r3, #256
 2774 0010 05D1     		bne	.L181
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2775              		.loc 1 1730 5
 2776 0012 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2777              		.loc 1 1733 5
 2778 0016 034B     		ldr	r3, .L182
 2779 0018 4FF48072 		mov	r2, #256
 2780 001c 1A62     		str	r2, [r3, #32]
 2781              	.L181:
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2782              		.loc 1 1735 1
 2783 001e 00BF     		nop
 2784 0020 80BD     		pop	{r7, pc}
 2785              	.L183:
 2786 0022 00BF     		.align	2
 2787              	.L182:
 2788 0024 00100240 		.word	1073876992
 2789              		.cfi_endproc
 2790              	.LFE143:
 2792              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2793              		.align	1
 2794              		.weak	HAL_RCC_CSSCallback
 2795              		.syntax unified
ARM GAS  /tmp/ccqd3SsG.s 			page 81


 2796              		.thumb
 2797              		.thumb_func
 2799              	HAL_RCC_CSSCallback:
 2800              	.LFB144:
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback.
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval none
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2801              		.loc 1 1742 1
 2802              		.cfi_startproc
 2803              		@ args = 0, pretend = 0, frame = 0
 2804              		@ frame_needed = 1, uses_anonymous_args = 0
 2805              		@ link register save eliminated.
 2806 0000 80B4     		push	{r7}
 2807              	.LCFI52:
 2808              		.cfi_def_cfa_offset 4
 2809              		.cfi_offset 7, -4
 2810 0002 00AF     		add	r7, sp, #0
 2811              	.LCFI53:
 2812              		.cfi_def_cfa_register 7
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback should be implemented in the user file
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****    */
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2813              		.loc 1 1746 1
 2814 0004 00BF     		nop
 2815 0006 BD46     		mov	sp, r7
 2816              	.LCFI54:
 2817              		.cfi_def_cfa_register 13
 2818              		@ sp needed
 2819 0008 5DF8047B 		ldr	r7, [sp], #4
 2820              	.LCFI55:
 2821              		.cfi_restore 7
 2822              		.cfi_def_cfa_offset 0
 2823 000c 7047     		bx	lr
 2824              		.cfi_endproc
 2825              	.LFE144:
 2827              		.section	.text.HAL_RCC_GetResetSource,"ax",%progbits
 2828              		.align	1
 2829              		.global	HAL_RCC_GetResetSource
 2830              		.syntax unified
 2831              		.thumb
 2832              		.thumb_func
 2834              	HAL_RCC_GetResetSource:
 2835              	.LFB145:
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Get and clear reset flags
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  None
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @note   Once reset flags are retrieved, this API is clearing them in order
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   *         to isolate next reset reason.
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval can be a combination of @ref RCC_Reset_Flag
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** uint32_t HAL_RCC_GetResetSource(void)
ARM GAS  /tmp/ccqd3SsG.s 			page 82


1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2836              		.loc 1 1756 1
 2837              		.cfi_startproc
 2838              		@ args = 0, pretend = 0, frame = 8
 2839              		@ frame_needed = 1, uses_anonymous_args = 0
 2840              		@ link register save eliminated.
 2841 0000 80B4     		push	{r7}
 2842              	.LCFI56:
 2843              		.cfi_def_cfa_offset 4
 2844              		.cfi_offset 7, -4
 2845 0002 83B0     		sub	sp, sp, #12
 2846              	.LCFI57:
 2847              		.cfi_def_cfa_offset 16
 2848 0004 00AF     		add	r7, sp, #0
 2849              	.LCFI58:
 2850              		.cfi_def_cfa_register 7
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t reset;
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Get all reset flags */
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   reset = RCC->CSR & RCC_RESET_FLAG_ALL;
 2851              		.loc 1 1760 14
 2852 0006 0A4B     		ldr	r3, .L187
 2853 0008 D3F89430 		ldr	r3, [r3, #148]
 2854              		.loc 1 1760 9
 2855 000c 03F07E43 		and	r3, r3, #-33554432
 2856 0010 7B60     		str	r3, [r7, #4]
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Clear Reset flags */
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   RCC->CSR |= RCC_CSR_RMVF;
 2857              		.loc 1 1763 12
 2858 0012 074B     		ldr	r3, .L187
 2859 0014 D3F89430 		ldr	r3, [r3, #148]
 2860 0018 054A     		ldr	r2, .L187
 2861 001a 43F40003 		orr	r3, r3, #8388608
 2862 001e C2F89430 		str	r3, [r2, #148]
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return reset;
 2863              		.loc 1 1765 10
 2864 0022 7B68     		ldr	r3, [r7, #4]
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 2865              		.loc 1 1766 1
 2866 0024 1846     		mov	r0, r3
 2867 0026 0C37     		adds	r7, r7, #12
 2868              	.LCFI59:
 2869              		.cfi_def_cfa_offset 4
 2870 0028 BD46     		mov	sp, r7
 2871              	.LCFI60:
 2872              		.cfi_def_cfa_register 13
 2873              		@ sp needed
 2874 002a 5DF8047B 		ldr	r7, [sp], #4
 2875              	.LCFI61:
 2876              		.cfi_restore 7
 2877              		.cfi_def_cfa_offset 0
 2878 002e 7047     		bx	lr
 2879              	.L188:
 2880              		.align	2
 2881              	.L187:
ARM GAS  /tmp/ccqd3SsG.s 			page 83


 2882 0030 00100240 		.word	1073876992
 2883              		.cfi_endproc
 2884              	.LFE145:
 2886              		.section	.text.RCC_SetFlashLatencyFromMSIRange,"ax",%progbits
 2887              		.align	1
 2888              		.syntax unified
 2889              		.thumb
 2890              		.thumb_func
 2892              	RCC_SetFlashLatencyFromMSIRange:
 2893              	.LFB146:
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**  * @}
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @}
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Functions
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @{
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** /**
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @brief  Update number of Flash wait states in line with MSI range and current
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****             voltage range.
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_11
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   * @retval HAL status
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   */
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** {
 2894              		.loc 1 1786 1
 2895              		.cfi_startproc
 2896              		@ args = 0, pretend = 0, frame = 24
 2897              		@ frame_needed = 1, uses_anonymous_args = 0
 2898 0000 80B5     		push	{r7, lr}
 2899              	.LCFI62:
 2900              		.cfi_def_cfa_offset 8
 2901              		.cfi_offset 7, -8
 2902              		.cfi_offset 14, -4
 2903 0002 86B0     		sub	sp, sp, #24
 2904              	.LCFI63:
 2905              		.cfi_def_cfa_offset 32
 2906 0004 00AF     		add	r7, sp, #0
 2907              	.LCFI64:
 2908              		.cfi_def_cfa_register 7
 2909 0006 7860     		str	r0, [r7, #4]
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t vos;
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */
 2910              		.loc 1 1788 12
 2911 0008 0023     		movs	r3, #0
 2912 000a 3B61     		str	r3, [r7, #16]
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(__HAL_RCC_PWR_IS_CLK_ENABLED())
 2913              		.loc 1 1790 6
 2914 000c 2A4B     		ldr	r3, .L199
 2915 000e 9B6D     		ldr	r3, [r3, #88]
 2916 0010 03F08053 		and	r3, r3, #268435456
ARM GAS  /tmp/ccqd3SsG.s 			page 84


 2917              		.loc 1 1790 5
 2918 0014 002B     		cmp	r3, #0
 2919 0016 03D0     		beq	.L190
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     vos = HAL_PWREx_GetVoltageRange();
 2920              		.loc 1 1792 11
 2921 0018 FFF7FEFF 		bl	HAL_PWREx_GetVoltageRange
 2922 001c 7861     		str	r0, [r7, #20]
 2923 001e 14E0     		b	.L191
 2924              	.L190:
 2925              	.LBB5:
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 2926              		.loc 1 1796 5
 2927 0020 254B     		ldr	r3, .L199
 2928 0022 9B6D     		ldr	r3, [r3, #88]
 2929 0024 244A     		ldr	r2, .L199
 2930 0026 43F08053 		orr	r3, r3, #268435456
 2931 002a 9365     		str	r3, [r2, #88]
 2932 002c 224B     		ldr	r3, .L199
 2933 002e 9B6D     		ldr	r3, [r3, #88]
 2934 0030 03F08053 		and	r3, r3, #268435456
 2935 0034 FB60     		str	r3, [r7, #12]
 2936 0036 FB68     		ldr	r3, [r7, #12]
 2937              	.LBE5:
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     vos = HAL_PWREx_GetVoltageRange();
 2938              		.loc 1 1797 11
 2939 0038 FFF7FEFF 		bl	HAL_PWREx_GetVoltageRange
 2940 003c 7861     		str	r0, [r7, #20]
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     __HAL_RCC_PWR_CLK_DISABLE();
 2941              		.loc 1 1798 5
 2942 003e 1E4B     		ldr	r3, .L199
 2943 0040 9B6D     		ldr	r3, [r3, #88]
 2944 0042 1D4A     		ldr	r2, .L199
 2945 0044 23F08053 		bic	r3, r3, #268435456
 2946 0048 9365     		str	r3, [r2, #88]
 2947              	.L191:
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(vos == PWR_REGULATOR_VOLTAGE_SCALE1)
 2948              		.loc 1 1801 5
 2949 004a 7B69     		ldr	r3, [r7, #20]
 2950 004c B3F5007F 		cmp	r3, #512
 2951 0050 0BD1     		bne	.L192
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(msirange > RCC_MSIRANGE_8)
 2952              		.loc 1 1803 7
 2953 0052 7B68     		ldr	r3, [r7, #4]
 2954 0054 802B     		cmp	r3, #128
 2955 0056 19D9     		bls	.L193
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI > 16Mhz */
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(msirange > RCC_MSIRANGE_10)
 2956              		.loc 1 1806 9
 2957 0058 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccqd3SsG.s 			page 85


 2958 005a A02B     		cmp	r3, #160
 2959 005c 02D9     		bls	.L194
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 48Mhz */
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_2; /* 2WS */
 2960              		.loc 1 1809 17
 2961 005e 0223     		movs	r3, #2
 2962 0060 3B61     		str	r3, [r7, #16]
 2963 0062 13E0     		b	.L193
 2964              	.L194:
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 24Mhz or 32Mhz */
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_1; /* 1WS */
 2965              		.loc 1 1814 17
 2966 0064 0123     		movs	r3, #1
 2967 0066 3B61     		str	r3, [r7, #16]
 2968 0068 10E0     		b	.L193
 2969              	.L192:
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     /* else MSI <= 16Mhz default FLASH_LATENCY_0 0WS */
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   else
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #if defined(STM32L4P5xx) || defined(STM32L4Q5xx) || \
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) ||
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(msirange >= RCC_MSIRANGE_8)
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI >= 16Mhz */
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       latency = FLASH_LATENCY_2; /* 2WS */
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(msirange == RCC_MSIRANGE_7)
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 8Mhz */
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_1; /* 1WS */
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #else
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     if(msirange > RCC_MSIRANGE_8)
 2970              		.loc 1 1838 7
 2971 006a 7B68     		ldr	r3, [r7, #4]
 2972 006c 802B     		cmp	r3, #128
 2973 006e 02D9     		bls	.L195
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* MSI > 16Mhz */
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       latency = FLASH_LATENCY_3; /* 3WS */
 2974              		.loc 1 1841 15
 2975 0070 0323     		movs	r3, #3
 2976 0072 3B61     		str	r3, [r7, #16]
 2977 0074 0AE0     		b	.L193
 2978              	.L195:
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccqd3SsG.s 			page 86


1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     else
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     {
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       if(msirange == RCC_MSIRANGE_8)
 2979              		.loc 1 1845 9
 2980 0076 7B68     		ldr	r3, [r7, #4]
 2981 0078 802B     		cmp	r3, #128
 2982 007a 02D1     		bne	.L196
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 16Mhz */
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_2; /* 2WS */
 2983              		.loc 1 1848 17
 2984 007c 0223     		movs	r3, #2
 2985 007e 3B61     		str	r3, [r7, #16]
 2986 0080 04E0     		b	.L193
 2987              	.L196:
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       else if(msirange == RCC_MSIRANGE_7)
 2988              		.loc 1 1850 14
 2989 0082 7B68     		ldr	r3, [r7, #4]
 2990 0084 702B     		cmp	r3, #112
 2991 0086 01D1     		bne	.L193
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       {
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         /* MSI 8Mhz */
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****         latency = FLASH_LATENCY_1; /* 1WS */
 2992              		.loc 1 1853 17
 2993 0088 0123     		movs	r3, #1
 2994 008a 3B61     		str	r3, [r7, #16]
 2995              	.L193:
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       }
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****       /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     }
1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** #endif
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   __HAL_FLASH_SET_LATENCY(latency);
 2996              		.loc 1 1860 3
 2997 008c 0B4B     		ldr	r3, .L199+4
 2998 008e 1B68     		ldr	r3, [r3]
 2999 0090 23F00702 		bic	r2, r3, #7
 3000 0094 0949     		ldr	r1, .L199+4
 3001 0096 3B69     		ldr	r3, [r7, #16]
 3002 0098 1343     		orrs	r3, r3, r2
 3003 009a 0B60     		str	r3, [r1]
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   /* Check that the new number of wait states is taken into account to access the Flash
1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****      memory by reading the FLASH_ACR register */
1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   if(__HAL_FLASH_GET_LATENCY() != latency)
 3004              		.loc 1 1864 6
 3005 009c 074B     		ldr	r3, .L199+4
 3006 009e 1B68     		ldr	r3, [r3]
 3007 00a0 03F00703 		and	r3, r3, #7
 3008              		.loc 1 1864 5
 3009 00a4 3A69     		ldr	r2, [r7, #16]
 3010 00a6 9A42     		cmp	r2, r3
 3011 00a8 01D0     		beq	.L197
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   {
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccqd3SsG.s 			page 87


 3012              		.loc 1 1866 12
 3013 00aa 0123     		movs	r3, #1
 3014 00ac 00E0     		b	.L198
 3015              	.L197:
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   }
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** 
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c ****   return HAL_OK;
 3016              		.loc 1 1869 10
 3017 00ae 0023     		movs	r3, #0
 3018              	.L198:
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c **** }
 3019              		.loc 1 1870 1
 3020 00b0 1846     		mov	r0, r3
 3021 00b2 1837     		adds	r7, r7, #24
 3022              	.LCFI65:
 3023              		.cfi_def_cfa_offset 8
 3024 00b4 BD46     		mov	sp, r7
 3025              	.LCFI66:
 3026              		.cfi_def_cfa_register 13
 3027              		@ sp needed
 3028 00b6 80BD     		pop	{r7, pc}
 3029              	.L200:
 3030              		.align	2
 3031              	.L199:
 3032 00b8 00100240 		.word	1073876992
 3033 00bc 00200240 		.word	1073881088
 3034              		.cfi_endproc
 3035              	.LFE146:
 3037              		.text
 3038              	.Letext0:
 3039              		.file 2 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 3040              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 3041              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 3042              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 3043              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 3044              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 3045              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 3046              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 3047              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/ccqd3SsG.s 			page 88


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_rcc.c
     /tmp/ccqd3SsG.s:20     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccqd3SsG.s:26     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccqd3SsG.s:220    .text.HAL_RCC_DeInit:000000000000011c $d
     /tmp/ccqd3SsG.s:229    .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccqd3SsG.s:235    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccqd3SsG.s:2892   .text.RCC_SetFlashLatencyFromMSIRange:0000000000000000 RCC_SetFlashLatencyFromMSIRange
     /tmp/ccqd3SsG.s:1978   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccqd3SsG.s:621    .text.HAL_RCC_OscConfig:0000000000000270 $d
     /tmp/ccqd3SsG.s:627    .text.HAL_RCC_OscConfig:0000000000000280 $t
     /tmp/ccqd3SsG.s:1027   .text.HAL_RCC_OscConfig:0000000000000504 $d
     /tmp/ccqd3SsG.s:1031   .text.HAL_RCC_OscConfig:000000000000050c $t
     /tmp/ccqd3SsG.s:1419   .text.HAL_RCC_OscConfig:0000000000000778 $d
     /tmp/ccqd3SsG.s:1423   .text.HAL_RCC_OscConfig:0000000000000780 $t
     /tmp/ccqd3SsG.s:1534   .text.HAL_RCC_OscConfig:0000000000000820 $d
     /tmp/ccqd3SsG.s:1540   .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccqd3SsG.s:1546   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccqd3SsG.s:1876   .text.HAL_RCC_ClockConfig:00000000000001ec $d
     /tmp/ccqd3SsG.s:1885   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccqd3SsG.s:1891   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccqd3SsG.s:1967   .text.HAL_RCC_MCOConfig:0000000000000064 $d
     /tmp/ccqd3SsG.s:1972   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccqd3SsG.s:2179   .text.HAL_RCC_GetSysClockFreq:0000000000000108 $d
     /tmp/ccqd3SsG.s:2187   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccqd3SsG.s:2193   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccqd3SsG.s:2224   .text.HAL_RCC_GetHCLKFreq:0000000000000014 $d
     /tmp/ccqd3SsG.s:2229   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccqd3SsG.s:2235   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccqd3SsG.s:2271   .text.HAL_RCC_GetPCLK1Freq:0000000000000024 $d
     /tmp/ccqd3SsG.s:2277   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccqd3SsG.s:2283   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccqd3SsG.s:2319   .text.HAL_RCC_GetPCLK2Freq:0000000000000024 $d
     /tmp/ccqd3SsG.s:2325   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccqd3SsG.s:2331   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccqd3SsG.s:2609   .text.HAL_RCC_GetOscConfig:0000000000000190 $d
     /tmp/ccqd3SsG.s:2614   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccqd3SsG.s:2620   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccqd3SsG.s:2697   .text.HAL_RCC_GetClockConfig:000000000000005c $d
     /tmp/ccqd3SsG.s:2703   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccqd3SsG.s:2709   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccqd3SsG.s:2743   .text.HAL_RCC_EnableCSS:000000000000001c $d
     /tmp/ccqd3SsG.s:2748   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccqd3SsG.s:2754   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccqd3SsG.s:2799   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccqd3SsG.s:2788   .text.HAL_RCC_NMI_IRQHandler:0000000000000024 $d
     /tmp/ccqd3SsG.s:2793   .text.HAL_RCC_CSSCallback:0000000000000000 $t
     /tmp/ccqd3SsG.s:2828   .text.HAL_RCC_GetResetSource:0000000000000000 $t
     /tmp/ccqd3SsG.s:2834   .text.HAL_RCC_GetResetSource:0000000000000000 HAL_RCC_GetResetSource
     /tmp/ccqd3SsG.s:2882   .text.HAL_RCC_GetResetSource:0000000000000030 $d
     /tmp/ccqd3SsG.s:2887   .text.RCC_SetFlashLatencyFromMSIRange:0000000000000000 $t
     /tmp/ccqd3SsG.s:3032   .text.RCC_SetFlashLatencyFromMSIRange:00000000000000b8 $d
                           .group:0000000000000000 wm4.0.7c07f3f6b993d5df097fdb8d3ce9a6de
                           .group:0000000000000000 wm4.stm32l4xx_hal_conf.h.25.67df7bfb263225dfcb11ad6d535659e5
                           .group:0000000000000000 wm4.stm32l4xx.h.38.13610480d662c5d808817940a37afcf4
                           .group:0000000000000000 wm4.stm32l432xx.h.34.64bfd283c23d6d1aa5faea715519c36d
                           .group:0000000000000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
ARM GAS  /tmp/ccqd3SsG.s 			page 89


                           .group:0000000000000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.cmsis_version.h.32.46e8eccfa2cfeaae11d008bb2823a3ed
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.78077cef1206e937f7b56043ffca496a
                           .group:0000000000000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:0000000000000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:0000000000000000 wm4.stm32l432xx.h.380.93d43fb335c0ebed2f7b80a16f382831
                           .group:0000000000000000 wm4.stm32l4xx.h.196.f5ae8047c57b6175c94f246ef967a286
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.22.60f4b739ef84b68a7e7ed16e5103575e
                           .group:0000000000000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:0000000000000000 wm4.stm32l4xx_hal_def.h.57.b521302d6c089e94008be04ada42518c
                           .group:0000000000000000 wm4.stm32l4xx_hal_rcc.h.156.c2cf90ca16490b11bfea6d5b9c02447d
                           .group:0000000000000000 wm4.stm32l4xx_hal_rcc_ex.h.20.9d2cd8406af411ccecbbc69175fe86df
                           .group:0000000000000000 wm4.stm32l4xx_hal_gpio.h.21.2d2b1fd6aa6afa7b6dcc89cf752a9a25
                           .group:0000000000000000 wm4.stm32l4xx_hal_gpio_ex.h.21.bbbc787a7485a4871211b5fa6c8b588b
                           .group:0000000000000000 wm4.stm32l4xx_hal_dma.h.21.85535a9033ff7e527296f1cd4943a831
                           .group:0000000000000000 wm4.stm32l4xx_hal_cortex.h.21.94fe10dd50baf2cef42a470b44b9074a
                           .group:0000000000000000 wm4.stm32l4xx_hal_can.h.21.b5d46d7f01b4bc61c276be2c4b59db6b
                           .group:0000000000000000 wm4.stm32l4xx_hal_exti.h.21.d3645023ea960a07b41f6c9b90a2ecc4
                           .group:0000000000000000 wm4.stm32l4xx_hal_flash.h.20.3f4ef626abeefd93430968dc6defca64
                           .group:0000000000000000 wm4.stm32l4xx_hal_flash.h.848.b5e1a92ab03fcd2ac5572c217f864bbd
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c.h.21.1c548a113da5711525bbba5ee1988cbd
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c_ex.h.21.a624122f67715a687a1d5f17f7841251
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c.h.738.08f9916803fd1d9db10b6451187300a7
                           .group:0000000000000000 wm4.stm32l4xx_hal_pwr.h.21.7ddab2caa97243c36e496eca17b27618
                           .group:0000000000000000 wm4.stm32l4xx_hal_pwr_ex.h.21.5c96c6ce2d8c449959a988a298b6fd6b
                           .group:0000000000000000 wm4.stm32l4xx_hal_tim.h.21.514f1bd267cd24adfb57081a913ef29f
                           .group:0000000000000000 wm4.stm32l4xx_hal_tim_ex.h.21.fc4cf6652f188acb945f023f83d5be40
                           .group:0000000000000000 wm4.stm32l4xx_hal_uart.h.21.fc846d838d179e557421cc5a6a90c71c
                           .group:0000000000000000 wm4.stm32l4xx_hal_uart_ex.h.21.a0d4c7c414dffdc178f0a3a708ac77ea
                           .group:0000000000000000 wm4.stm32l4xx_hal.h.75.771e267559f2fdcd4148207229da2f39

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
uwTickPrio
AHBPrescTable
HAL_GPIO_Init
MSIRangeTable
APBPrescTable
HAL_PWREx_GetVoltageRange
