ARM GAS  /tmp/ccVFuPtH.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	hcan1
  20              		.section	.bss.hcan1,"aw",%nobits
  21              		.align	2
  24              	hcan1:
  25 0000 00000000 		.space	40
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.global	hi2c1
  27              		.section	.bss.hi2c1,"aw",%nobits
  28              		.align	2
  31              	hi2c1:
  32 0000 00000000 		.space	84
  32      00000000 
  32      00000000 
  32      00000000 
  32      00000000 
  33              		.global	huart1
  34              		.section	.bss.huart1,"aw",%nobits
  35              		.align	2
  38              	huart1:
  39 0000 00000000 		.space	132
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40              		.global	defaultTaskHandle
  41              		.section	.bss.defaultTaskHandle,"aw",%nobits
  42              		.align	2
  45              	defaultTaskHandle:
  46 0000 00000000 		.space	4
  47              		.global	defaultTask_attributes
  48              		.section	.rodata
  49              		.align	2
  50              	.LC0:
  51 0000 64656661 		.ascii	"defaultTask\000"
  51      756C7454 
  51      61736B00 
ARM GAS  /tmp/ccVFuPtH.s 			page 2


  52              		.section	.rodata.defaultTask_attributes,"a"
  53              		.align	2
  56              	defaultTask_attributes:
  57 0000 00000000 		.word	.LC0
  58 0004 00000000 		.space	16
  58      00000000 
  58      00000000 
  58      00000000 
  59 0014 00020000 		.word	512
  60 0018 18000000 		.word	24
  61 001c 00000000 		.space	8
  61      00000000 
  62              		.global	testStuct
  63              		.section	.bss.testStuct,"aw",%nobits
  64              		.align	2
  67              	testStuct:
  68 0000 00000000 		.space	16
  68      00000000 
  68      00000000 
  68      00000000 
  69              		.global	pTestStuct
  70              		.section	.data.pTestStuct,"aw"
  71              		.align	2
  74              	pTestStuct:
  75 0000 00000000 		.word	testStuct
  76              		.global	TxHeader
  77              		.section	.bss.TxHeader,"aw",%nobits
  78              		.align	2
  81              	TxHeader:
  82 0000 00000000 		.space	24
  82      00000000 
  82      00000000 
  82      00000000 
  82      00000000 
  83              		.global	RxHeader
  84              		.section	.bss.RxHeader,"aw",%nobits
  85              		.align	2
  88              	RxHeader:
  89 0000 00000000 		.space	28
  89      00000000 
  89      00000000 
  89      00000000 
  89      00000000 
  90              		.global	TxMailbox
  91              		.section	.bss.TxMailbox,"aw",%nobits
  92              		.align	2
  95              	TxMailbox:
  96 0000 00000000 		.space	4
  97              		.global	TxData
  98              		.section	.bss.TxData,"aw",%nobits
  99              		.align	2
 102              	TxData:
 103 0000 00000000 		.space	8
 103      00000000 
 104              		.global	RxData
 105              		.section	.bss.RxData,"aw",%nobits
 106              		.align	2
ARM GAS  /tmp/ccVFuPtH.s 			page 3


 109              	RxData:
 110 0000 00000000 		.space	8
 110      00000000 
 111              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 112              		.align	1
 113              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 118              	HAL_CAN_RxFifo0MsgPendingCallback:
 119              	.LFB136:
 120              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  45:Core/Src/main.c **** 
ARM GAS  /tmp/ccVFuPtH.s 			page 4


  46:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** UART_HandleTypeDef huart1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Definitions for defaultTask */
  51:Core/Src/main.c **** osThreadId_t defaultTaskHandle;
  52:Core/Src/main.c **** const osThreadAttr_t defaultTask_attributes = {
  53:Core/Src/main.c ****   .name = "defaultTask",
  54:Core/Src/main.c ****   .stack_size = 128 * 4,
  55:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal,
  56:Core/Src/main.c **** };
  57:Core/Src/main.c **** /* USER CODE BEGIN PV */
  58:Core/Src/main.c **** typedef struct 
  59:Core/Src/main.c **** {
  60:Core/Src/main.c ****   uint16_t myint;
  61:Core/Src/main.c ****   uint16_t myLargerInt;
  62:Core/Src/main.c ****   float thisFloat;
  63:Core/Src/main.c ****   float extraFloat;
  64:Core/Src/main.c ****   uint32_t myLargestInt;
  65:Core/Src/main.c **** } BreakingUpStruct;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** BreakingUpStruct testStuct;
  68:Core/Src/main.c **** BreakingUpStruct *pTestStuct = &testStuct;
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** CAN_TxHeaderTypeDef TxHeader;
  71:Core/Src/main.c **** CAN_RxHeaderTypeDef RxHeader;
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** uint32_t TxMailbox;
  74:Core/Src/main.c **** uint8_t TxData[8];
  75:Core/Src/main.c **** uint8_t RxData[8];
  76:Core/Src/main.c **** /* USER CODE END PV */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  79:Core/Src/main.c **** void SystemClock_Config(void);
  80:Core/Src/main.c **** static void MX_GPIO_Init(void);
  81:Core/Src/main.c **** static void MX_CAN1_Init(void);
  82:Core/Src/main.c **** static void MX_I2C1_Init(void);
  83:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  84:Core/Src/main.c **** void StartDefaultTask(void *argument);
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  87:Core/Src/main.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
  88:Core/Src/main.c **** {
 121              		.loc 1 88 1
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 8
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              	.LCFI0:
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 82B0     		sub	sp, sp, #8
 131              	.LCFI1:
 132              		.cfi_def_cfa_offset 16
 133 0004 00AF     		add	r7, sp, #0
 134              	.LCFI2:
ARM GAS  /tmp/ccVFuPtH.s 			page 5


 135              		.cfi_def_cfa_register 7
 136 0006 7860     		str	r0, [r7, #4]
  89:Core/Src/main.c ****   HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &RxHeader, RxData);
 137              		.loc 1 89 3
 138 0008 044B     		ldr	r3, .L2
 139 000a 054A     		ldr	r2, .L2+4
 140 000c 0021     		movs	r1, #0
 141 000e 7868     		ldr	r0, [r7, #4]
 142 0010 FFF7FEFF 		bl	HAL_CAN_GetRxMessage
  90:Core/Src/main.c **** }
 143              		.loc 1 90 1
 144 0014 00BF     		nop
 145 0016 0837     		adds	r7, r7, #8
 146              	.LCFI3:
 147              		.cfi_def_cfa_offset 8
 148 0018 BD46     		mov	sp, r7
 149              	.LCFI4:
 150              		.cfi_def_cfa_register 13
 151              		@ sp needed
 152 001a 80BD     		pop	{r7, pc}
 153              	.L3:
 154              		.align	2
 155              	.L2:
 156 001c 00000000 		.word	RxData
 157 0020 00000000 		.word	RxHeader
 158              		.cfi_endproc
 159              	.LFE136:
 161              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 162              		.align	1
 163              		.global	HAL_GPIO_EXTI_Callback
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	HAL_GPIO_EXTI_Callback:
 169              	.LFB137:
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
  93:Core/Src/main.c **** {
 170              		.loc 1 93 1
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 8
 173              		@ frame_needed = 1, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175 0000 80B4     		push	{r7}
 176              	.LCFI5:
 177              		.cfi_def_cfa_offset 4
 178              		.cfi_offset 7, -4
 179 0002 83B0     		sub	sp, sp, #12
 180              	.LCFI6:
 181              		.cfi_def_cfa_offset 16
 182 0004 00AF     		add	r7, sp, #0
 183              	.LCFI7:
 184              		.cfi_def_cfa_register 7
 185 0006 0346     		mov	r3, r0
 186 0008 FB80     		strh	r3, [r7, #6]	@ movhi
  94:Core/Src/main.c ****   switch (GPIO_Pin)
 187              		.loc 1 94 3
ARM GAS  /tmp/ccVFuPtH.s 			page 6


 188 000a FB88     		ldrh	r3, [r7, #6]
 189 000c B3F5004F 		cmp	r3, #32768
 190 0010 15D0     		beq	.L13
 191 0012 B3F5004F 		cmp	r3, #32768
 192 0016 14DC     		bgt	.L14
 193 0018 B3F5804F 		cmp	r3, #16384
 194 001c 13D0     		beq	.L15
 195 001e B3F5804F 		cmp	r3, #16384
 196 0022 0EDC     		bgt	.L14
 197 0024 402B     		cmp	r3, #64
 198 0026 10D0     		beq	.L16
 199 0028 402B     		cmp	r3, #64
 200 002a 0ADC     		bgt	.L14
 201 002c 202B     		cmp	r3, #32
 202 002e 0ED0     		beq	.L17
 203 0030 202B     		cmp	r3, #32
 204 0032 06DC     		bgt	.L14
 205 0034 082B     		cmp	r3, #8
 206 0036 0CD0     		beq	.L18
 207 0038 102B     		cmp	r3, #16
 208 003a 0CD0     		beq	.L19
  95:Core/Src/main.c ****   {
  96:Core/Src/main.c ****   case BRD_STRT_Pin:
  97:Core/Src/main.c ****     /* Do something */
  98:Core/Src/main.c ****     break;
  99:Core/Src/main.c ****   case BRD_PRGE_Pin:
 100:Core/Src/main.c ****     /* Do something */
 101:Core/Src/main.c ****     break;
 102:Core/Src/main.c ****   case EXT_STRT_Pin:
 103:Core/Src/main.c ****     /* Do something */
 104:Core/Src/main.c ****     break;
 105:Core/Src/main.c ****   case ACC_INT1_Pin:
 106:Core/Src/main.c ****     /* Do something */
 107:Core/Src/main.c ****     break;
 108:Core/Src/main.c ****   case ACC_INT2_Pin:
 109:Core/Src/main.c ****     /* Do something */
 110:Core/Src/main.c ****     break;
 111:Core/Src/main.c ****   case EXT_STOP_Pin:
 112:Core/Src/main.c ****     /* Do something */
 113:Core/Src/main.c ****     break;
 114:Core/Src/main.c ****   default:
 115:Core/Src/main.c ****     /* Should never happen */
 116:Core/Src/main.c ****     break;
 209              		.loc 1 116 5
 210 003c 01E0     		b	.L14
 211              	.L13:
 101:Core/Src/main.c ****   case EXT_STRT_Pin:
 212              		.loc 1 101 5
 213 003e 00BF     		nop
 214 0040 0AE0     		b	.L20
 215              	.L14:
 216              		.loc 1 116 5
 217 0042 00BF     		nop
 218 0044 08E0     		b	.L20
 219              	.L15:
  98:Core/Src/main.c ****   case BRD_PRGE_Pin:
 220              		.loc 1 98 5
ARM GAS  /tmp/ccVFuPtH.s 			page 7


 221 0046 00BF     		nop
 222 0048 06E0     		b	.L20
 223              	.L16:
 113:Core/Src/main.c ****   default:
 224              		.loc 1 113 5
 225 004a 00BF     		nop
 226 004c 04E0     		b	.L20
 227              	.L17:
 110:Core/Src/main.c ****   case EXT_STOP_Pin:
 228              		.loc 1 110 5
 229 004e 00BF     		nop
 230 0050 02E0     		b	.L20
 231              	.L18:
 104:Core/Src/main.c ****   case ACC_INT1_Pin:
 232              		.loc 1 104 5
 233 0052 00BF     		nop
 234 0054 00E0     		b	.L20
 235              	.L19:
 107:Core/Src/main.c ****   case ACC_INT2_Pin:
 236              		.loc 1 107 5
 237 0056 00BF     		nop
 238              	.L20:
 117:Core/Src/main.c ****   }
 118:Core/Src/main.c **** }
 239              		.loc 1 118 1
 240 0058 00BF     		nop
 241 005a 0C37     		adds	r7, r7, #12
 242              	.LCFI8:
 243              		.cfi_def_cfa_offset 4
 244 005c BD46     		mov	sp, r7
 245              	.LCFI9:
 246              		.cfi_def_cfa_register 13
 247              		@ sp needed
 248 005e 5DF8047B 		ldr	r7, [sp], #4
 249              	.LCFI10:
 250              		.cfi_restore 7
 251              		.cfi_def_cfa_offset 0
 252 0062 7047     		bx	lr
 253              		.cfi_endproc
 254              	.LFE137:
 256              		.section	.text.main,"ax",%progbits
 257              		.align	1
 258              		.global	main
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 263              	main:
 264              	.LFB138:
 119:Core/Src/main.c **** /* USER CODE END PFP */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 122:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** /* USER CODE END 0 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** /**
 127:Core/Src/main.c ****   * @brief  The application entry point.
ARM GAS  /tmp/ccVFuPtH.s 			page 8


 128:Core/Src/main.c ****   * @retval int
 129:Core/Src/main.c ****   */
 130:Core/Src/main.c **** int main(void)
 131:Core/Src/main.c **** {
 265              		.loc 1 131 1
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269 0000 80B5     		push	{r7, lr}
 270              	.LCFI11:
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 7, -8
 273              		.cfi_offset 14, -4
 274 0002 00AF     		add	r7, sp, #0
 275              	.LCFI12:
 276              		.cfi_def_cfa_register 7
 132:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* USER CODE END 1 */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 139:Core/Src/main.c ****   HAL_Init();
 277              		.loc 1 139 3
 278 0004 FFF7FEFF 		bl	HAL_Init
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* USER CODE END Init */
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /* Configure the system clock */
 146:Core/Src/main.c ****   SystemClock_Config();
 279              		.loc 1 146 3
 280 0008 FFF7FEFF 		bl	SystemClock_Config
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /* USER CODE END SysInit */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* Initialize all configured peripherals */
 153:Core/Src/main.c ****   MX_GPIO_Init();
 281              		.loc 1 153 3
 282 000c FFF7FEFF 		bl	MX_GPIO_Init
 154:Core/Src/main.c ****   MX_CAN1_Init();
 283              		.loc 1 154 3
 284 0010 FFF7FEFF 		bl	MX_CAN1_Init
 155:Core/Src/main.c ****   MX_I2C1_Init();
 285              		.loc 1 155 3
 286 0014 FFF7FEFF 		bl	MX_I2C1_Init
 156:Core/Src/main.c ****   MX_USART1_UART_Init();
 287              		.loc 1 156 3
 288 0018 FFF7FEFF 		bl	MX_USART1_UART_Init
 157:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 158:Core/Src/main.c ****   HAL_CAN_Start(&hcan1);
 289              		.loc 1 158 3
 290 001c 1B48     		ldr	r0, .L23
ARM GAS  /tmp/ccVFuPtH.s 			page 9


 291 001e FFF7FEFF 		bl	HAL_CAN_Start
 159:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);
 292              		.loc 1 159 3
 293 0022 0221     		movs	r1, #2
 294 0024 1948     		ldr	r0, .L23
 295 0026 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   TxHeader.DLC = 8; // Length of data to send
 296              		.loc 1 161 16
 297 002a 194B     		ldr	r3, .L23+4
 298 002c 0822     		movs	r2, #8
 299 002e 1A61     		str	r2, [r3, #16]
 162:Core/Src/main.c ****   TxHeader.ExtId = 0;
 300              		.loc 1 162 18
 301 0030 174B     		ldr	r3, .L23+4
 302 0032 0022     		movs	r2, #0
 303 0034 5A60     		str	r2, [r3, #4]
 163:Core/Src/main.c ****   TxHeader.IDE = CAN_ID_STD;             // Message identifier, standard or extended
 304              		.loc 1 163 16
 305 0036 164B     		ldr	r3, .L23+4
 306 0038 0022     		movs	r2, #0
 307 003a 9A60     		str	r2, [r3, #8]
 164:Core/Src/main.c ****   TxHeader.RTR = CAN_RTR_DATA;           // Sending data
 308              		.loc 1 164 16
 309 003c 144B     		ldr	r3, .L23+4
 310 003e 0022     		movs	r2, #0
 311 0040 DA60     		str	r2, [r3, #12]
 165:Core/Src/main.c ****   TxHeader.StdId = 0x100;                // Id of this device, can be 11 bits wide
 312              		.loc 1 165 18
 313 0042 134B     		ldr	r3, .L23+4
 314 0044 4FF48072 		mov	r2, #256
 315 0048 1A60     		str	r2, [r3]
 166:Core/Src/main.c ****   TxHeader.TransmitGlobalTime = DISABLE; // no ideao
 316              		.loc 1 166 31
 317 004a 114B     		ldr	r3, .L23+4
 318 004c 0022     		movs	r2, #0
 319 004e 1A75     		strb	r2, [r3, #20]
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   testStuct.myint = 0x0069;
 320              		.loc 1 168 19
 321 0050 104B     		ldr	r3, .L23+8
 322 0052 6922     		movs	r2, #105
 323 0054 1A80     		strh	r2, [r3]	@ movhi
 169:Core/Src/main.c ****   testStuct.thisFloat = 45.123783F;
 324              		.loc 1 169 23
 325 0056 0F4B     		ldr	r3, .L23+8
 326 0058 0F4A     		ldr	r2, .L23+12
 327 005a 5A60     		str	r2, [r3, #4]	@ float
 170:Core/Src/main.c ****   testStuct.myLargerInt = 0x4206;
 328              		.loc 1 170 25
 329 005c 0D4B     		ldr	r3, .L23+8
 330 005e 44F20622 		movw	r2, #16902
 331 0062 5A80     		strh	r2, [r3, #2]	@ movhi
 171:Core/Src/main.c ****   testStuct.extraFloat = 45.123783F;
 332              		.loc 1 171 24
 333 0064 0B4B     		ldr	r3, .L23+8
 334 0066 0C4A     		ldr	r2, .L23+12
ARM GAS  /tmp/ccVFuPtH.s 			page 10


 335 0068 9A60     		str	r2, [r3, #8]	@ float
 172:Core/Src/main.c ****   testStuct.myLargestInt = 0x01234567;
 336              		.loc 1 172 26
 337 006a 0A4B     		ldr	r3, .L23+8
 338 006c 0B4A     		ldr	r2, .L23+16
 339 006e DA60     		str	r2, [r3, #12]
 173:Core/Src/main.c ****   /* USER CODE END 2 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* Init scheduler */
 176:Core/Src/main.c ****   osKernelInitialize();
 340              		.loc 1 176 3
 341 0070 FFF7FEFF 		bl	osKernelInitialize
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 179:Core/Src/main.c ****   /* add mutexes, ... */
 180:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 183:Core/Src/main.c ****   /* add semaphores, ... */
 184:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 187:Core/Src/main.c ****   /* start timers, add new ones, ... */
 188:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 191:Core/Src/main.c ****   /* add queues, ... */
 192:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* Create the thread(s) */
 195:Core/Src/main.c ****   /* creation of defaultTask */
 196:Core/Src/main.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 342              		.loc 1 196 23
 343 0074 0A4A     		ldr	r2, .L23+20
 344 0076 0021     		movs	r1, #0
 345 0078 0A48     		ldr	r0, .L23+24
 346 007a FFF7FEFF 		bl	osThreadNew
 347 007e 0346     		mov	r3, r0
 348              		.loc 1 196 21
 349 0080 094A     		ldr	r2, .L23+28
 350 0082 1360     		str	r3, [r2]
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 199:Core/Src/main.c ****   /* add threads, ... */
 200:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 203:Core/Src/main.c ****   /* add events, ... */
 204:Core/Src/main.c ****   /* USER CODE END RTOS_EVENTS */
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* Start scheduler */
 207:Core/Src/main.c ****   osKernelStart();
 351              		.loc 1 207 3
 352 0084 FFF7FEFF 		bl	osKernelStart
 353              	.L22:
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
ARM GAS  /tmp/ccVFuPtH.s 			page 11


 210:Core/Src/main.c ****   /* Infinite loop */
 211:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 212:Core/Src/main.c ****   while (1)
 354              		.loc 1 212 9 discriminator 1
 355 0088 FEE7     		b	.L22
 356              	.L24:
 357 008a 00BF     		.align	2
 358              	.L23:
 359 008c 00000000 		.word	hcan1
 360 0090 00000000 		.word	TxHeader
 361 0094 00000000 		.word	testStuct
 362 0098 C17E3442 		.word	1110736577
 363 009c 67452301 		.word	19088743
 364 00a0 00000000 		.word	defaultTask_attributes
 365 00a4 00000000 		.word	StartDefaultTask
 366 00a8 00000000 		.word	defaultTaskHandle
 367              		.cfi_endproc
 368              	.LFE138:
 370              		.section	.text.SystemClock_Config,"ax",%progbits
 371              		.align	1
 372              		.global	SystemClock_Config
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 377              	SystemClock_Config:
 378              	.LFB139:
 213:Core/Src/main.c ****   {
 214:Core/Src/main.c ****     /* USER CODE END WHILE */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 217:Core/Src/main.c ****   }
 218:Core/Src/main.c ****   /* USER CODE END 3 */
 219:Core/Src/main.c **** }
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** /**
 222:Core/Src/main.c ****   * @brief System Clock Configuration
 223:Core/Src/main.c ****   * @retval None
 224:Core/Src/main.c ****   */
 225:Core/Src/main.c **** void SystemClock_Config(void)
 226:Core/Src/main.c **** {
 379              		.loc 1 226 1
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 88
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383 0000 80B5     		push	{r7, lr}
 384              	.LCFI13:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 7, -8
 387              		.cfi_offset 14, -4
 388 0002 96B0     		sub	sp, sp, #88
 389              	.LCFI14:
 390              		.cfi_def_cfa_offset 96
 391 0004 00AF     		add	r7, sp, #0
 392              	.LCFI15:
 393              		.cfi_def_cfa_register 7
 227:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 394              		.loc 1 227 22
ARM GAS  /tmp/ccVFuPtH.s 			page 12


 395 0006 07F11403 		add	r3, r7, #20
 396 000a 4422     		movs	r2, #68
 397 000c 0021     		movs	r1, #0
 398 000e 1846     		mov	r0, r3
 399 0010 FFF7FEFF 		bl	memset
 228:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 400              		.loc 1 228 22
 401 0014 3B46     		mov	r3, r7
 402 0016 0022     		movs	r2, #0
 403 0018 1A60     		str	r2, [r3]
 404 001a 5A60     		str	r2, [r3, #4]
 405 001c 9A60     		str	r2, [r3, #8]
 406 001e DA60     		str	r2, [r3, #12]
 407 0020 1A61     		str	r2, [r3, #16]
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 231:Core/Src/main.c ****   */
 232:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 408              		.loc 1 232 7
 409 0022 4FF40070 		mov	r0, #512
 410 0026 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 411 002a 0346     		mov	r3, r0
 412              		.loc 1 232 6
 413 002c 002B     		cmp	r3, #0
 414 002e 01D0     		beq	.L26
 233:Core/Src/main.c ****   {
 234:Core/Src/main.c ****     Error_Handler();
 415              		.loc 1 234 5
 416 0030 FFF7FEFF 		bl	Error_Handler
 417              	.L26:
 235:Core/Src/main.c ****   }
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 238:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 239:Core/Src/main.c ****   */
 240:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 418              		.loc 1 240 36
 419 0034 0123     		movs	r3, #1
 420 0036 7B61     		str	r3, [r7, #20]
 241:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 421              		.loc 1 241 30
 422 0038 4FF4A023 		mov	r3, #327680
 423 003c BB61     		str	r3, [r7, #24]
 242:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 424              		.loc 1 242 34
 425 003e 0223     		movs	r3, #2
 426 0040 FB63     		str	r3, [r7, #60]
 243:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 427              		.loc 1 243 35
 428 0042 0323     		movs	r3, #3
 429 0044 3B64     		str	r3, [r7, #64]
 244:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 430              		.loc 1 244 30
 431 0046 0123     		movs	r3, #1
 432 0048 7B64     		str	r3, [r7, #68]
 245:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 20;
 433              		.loc 1 245 30
ARM GAS  /tmp/ccVFuPtH.s 			page 13


 434 004a 1423     		movs	r3, #20
 435 004c BB64     		str	r3, [r7, #72]
 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 436              		.loc 1 246 30
 437 004e 0723     		movs	r3, #7
 438 0050 FB64     		str	r3, [r7, #76]
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 439              		.loc 1 247 30
 440 0052 0223     		movs	r3, #2
 441 0054 3B65     		str	r3, [r7, #80]
 248:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 442              		.loc 1 248 30
 443 0056 0223     		movs	r3, #2
 444 0058 7B65     		str	r3, [r7, #84]
 249:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 445              		.loc 1 249 7
 446 005a 07F11403 		add	r3, r7, #20
 447 005e 1846     		mov	r0, r3
 448 0060 FFF7FEFF 		bl	HAL_RCC_OscConfig
 449 0064 0346     		mov	r3, r0
 450              		.loc 1 249 6
 451 0066 002B     		cmp	r3, #0
 452 0068 01D0     		beq	.L27
 250:Core/Src/main.c ****   {
 251:Core/Src/main.c ****     Error_Handler();
 453              		.loc 1 251 5
 454 006a FFF7FEFF 		bl	Error_Handler
 455              	.L27:
 252:Core/Src/main.c ****   }
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 255:Core/Src/main.c ****   */
 256:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 456              		.loc 1 256 31
 457 006e 0F23     		movs	r3, #15
 458 0070 3B60     		str	r3, [r7]
 257:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 258:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 459              		.loc 1 258 34
 460 0072 0323     		movs	r3, #3
 461 0074 7B60     		str	r3, [r7, #4]
 259:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 462              		.loc 1 259 35
 463 0076 0023     		movs	r3, #0
 464 0078 BB60     		str	r3, [r7, #8]
 260:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 465              		.loc 1 260 36
 466 007a 0023     		movs	r3, #0
 467 007c FB60     		str	r3, [r7, #12]
 261:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 468              		.loc 1 261 36
 469 007e 0023     		movs	r3, #0
 470 0080 3B61     		str	r3, [r7, #16]
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 471              		.loc 1 263 7
 472 0082 3B46     		mov	r3, r7
ARM GAS  /tmp/ccVFuPtH.s 			page 14


 473 0084 0421     		movs	r1, #4
 474 0086 1846     		mov	r0, r3
 475 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 476 008c 0346     		mov	r3, r0
 477              		.loc 1 263 6
 478 008e 002B     		cmp	r3, #0
 479 0090 01D0     		beq	.L28
 264:Core/Src/main.c ****   {
 265:Core/Src/main.c ****     Error_Handler();
 480              		.loc 1 265 5
 481 0092 FFF7FEFF 		bl	Error_Handler
 482              	.L28:
 266:Core/Src/main.c ****   }
 267:Core/Src/main.c ****   HAL_RCC_MCOConfig(RCC_MCO1, RCC_MCO1SOURCE_HSE, RCC_MCODIV_8);
 483              		.loc 1 267 3
 484 0096 4FF04052 		mov	r2, #805306368
 485 009a 4FF08061 		mov	r1, #67108864
 486 009e 0020     		movs	r0, #0
 487 00a0 FFF7FEFF 		bl	HAL_RCC_MCOConfig
 268:Core/Src/main.c **** }
 488              		.loc 1 268 1
 489 00a4 00BF     		nop
 490 00a6 5837     		adds	r7, r7, #88
 491              	.LCFI16:
 492              		.cfi_def_cfa_offset 8
 493 00a8 BD46     		mov	sp, r7
 494              	.LCFI17:
 495              		.cfi_def_cfa_register 13
 496              		@ sp needed
 497 00aa 80BD     		pop	{r7, pc}
 498              		.cfi_endproc
 499              	.LFE139:
 501              		.section	.text.MX_CAN1_Init,"ax",%progbits
 502              		.align	1
 503              		.syntax unified
 504              		.thumb
 505              		.thumb_func
 507              	MX_CAN1_Init:
 508              	.LFB140:
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** /**
 271:Core/Src/main.c ****   * @brief CAN1 Initialization Function
 272:Core/Src/main.c ****   * @param None
 273:Core/Src/main.c ****   * @retval None
 274:Core/Src/main.c ****   */
 275:Core/Src/main.c **** static void MX_CAN1_Init(void)
 276:Core/Src/main.c **** {
 509              		.loc 1 276 1
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 40
 512              		@ frame_needed = 1, uses_anonymous_args = 0
 513 0000 80B5     		push	{r7, lr}
 514              	.LCFI18:
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 7, -8
 517              		.cfi_offset 14, -4
 518 0002 8AB0     		sub	sp, sp, #40
ARM GAS  /tmp/ccVFuPtH.s 			page 15


 519              	.LCFI19:
 520              		.cfi_def_cfa_offset 48
 521 0004 00AF     		add	r7, sp, #0
 522              	.LCFI20:
 523              		.cfi_def_cfa_register 7
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
 285:Core/Src/main.c ****   hcan1.Instance = CAN1;
 524              		.loc 1 285 18
 525 0006 284B     		ldr	r3, .L33
 526 0008 284A     		ldr	r2, .L33+4
 527 000a 1A60     		str	r2, [r3]
 286:Core/Src/main.c ****   hcan1.Init.Prescaler = 16;
 528              		.loc 1 286 24
 529 000c 264B     		ldr	r3, .L33
 530 000e 1022     		movs	r2, #16
 531 0010 5A60     		str	r2, [r3, #4]
 287:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_LOOPBACK;
 532              		.loc 1 287 19
 533 0012 254B     		ldr	r3, .L33
 534 0014 4FF08042 		mov	r2, #1073741824
 535 0018 9A60     		str	r2, [r3, #8]
 288:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 536              		.loc 1 288 28
 537 001a 234B     		ldr	r3, .L33
 538 001c 0022     		movs	r2, #0
 539 001e DA60     		str	r2, [r3, #12]
 289:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 540              		.loc 1 289 23
 541 0020 214B     		ldr	r3, .L33
 542 0022 4FF40032 		mov	r2, #131072
 543 0026 1A61     		str	r2, [r3, #16]
 290:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 544              		.loc 1 290 23
 545 0028 1F4B     		ldr	r3, .L33
 546 002a 0022     		movs	r2, #0
 547 002c 5A61     		str	r2, [r3, #20]
 291:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 548              		.loc 1 291 32
 549 002e 1E4B     		ldr	r3, .L33
 550 0030 0022     		movs	r2, #0
 551 0032 1A76     		strb	r2, [r3, #24]
 292:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 552              		.loc 1 292 25
 553 0034 1C4B     		ldr	r3, .L33
 554 0036 0022     		movs	r2, #0
 555 0038 5A76     		strb	r2, [r3, #25]
 293:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 556              		.loc 1 293 25
 557 003a 1B4B     		ldr	r3, .L33
 558 003c 0022     		movs	r2, #0
ARM GAS  /tmp/ccVFuPtH.s 			page 16


 559 003e 9A76     		strb	r2, [r3, #26]
 294:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 560              		.loc 1 294 33
 561 0040 194B     		ldr	r3, .L33
 562 0042 0022     		movs	r2, #0
 563 0044 DA76     		strb	r2, [r3, #27]
 295:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 564              		.loc 1 295 32
 565 0046 184B     		ldr	r3, .L33
 566 0048 0022     		movs	r2, #0
 567 004a 1A77     		strb	r2, [r3, #28]
 296:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 568              		.loc 1 296 35
 569 004c 164B     		ldr	r3, .L33
 570 004e 0022     		movs	r2, #0
 571 0050 5A77     		strb	r2, [r3, #29]
 297:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 572              		.loc 1 297 7
 573 0052 1548     		ldr	r0, .L33
 574 0054 FFF7FEFF 		bl	HAL_CAN_Init
 575 0058 0346     		mov	r3, r0
 576              		.loc 1 297 6
 577 005a 002B     		cmp	r3, #0
 578 005c 01D0     		beq	.L30
 298:Core/Src/main.c ****   {
 299:Core/Src/main.c ****     Error_Handler();
 579              		.loc 1 299 5
 580 005e FFF7FEFF 		bl	Error_Handler
 581              	.L30:
 300:Core/Src/main.c ****   }
 301:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 302:Core/Src/main.c ****   CAN_FilterTypeDef sf;
 303:Core/Src/main.c ****   // Accept StdID's 0x100 through 0x1FF
 304:Core/Src/main.c ****   sf.FilterIdHigh = 0x100 << 5;
 582              		.loc 1 304 19
 583 0062 4FF40053 		mov	r3, #8192
 584 0066 3B60     		str	r3, [r7]
 305:Core/Src/main.c ****   sf.FilterMaskIdHigh = 0x700 << 5;
 585              		.loc 1 305 23
 586 0068 4FF46043 		mov	r3, #57344
 587 006c BB60     		str	r3, [r7, #8]
 306:Core/Src/main.c ****   sf.FilterIdLow = 0x0000;
 588              		.loc 1 306 18
 589 006e 0023     		movs	r3, #0
 590 0070 7B60     		str	r3, [r7, #4]
 307:Core/Src/main.c ****   sf.FilterMaskIdLow = 0x0000;
 591              		.loc 1 307 22
 592 0072 0023     		movs	r3, #0
 593 0074 FB60     		str	r3, [r7, #12]
 308:Core/Src/main.c ****   sf.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 594              		.loc 1 308 27
 595 0076 0023     		movs	r3, #0
 596 0078 3B61     		str	r3, [r7, #16]
 309:Core/Src/main.c ****   sf.FilterBank = 0;
 597              		.loc 1 309 17
 598 007a 0023     		movs	r3, #0
 599 007c 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccVFuPtH.s 			page 17


 310:Core/Src/main.c ****   sf.FilterMode = CAN_FILTERMODE_IDMASK;
 600              		.loc 1 310 17
 601 007e 0023     		movs	r3, #0
 602 0080 BB61     		str	r3, [r7, #24]
 311:Core/Src/main.c ****   sf.FilterScale = CAN_FILTERSCALE_32BIT;
 603              		.loc 1 311 18
 604 0082 0123     		movs	r3, #1
 605 0084 FB61     		str	r3, [r7, #28]
 312:Core/Src/main.c ****   sf.FilterActivation = CAN_FILTER_ENABLE;
 606              		.loc 1 312 23
 607 0086 0123     		movs	r3, #1
 608 0088 3B62     		str	r3, [r7, #32]
 313:Core/Src/main.c ****   if (HAL_CAN_ConfigFilter(&hcan1, &sf) != HAL_OK)
 609              		.loc 1 313 7
 610 008a 3B46     		mov	r3, r7
 611 008c 1946     		mov	r1, r3
 612 008e 0648     		ldr	r0, .L33
 613 0090 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 614 0094 0346     		mov	r3, r0
 615              		.loc 1 313 6
 616 0096 002B     		cmp	r3, #0
 617 0098 01D0     		beq	.L32
 314:Core/Src/main.c ****   {
 315:Core/Src/main.c ****     Error_Handler();
 618              		.loc 1 315 5
 619 009a FFF7FEFF 		bl	Error_Handler
 620              	.L32:
 316:Core/Src/main.c ****   }
 317:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** }
 621              		.loc 1 319 1
 622 009e 00BF     		nop
 623 00a0 2837     		adds	r7, r7, #40
 624              	.LCFI21:
 625              		.cfi_def_cfa_offset 8
 626 00a2 BD46     		mov	sp, r7
 627              	.LCFI22:
 628              		.cfi_def_cfa_register 13
 629              		@ sp needed
 630 00a4 80BD     		pop	{r7, pc}
 631              	.L34:
 632 00a6 00BF     		.align	2
 633              	.L33:
 634 00a8 00000000 		.word	hcan1
 635 00ac 00640040 		.word	1073767424
 636              		.cfi_endproc
 637              	.LFE140:
 639              		.section	.text.MX_I2C1_Init,"ax",%progbits
 640              		.align	1
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 645              	MX_I2C1_Init:
 646              	.LFB141:
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** /**
ARM GAS  /tmp/ccVFuPtH.s 			page 18


 322:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 323:Core/Src/main.c ****   * @param None
 324:Core/Src/main.c ****   * @retval None
 325:Core/Src/main.c ****   */
 326:Core/Src/main.c **** static void MX_I2C1_Init(void)
 327:Core/Src/main.c **** {
 647              		.loc 1 327 1
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 0
 650              		@ frame_needed = 1, uses_anonymous_args = 0
 651 0000 80B5     		push	{r7, lr}
 652              	.LCFI23:
 653              		.cfi_def_cfa_offset 8
 654              		.cfi_offset 7, -8
 655              		.cfi_offset 14, -4
 656 0002 00AF     		add	r7, sp, #0
 657              	.LCFI24:
 658              		.cfi_def_cfa_register 7
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 336:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 659              		.loc 1 336 18
 660 0004 1B4B     		ldr	r3, .L40
 661 0006 1C4A     		ldr	r2, .L40+4
 662 0008 1A60     		str	r2, [r3]
 337:Core/Src/main.c ****   hi2c1.Init.Timing = 0x10909CEC;
 663              		.loc 1 337 21
 664 000a 1A4B     		ldr	r3, .L40
 665 000c 1B4A     		ldr	r2, .L40+8
 666 000e 5A60     		str	r2, [r3, #4]
 338:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 667              		.loc 1 338 26
 668 0010 184B     		ldr	r3, .L40
 669 0012 0022     		movs	r2, #0
 670 0014 9A60     		str	r2, [r3, #8]
 339:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 671              		.loc 1 339 29
 672 0016 174B     		ldr	r3, .L40
 673 0018 0122     		movs	r2, #1
 674 001a DA60     		str	r2, [r3, #12]
 340:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 675              		.loc 1 340 30
 676 001c 154B     		ldr	r3, .L40
 677 001e 0022     		movs	r2, #0
 678 0020 1A61     		str	r2, [r3, #16]
 341:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 679              		.loc 1 341 26
 680 0022 144B     		ldr	r3, .L40
 681 0024 0022     		movs	r2, #0
 682 0026 5A61     		str	r2, [r3, #20]
 342:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
ARM GAS  /tmp/ccVFuPtH.s 			page 19


 683              		.loc 1 342 31
 684 0028 124B     		ldr	r3, .L40
 685 002a 0022     		movs	r2, #0
 686 002c 9A61     		str	r2, [r3, #24]
 343:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 687              		.loc 1 343 30
 688 002e 114B     		ldr	r3, .L40
 689 0030 0022     		movs	r2, #0
 690 0032 DA61     		str	r2, [r3, #28]
 344:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 691              		.loc 1 344 28
 692 0034 0F4B     		ldr	r3, .L40
 693 0036 0022     		movs	r2, #0
 694 0038 1A62     		str	r2, [r3, #32]
 345:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 695              		.loc 1 345 7
 696 003a 0E48     		ldr	r0, .L40
 697 003c FFF7FEFF 		bl	HAL_I2C_Init
 698 0040 0346     		mov	r3, r0
 699              		.loc 1 345 6
 700 0042 002B     		cmp	r3, #0
 701 0044 01D0     		beq	.L36
 346:Core/Src/main.c ****   {
 347:Core/Src/main.c ****     Error_Handler();
 702              		.loc 1 347 5
 703 0046 FFF7FEFF 		bl	Error_Handler
 704              	.L36:
 348:Core/Src/main.c ****   }
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   /** Configure Analogue filter
 351:Core/Src/main.c ****   */
 352:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 705              		.loc 1 352 7
 706 004a 0021     		movs	r1, #0
 707 004c 0948     		ldr	r0, .L40
 708 004e FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 709 0052 0346     		mov	r3, r0
 710              		.loc 1 352 6
 711 0054 002B     		cmp	r3, #0
 712 0056 01D0     		beq	.L37
 353:Core/Src/main.c ****   {
 354:Core/Src/main.c ****     Error_Handler();
 713              		.loc 1 354 5
 714 0058 FFF7FEFF 		bl	Error_Handler
 715              	.L37:
 355:Core/Src/main.c ****   }
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****   /** Configure Digital filter
 358:Core/Src/main.c ****   */
 359:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 716              		.loc 1 359 7
 717 005c 0021     		movs	r1, #0
 718 005e 0548     		ldr	r0, .L40
 719 0060 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 720 0064 0346     		mov	r3, r0
 721              		.loc 1 359 6
 722 0066 002B     		cmp	r3, #0
ARM GAS  /tmp/ccVFuPtH.s 			page 20


 723 0068 01D0     		beq	.L39
 360:Core/Src/main.c ****   {
 361:Core/Src/main.c ****     Error_Handler();
 724              		.loc 1 361 5
 725 006a FFF7FEFF 		bl	Error_Handler
 726              	.L39:
 362:Core/Src/main.c ****   }
 363:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** }
 727              		.loc 1 367 1
 728 006e 00BF     		nop
 729 0070 80BD     		pop	{r7, pc}
 730              	.L41:
 731 0072 00BF     		.align	2
 732              	.L40:
 733 0074 00000000 		.word	hi2c1
 734 0078 00540040 		.word	1073763328
 735 007c EC9C9010 		.word	277912812
 736              		.cfi_endproc
 737              	.LFE141:
 739              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 740              		.align	1
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 745              	MX_USART1_UART_Init:
 746              	.LFB142:
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** /**
 370:Core/Src/main.c ****   * @brief USART1 Initialization Function
 371:Core/Src/main.c ****   * @param None
 372:Core/Src/main.c ****   * @retval None
 373:Core/Src/main.c ****   */
 374:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 375:Core/Src/main.c **** {
 747              		.loc 1 375 1
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 1, uses_anonymous_args = 0
 751 0000 80B5     		push	{r7, lr}
 752              	.LCFI25:
 753              		.cfi_def_cfa_offset 8
 754              		.cfi_offset 7, -8
 755              		.cfi_offset 14, -4
 756 0002 00AF     		add	r7, sp, #0
 757              	.LCFI26:
 758              		.cfi_def_cfa_register 7
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 382:Core/Src/main.c **** 
ARM GAS  /tmp/ccVFuPtH.s 			page 21


 383:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 384:Core/Src/main.c ****   huart1.Instance = USART1;
 759              		.loc 1 384 19
 760 0004 144B     		ldr	r3, .L45
 761 0006 154A     		ldr	r2, .L45+4
 762 0008 1A60     		str	r2, [r3]
 385:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 763              		.loc 1 385 24
 764 000a 134B     		ldr	r3, .L45
 765 000c 4FF4E132 		mov	r2, #115200
 766 0010 5A60     		str	r2, [r3, #4]
 386:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 767              		.loc 1 386 26
 768 0012 114B     		ldr	r3, .L45
 769 0014 0022     		movs	r2, #0
 770 0016 9A60     		str	r2, [r3, #8]
 387:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 771              		.loc 1 387 24
 772 0018 0F4B     		ldr	r3, .L45
 773 001a 0022     		movs	r2, #0
 774 001c DA60     		str	r2, [r3, #12]
 388:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 775              		.loc 1 388 22
 776 001e 0E4B     		ldr	r3, .L45
 777 0020 0022     		movs	r2, #0
 778 0022 1A61     		str	r2, [r3, #16]
 389:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 779              		.loc 1 389 20
 780 0024 0C4B     		ldr	r3, .L45
 781 0026 0C22     		movs	r2, #12
 782 0028 5A61     		str	r2, [r3, #20]
 390:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_RTS_CTS;
 783              		.loc 1 390 25
 784 002a 0B4B     		ldr	r3, .L45
 785 002c 4FF44072 		mov	r2, #768
 786 0030 9A61     		str	r2, [r3, #24]
 391:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 787              		.loc 1 391 28
 788 0032 094B     		ldr	r3, .L45
 789 0034 0022     		movs	r2, #0
 790 0036 DA61     		str	r2, [r3, #28]
 392:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 791              		.loc 1 392 30
 792 0038 074B     		ldr	r3, .L45
 793 003a 0022     		movs	r2, #0
 794 003c 1A62     		str	r2, [r3, #32]
 393:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 795              		.loc 1 393 38
 796 003e 064B     		ldr	r3, .L45
 797 0040 0022     		movs	r2, #0
 798 0042 5A62     		str	r2, [r3, #36]
 394:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 799              		.loc 1 394 7
 800 0044 0448     		ldr	r0, .L45
 801 0046 FFF7FEFF 		bl	HAL_UART_Init
 802 004a 0346     		mov	r3, r0
 803              		.loc 1 394 6
ARM GAS  /tmp/ccVFuPtH.s 			page 22


 804 004c 002B     		cmp	r3, #0
 805 004e 01D0     		beq	.L44
 395:Core/Src/main.c ****   {
 396:Core/Src/main.c ****     Error_Handler();
 806              		.loc 1 396 5
 807 0050 FFF7FEFF 		bl	Error_Handler
 808              	.L44:
 397:Core/Src/main.c ****   }
 398:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** }
 809              		.loc 1 402 1
 810 0054 00BF     		nop
 811 0056 80BD     		pop	{r7, pc}
 812              	.L46:
 813              		.align	2
 814              	.L45:
 815 0058 00000000 		.word	huart1
 816 005c 00380140 		.word	1073821696
 817              		.cfi_endproc
 818              	.LFE142:
 820              		.section	.text.MX_GPIO_Init,"ax",%progbits
 821              		.align	1
 822              		.syntax unified
 823              		.thumb
 824              		.thumb_func
 826              	MX_GPIO_Init:
 827              	.LFB143:
 403:Core/Src/main.c **** 
 404:Core/Src/main.c **** /**
 405:Core/Src/main.c ****   * @brief GPIO Initialization Function
 406:Core/Src/main.c ****   * @param None
 407:Core/Src/main.c ****   * @retval None
 408:Core/Src/main.c ****   */
 409:Core/Src/main.c **** static void MX_GPIO_Init(void)
 410:Core/Src/main.c **** {
 828              		.loc 1 410 1
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 40
 831              		@ frame_needed = 1, uses_anonymous_args = 0
 832 0000 80B5     		push	{r7, lr}
 833              	.LCFI27:
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 8AB0     		sub	sp, sp, #40
 838              	.LCFI28:
 839              		.cfi_def_cfa_offset 48
 840 0004 00AF     		add	r7, sp, #0
 841              	.LCFI29:
 842              		.cfi_def_cfa_register 7
 411:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 843              		.loc 1 411 20
 844 0006 07F11403 		add	r3, r7, #20
 845 000a 0022     		movs	r2, #0
ARM GAS  /tmp/ccVFuPtH.s 			page 23


 846 000c 1A60     		str	r2, [r3]
 847 000e 5A60     		str	r2, [r3, #4]
 848 0010 9A60     		str	r2, [r3, #8]
 849 0012 DA60     		str	r2, [r3, #12]
 850 0014 1A61     		str	r2, [r3, #16]
 851              	.LBB4:
 412:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 413:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 416:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 852              		.loc 1 416 3
 853 0016 6F4B     		ldr	r3, .L48
 854 0018 DB6C     		ldr	r3, [r3, #76]
 855 001a 6E4A     		ldr	r2, .L48
 856 001c 43F00403 		orr	r3, r3, #4
 857 0020 D364     		str	r3, [r2, #76]
 858 0022 6C4B     		ldr	r3, .L48
 859 0024 DB6C     		ldr	r3, [r3, #76]
 860 0026 03F00403 		and	r3, r3, #4
 861 002a 3B61     		str	r3, [r7, #16]
 862 002c 3B69     		ldr	r3, [r7, #16]
 863              	.LBE4:
 864              	.LBB5:
 417:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 865              		.loc 1 417 3
 866 002e 694B     		ldr	r3, .L48
 867 0030 DB6C     		ldr	r3, [r3, #76]
 868 0032 684A     		ldr	r2, .L48
 869 0034 43F00103 		orr	r3, r3, #1
 870 0038 D364     		str	r3, [r2, #76]
 871 003a 664B     		ldr	r3, .L48
 872 003c DB6C     		ldr	r3, [r3, #76]
 873 003e 03F00103 		and	r3, r3, #1
 874 0042 FB60     		str	r3, [r7, #12]
 875 0044 FB68     		ldr	r3, [r7, #12]
 876              	.LBE5:
 877              	.LBB6:
 418:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 878              		.loc 1 418 3
 879 0046 634B     		ldr	r3, .L48
 880 0048 DB6C     		ldr	r3, [r3, #76]
 881 004a 624A     		ldr	r2, .L48
 882 004c 43F00203 		orr	r3, r3, #2
 883 0050 D364     		str	r3, [r2, #76]
 884 0052 604B     		ldr	r3, .L48
 885 0054 DB6C     		ldr	r3, [r3, #76]
 886 0056 03F00203 		and	r3, r3, #2
 887 005a BB60     		str	r3, [r7, #8]
 888 005c BB68     		ldr	r3, [r7, #8]
 889              	.LBE6:
 890              	.LBB7:
 419:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 891              		.loc 1 419 3
 892 005e 5D4B     		ldr	r3, .L48
 893 0060 DB6C     		ldr	r3, [r3, #76]
 894 0062 5C4A     		ldr	r2, .L48
ARM GAS  /tmp/ccVFuPtH.s 			page 24


 895 0064 43F08003 		orr	r3, r3, #128
 896 0068 D364     		str	r3, [r2, #76]
 897 006a 5A4B     		ldr	r3, .L48
 898 006c DB6C     		ldr	r3, [r3, #76]
 899 006e 03F08003 		and	r3, r3, #128
 900 0072 7B60     		str	r3, [r7, #4]
 901 0074 7B68     		ldr	r3, [r7, #4]
 902              	.LBE7:
 420:Core/Src/main.c **** 
 421:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 422:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, SUPPLY_VLVE_Pin|PURGE_VLVE_Pin|CAN_STBY_Pin, GPIO_PIN_RESET);
 903              		.loc 1 422 3
 904 0076 0022     		movs	r2, #0
 905 0078 48F20601 		movw	r1, #32774
 906 007c 4FF09040 		mov	r0, #1207959552
 907 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 423:Core/Src/main.c **** 
 424:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 425:Core/Src/main.c ****   HAL_GPIO_WritePin(FTDI_NRST_GPIO_Port, FTDI_NRST_Pin, GPIO_PIN_RESET);
 908              		.loc 1 425 3
 909 0084 0022     		movs	r2, #0
 910 0086 0221     		movs	r1, #2
 911 0088 5348     		ldr	r0, .L48+4
 912 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****   /*Configure GPIO pins : BRD_STRT_Pin BRD_PRGE_Pin */
 428:Core/Src/main.c ****   GPIO_InitStruct.Pin = BRD_STRT_Pin|BRD_PRGE_Pin;
 913              		.loc 1 428 23
 914 008e 4FF44043 		mov	r3, #49152
 915 0092 7B61     		str	r3, [r7, #20]
 429:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 916              		.loc 1 429 24
 917 0094 4FF40413 		mov	r3, #2162688
 918 0098 BB61     		str	r3, [r7, #24]
 430:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 919              		.loc 1 430 24
 920 009a 0123     		movs	r3, #1
 921 009c FB61     		str	r3, [r7, #28]
 431:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 922              		.loc 1 431 3
 923 009e 07F11403 		add	r3, r7, #20
 924 00a2 1946     		mov	r1, r3
 925 00a4 4D48     		ldr	r0, .L48+8
 926 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   /*Configure GPIO pins : SUPPLY_VLVE_Pin PURGE_VLVE_Pin CAN_STBY_Pin */
 434:Core/Src/main.c ****   GPIO_InitStruct.Pin = SUPPLY_VLVE_Pin|PURGE_VLVE_Pin|CAN_STBY_Pin;
 927              		.loc 1 434 23
 928 00aa 48F20603 		movw	r3, #32774
 929 00ae 7B61     		str	r3, [r7, #20]
 435:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 930              		.loc 1 435 24
 931 00b0 0123     		movs	r3, #1
 932 00b2 BB61     		str	r3, [r7, #24]
 436:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 933              		.loc 1 436 24
 934 00b4 0223     		movs	r3, #2
ARM GAS  /tmp/ccVFuPtH.s 			page 25


 935 00b6 FB61     		str	r3, [r7, #28]
 437:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 936              		.loc 1 437 25
 937 00b8 0023     		movs	r3, #0
 938 00ba 3B62     		str	r3, [r7, #32]
 438:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 939              		.loc 1 438 3
 940 00bc 07F11403 		add	r3, r7, #20
 941 00c0 1946     		mov	r1, r3
 942 00c2 4FF09040 		mov	r0, #1207959552
 943 00c6 FFF7FEFF 		bl	HAL_GPIO_Init
 439:Core/Src/main.c **** 
 440:Core/Src/main.c ****   /*Configure GPIO pins : EXT_STRT_Pin EXT_STOP_Pin */
 441:Core/Src/main.c ****   GPIO_InitStruct.Pin = EXT_STRT_Pin|EXT_STOP_Pin;
 944              		.loc 1 441 23
 945 00ca 4823     		movs	r3, #72
 946 00cc 7B61     		str	r3, [r7, #20]
 442:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 947              		.loc 1 442 24
 948 00ce 4FF40413 		mov	r3, #2162688
 949 00d2 BB61     		str	r3, [r7, #24]
 443:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 950              		.loc 1 443 24
 951 00d4 0123     		movs	r3, #1
 952 00d6 FB61     		str	r3, [r7, #28]
 444:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 953              		.loc 1 444 3
 954 00d8 07F11403 		add	r3, r7, #20
 955 00dc 1946     		mov	r1, r3
 956 00de 4FF09040 		mov	r0, #1207959552
 957 00e2 FFF7FEFF 		bl	HAL_GPIO_Init
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****   /*Configure GPIO pins : ACC_INT1_Pin ACC_INT2_Pin */
 447:Core/Src/main.c ****   GPIO_InitStruct.Pin = ACC_INT1_Pin|ACC_INT2_Pin;
 958              		.loc 1 447 23
 959 00e6 3023     		movs	r3, #48
 960 00e8 7B61     		str	r3, [r7, #20]
 448:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 961              		.loc 1 448 24
 962 00ea 4FF48813 		mov	r3, #1114112
 963 00ee BB61     		str	r3, [r7, #24]
 449:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 964              		.loc 1 449 24
 965 00f0 0223     		movs	r3, #2
 966 00f2 FB61     		str	r3, [r7, #28]
 450:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 967              		.loc 1 450 3
 968 00f4 07F11403 		add	r3, r7, #20
 969 00f8 1946     		mov	r1, r3
 970 00fa 4FF09040 		mov	r0, #1207959552
 971 00fe FFF7FEFF 		bl	HAL_GPIO_Init
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /*Configure GPIO pin : PA7 */
 453:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_7;
 972              		.loc 1 453 23
 973 0102 8023     		movs	r3, #128
 974 0104 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccVFuPtH.s 			page 26


 454:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 975              		.loc 1 454 24
 976 0106 0323     		movs	r3, #3
 977 0108 BB61     		str	r3, [r7, #24]
 455:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 978              		.loc 1 455 24
 979 010a 0023     		movs	r3, #0
 980 010c FB61     		str	r3, [r7, #28]
 456:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 981              		.loc 1 456 3
 982 010e 07F11403 		add	r3, r7, #20
 983 0112 1946     		mov	r1, r3
 984 0114 4FF09040 		mov	r0, #1207959552
 985 0118 FFF7FEFF 		bl	HAL_GPIO_Init
 457:Core/Src/main.c **** 
 458:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB5 */
 459:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_5;
 986              		.loc 1 459 23
 987 011c 2123     		movs	r3, #33
 988 011e 7B61     		str	r3, [r7, #20]
 460:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 989              		.loc 1 460 24
 990 0120 0323     		movs	r3, #3
 991 0122 BB61     		str	r3, [r7, #24]
 461:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 992              		.loc 1 461 24
 993 0124 0023     		movs	r3, #0
 994 0126 FB61     		str	r3, [r7, #28]
 462:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 995              		.loc 1 462 3
 996 0128 07F11403 		add	r3, r7, #20
 997 012c 1946     		mov	r1, r3
 998 012e 2A48     		ldr	r0, .L48+4
 999 0130 FFF7FEFF 		bl	HAL_GPIO_Init
 463:Core/Src/main.c **** 
 464:Core/Src/main.c ****   /*Configure GPIO pin : FTDI_NRST_Pin */
 465:Core/Src/main.c ****   GPIO_InitStruct.Pin = FTDI_NRST_Pin;
 1000              		.loc 1 465 23
 1001 0134 0223     		movs	r3, #2
 1002 0136 7B61     		str	r3, [r7, #20]
 466:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1003              		.loc 1 466 24
 1004 0138 0123     		movs	r3, #1
 1005 013a BB61     		str	r3, [r7, #24]
 467:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 1006              		.loc 1 467 24
 1007 013c 0123     		movs	r3, #1
 1008 013e FB61     		str	r3, [r7, #28]
 468:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1009              		.loc 1 468 25
 1010 0140 0023     		movs	r3, #0
 1011 0142 3B62     		str	r3, [r7, #32]
 469:Core/Src/main.c ****   HAL_GPIO_Init(FTDI_NRST_GPIO_Port, &GPIO_InitStruct);
 1012              		.loc 1 469 3
 1013 0144 07F11403 		add	r3, r7, #20
 1014 0148 1946     		mov	r1, r3
 1015 014a 2348     		ldr	r0, .L48+4
ARM GAS  /tmp/ccVFuPtH.s 			page 27


 1016 014c FFF7FEFF 		bl	HAL_GPIO_Init
 470:Core/Src/main.c **** 
 471:Core/Src/main.c ****   /*Configure GPIO pin : PA8 */
 472:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 1017              		.loc 1 472 23
 1018 0150 4FF48073 		mov	r3, #256
 1019 0154 7B61     		str	r3, [r7, #20]
 473:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1020              		.loc 1 473 24
 1021 0156 0223     		movs	r3, #2
 1022 0158 BB61     		str	r3, [r7, #24]
 474:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1023              		.loc 1 474 24
 1024 015a 0023     		movs	r3, #0
 1025 015c FB61     		str	r3, [r7, #28]
 475:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1026              		.loc 1 475 25
 1027 015e 0023     		movs	r3, #0
 1028 0160 3B62     		str	r3, [r7, #32]
 476:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1029              		.loc 1 476 29
 1030 0162 0023     		movs	r3, #0
 1031 0164 7B62     		str	r3, [r7, #36]
 477:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1032              		.loc 1 477 3
 1033 0166 07F11403 		add	r3, r7, #20
 1034 016a 1946     		mov	r1, r3
 1035 016c 4FF09040 		mov	r0, #1207959552
 1036 0170 FFF7FEFF 		bl	HAL_GPIO_Init
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /*Configure GPIO pin : PH3 */
 480:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3;
 1037              		.loc 1 480 23
 1038 0174 0823     		movs	r3, #8
 1039 0176 7B61     		str	r3, [r7, #20]
 481:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 1040              		.loc 1 481 24
 1041 0178 0323     		movs	r3, #3
 1042 017a BB61     		str	r3, [r7, #24]
 482:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1043              		.loc 1 482 24
 1044 017c 0023     		movs	r3, #0
 1045 017e FB61     		str	r3, [r7, #28]
 483:Core/Src/main.c ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 1046              		.loc 1 483 3
 1047 0180 07F11403 		add	r3, r7, #20
 1048 0184 1946     		mov	r1, r3
 1049 0186 1648     		ldr	r0, .L48+12
 1050 0188 FFF7FEFF 		bl	HAL_GPIO_Init
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****   /* EXTI interrupt init*/
 486:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 1051              		.loc 1 486 3
 1052 018c 0022     		movs	r2, #0
 1053 018e 0521     		movs	r1, #5
 1054 0190 0920     		movs	r0, #9
 1055 0192 FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /tmp/ccVFuPtH.s 			page 28


 487:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 1056              		.loc 1 487 3
 1057 0196 0920     		movs	r0, #9
 1058 0198 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 488:Core/Src/main.c **** 
 489:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI4_IRQn, 5, 0);
 1059              		.loc 1 489 3
 1060 019c 0022     		movs	r2, #0
 1061 019e 0521     		movs	r1, #5
 1062 01a0 0A20     		movs	r0, #10
 1063 01a2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 490:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 1064              		.loc 1 490 3
 1065 01a6 0A20     		movs	r0, #10
 1066 01a8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 491:Core/Src/main.c **** 
 492:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 5, 0);
 1067              		.loc 1 492 3
 1068 01ac 0022     		movs	r2, #0
 1069 01ae 0521     		movs	r1, #5
 1070 01b0 1720     		movs	r0, #23
 1071 01b2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 493:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 1072              		.loc 1 493 3
 1073 01b6 1720     		movs	r0, #23
 1074 01b8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 494:Core/Src/main.c **** 
 495:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 1075              		.loc 1 495 3
 1076 01bc 0022     		movs	r2, #0
 1077 01be 0521     		movs	r1, #5
 1078 01c0 2820     		movs	r0, #40
 1079 01c2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 496:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 1080              		.loc 1 496 3
 1081 01c6 2820     		movs	r0, #40
 1082 01c8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 499:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 500:Core/Src/main.c **** }
 1083              		.loc 1 500 1
 1084 01cc 00BF     		nop
 1085 01ce 2837     		adds	r7, r7, #40
 1086              	.LCFI30:
 1087              		.cfi_def_cfa_offset 8
 1088 01d0 BD46     		mov	sp, r7
 1089              	.LCFI31:
 1090              		.cfi_def_cfa_register 13
 1091              		@ sp needed
 1092 01d2 80BD     		pop	{r7, pc}
 1093              	.L49:
 1094              		.align	2
 1095              	.L48:
 1096 01d4 00100240 		.word	1073876992
 1097 01d8 00040048 		.word	1207960576
 1098 01dc 00080048 		.word	1207961600
ARM GAS  /tmp/ccVFuPtH.s 			page 29


 1099 01e0 001C0048 		.word	1207966720
 1100              		.cfi_endproc
 1101              	.LFE143:
 1103              		.section	.text.StartDefaultTask,"ax",%progbits
 1104              		.align	1
 1105              		.global	StartDefaultTask
 1106              		.syntax unified
 1107              		.thumb
 1108              		.thumb_func
 1110              	StartDefaultTask:
 1111              	.LFB144:
 501:Core/Src/main.c **** 
 502:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 503:Core/Src/main.c **** 
 504:Core/Src/main.c **** /* USER CODE END 4 */
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 507:Core/Src/main.c **** /**
 508:Core/Src/main.c ****  * @brief  Function implementing the defaultTask thread.
 509:Core/Src/main.c ****  * @param  argument: Not used
 510:Core/Src/main.c ****  * @retval None
 511:Core/Src/main.c ****  */
 512:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 513:Core/Src/main.c **** void StartDefaultTask(void *argument)
 514:Core/Src/main.c **** {
 1112              		.loc 1 514 1
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 8
 1115              		@ frame_needed = 1, uses_anonymous_args = 0
 1116 0000 80B5     		push	{r7, lr}
 1117              	.LCFI32:
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 7, -8
 1120              		.cfi_offset 14, -4
 1121 0002 82B0     		sub	sp, sp, #8
 1122              	.LCFI33:
 1123              		.cfi_def_cfa_offset 16
 1124 0004 00AF     		add	r7, sp, #0
 1125              	.LCFI34:
 1126              		.cfi_def_cfa_register 7
 1127 0006 7860     		str	r0, [r7, #4]
 1128              	.L53:
 515:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 516:Core/Src/main.c ****   /* Infinite loop */
 517:Core/Src/main.c ****   for (;;)
 518:Core/Src/main.c ****   {
 519:Core/Src/main.c ****     TxHeader.StdId = 0x102;
 1129              		.loc 1 519 20
 1130 0008 204B     		ldr	r3, .L54
 1131 000a 4FF48172 		mov	r2, #258
 1132 000e 1A60     		str	r2, [r3]
 520:Core/Src/main.c ****     HAL_GPIO_WritePin(SUPPLY_VLVE_GPIO_Port, SUPPLY_VLVE_Pin, GPIO_PIN_SET);
 1133              		.loc 1 520 5
 1134 0010 0122     		movs	r2, #1
 1135 0012 0221     		movs	r1, #2
 1136 0014 4FF09040 		mov	r0, #1207959552
 1137 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccVFuPtH.s 			page 30


 521:Core/Src/main.c ****     HAL_GPIO_WritePin(PURGE_VLVE_GPIO_Port, PURGE_VLVE_Pin, GPIO_PIN_SET);
 1138              		.loc 1 521 5
 1139 001c 0122     		movs	r2, #1
 1140 001e 0421     		movs	r1, #4
 1141 0020 4FF09040 		mov	r0, #1207959552
 1142 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 522:Core/Src/main.c ****     if (HAL_CAN_AddTxMessage(&hcan1, &TxHeader, (void *)pTestStuct, &TxMailbox) != HAL_OK)
 1143              		.loc 1 522 9
 1144 0028 194B     		ldr	r3, .L54+4
 1145 002a 1A68     		ldr	r2, [r3]
 1146 002c 194B     		ldr	r3, .L54+8
 1147 002e 1749     		ldr	r1, .L54
 1148 0030 1948     		ldr	r0, .L54+12
 1149 0032 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1150 0036 0346     		mov	r3, r0
 1151              		.loc 1 522 8
 1152 0038 002B     		cmp	r3, #0
 1153 003a 01D0     		beq	.L51
 523:Core/Src/main.c ****     {
 524:Core/Src/main.c ****       Error_Handler();
 1154              		.loc 1 524 7
 1155 003c FFF7FEFF 		bl	Error_Handler
 1156              	.L51:
 525:Core/Src/main.c ****     }
 526:Core/Src/main.c ****     osDelay(50);
 1157              		.loc 1 526 5
 1158 0040 3220     		movs	r0, #50
 1159 0042 FFF7FEFF 		bl	osDelay
 527:Core/Src/main.c ****     TxHeader.StdId = 0x103;
 1160              		.loc 1 527 20
 1161 0046 114B     		ldr	r3, .L54
 1162 0048 40F20312 		movw	r2, #259
 1163 004c 1A60     		str	r2, [r3]
 528:Core/Src/main.c ****     HAL_GPIO_WritePin(SUPPLY_VLVE_GPIO_Port, SUPPLY_VLVE_Pin, GPIO_PIN_RESET);
 1164              		.loc 1 528 5
 1165 004e 0022     		movs	r2, #0
 1166 0050 0221     		movs	r1, #2
 1167 0052 4FF09040 		mov	r0, #1207959552
 1168 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 529:Core/Src/main.c ****     HAL_GPIO_WritePin(PURGE_VLVE_GPIO_Port, PURGE_VLVE_Pin, GPIO_PIN_RESET);
 1169              		.loc 1 529 5
 1170 005a 0022     		movs	r2, #0
 1171 005c 0421     		movs	r1, #4
 1172 005e 4FF09040 		mov	r0, #1207959552
 1173 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 530:Core/Src/main.c ****     if (HAL_CAN_AddTxMessage(&hcan1, &TxHeader, (void *)pTestStuct + 8, &TxMailbox) != HAL_OK)
 1174              		.loc 1 530 68
 1175 0066 0A4B     		ldr	r3, .L54+4
 1176 0068 1B68     		ldr	r3, [r3]
 1177              		.loc 1 530 9
 1178 006a 03F10802 		add	r2, r3, #8
 1179 006e 094B     		ldr	r3, .L54+8
 1180 0070 0649     		ldr	r1, .L54
 1181 0072 0948     		ldr	r0, .L54+12
 1182 0074 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 1183 0078 0346     		mov	r3, r0
 1184              		.loc 1 530 8
ARM GAS  /tmp/ccVFuPtH.s 			page 31


 1185 007a 002B     		cmp	r3, #0
 1186 007c 01D0     		beq	.L52
 531:Core/Src/main.c ****     {
 532:Core/Src/main.c ****       Error_Handler();
 1187              		.loc 1 532 7
 1188 007e FFF7FEFF 		bl	Error_Handler
 1189              	.L52:
 533:Core/Src/main.c ****     }
 534:Core/Src/main.c ****     osDelay(50);
 1190              		.loc 1 534 5
 1191 0082 3220     		movs	r0, #50
 1192 0084 FFF7FEFF 		bl	osDelay
 519:Core/Src/main.c ****     HAL_GPIO_WritePin(SUPPLY_VLVE_GPIO_Port, SUPPLY_VLVE_Pin, GPIO_PIN_SET);
 1193              		.loc 1 519 20
 1194 0088 BEE7     		b	.L53
 1195              	.L55:
 1196 008a 00BF     		.align	2
 1197              	.L54:
 1198 008c 00000000 		.word	TxHeader
 1199 0090 00000000 		.word	pTestStuct
 1200 0094 00000000 		.word	TxMailbox
 1201 0098 00000000 		.word	hcan1
 1202              		.cfi_endproc
 1203              	.LFE144:
 1205              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 1206              		.align	1
 1207              		.global	HAL_TIM_PeriodElapsedCallback
 1208              		.syntax unified
 1209              		.thumb
 1210              		.thumb_func
 1212              	HAL_TIM_PeriodElapsedCallback:
 1213              	.LFB145:
 535:Core/Src/main.c ****   }
 536:Core/Src/main.c ****   /* USER CODE END 5 */
 537:Core/Src/main.c **** }
 538:Core/Src/main.c **** 
 539:Core/Src/main.c **** /**
 540:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 541:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 542:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 543:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 544:Core/Src/main.c ****   * @param  htim : TIM handle
 545:Core/Src/main.c ****   * @retval None
 546:Core/Src/main.c ****   */
 547:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 548:Core/Src/main.c **** {
 1214              		.loc 1 548 1
 1215              		.cfi_startproc
 1216              		@ args = 0, pretend = 0, frame = 8
 1217              		@ frame_needed = 1, uses_anonymous_args = 0
 1218 0000 80B5     		push	{r7, lr}
 1219              	.LCFI35:
 1220              		.cfi_def_cfa_offset 8
 1221              		.cfi_offset 7, -8
 1222              		.cfi_offset 14, -4
 1223 0002 82B0     		sub	sp, sp, #8
 1224              	.LCFI36:
ARM GAS  /tmp/ccVFuPtH.s 			page 32


 1225              		.cfi_def_cfa_offset 16
 1226 0004 00AF     		add	r7, sp, #0
 1227              	.LCFI37:
 1228              		.cfi_def_cfa_register 7
 1229 0006 7860     		str	r0, [r7, #4]
 549:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 550:Core/Src/main.c **** 
 551:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 552:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 1230              		.loc 1 552 11
 1231 0008 7B68     		ldr	r3, [r7, #4]
 1232 000a 1B68     		ldr	r3, [r3]
 1233              		.loc 1 552 6
 1234 000c 044A     		ldr	r2, .L59
 1235 000e 9342     		cmp	r3, r2
 1236 0010 01D1     		bne	.L58
 553:Core/Src/main.c ****     HAL_IncTick();
 1237              		.loc 1 553 5
 1238 0012 FFF7FEFF 		bl	HAL_IncTick
 1239              	.L58:
 554:Core/Src/main.c ****   }
 555:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 556:Core/Src/main.c **** 
 557:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 558:Core/Src/main.c **** }
 1240              		.loc 1 558 1
 1241 0016 00BF     		nop
 1242 0018 0837     		adds	r7, r7, #8
 1243              	.LCFI38:
 1244              		.cfi_def_cfa_offset 8
 1245 001a BD46     		mov	sp, r7
 1246              	.LCFI39:
 1247              		.cfi_def_cfa_register 13
 1248              		@ sp needed
 1249 001c 80BD     		pop	{r7, pc}
 1250              	.L60:
 1251 001e 00BF     		.align	2
 1252              	.L59:
 1253 0020 002C0140 		.word	1073818624
 1254              		.cfi_endproc
 1255              	.LFE145:
 1257              		.section	.text.Error_Handler,"ax",%progbits
 1258              		.align	1
 1259              		.global	Error_Handler
 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1264              	Error_Handler:
 1265              	.LFB146:
 559:Core/Src/main.c **** 
 560:Core/Src/main.c **** /**
 561:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 562:Core/Src/main.c ****   * @retval None
 563:Core/Src/main.c ****   */
 564:Core/Src/main.c **** void Error_Handler(void)
 565:Core/Src/main.c **** {
 1266              		.loc 1 565 1
ARM GAS  /tmp/ccVFuPtH.s 			page 33


 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 0
 1269              		@ frame_needed = 1, uses_anonymous_args = 0
 1270              		@ link register save eliminated.
 1271 0000 80B4     		push	{r7}
 1272              	.LCFI40:
 1273              		.cfi_def_cfa_offset 4
 1274              		.cfi_offset 7, -4
 1275 0002 00AF     		add	r7, sp, #0
 1276              	.LCFI41:
 1277              		.cfi_def_cfa_register 7
 1278              	.LBB8:
 1279              	.LBB9:
 1280              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
ARM GAS  /tmp/ccVFuPtH.s 			page 34


  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
ARM GAS  /tmp/ccVFuPtH.s 			page 35


 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
ARM GAS  /tmp/ccVFuPtH.s 			page 36


 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1281              		.loc 2 209 3
 1282              		.syntax unified
 1283              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1284 0004 72B6     		cpsid i
 1285              	@ 0 "" 2
ARM GAS  /tmp/ccVFuPtH.s 			page 37


 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1286              		.loc 2 210 1
 1287              		.thumb
 1288              		.syntax unified
 1289 0006 00BF     		nop
 1290              	.L62:
 1291              	.LBE9:
 1292              	.LBE8:
 566:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 567:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 568:Core/Src/main.c ****   __disable_irq();
 569:Core/Src/main.c ****   while (1)
 1293              		.loc 1 569 9 discriminator 1
 1294 0008 FEE7     		b	.L62
 1295              		.cfi_endproc
 1296              	.LFE146:
 1298              		.text
 1299              	.Letext0:
 1300              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 1301              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 1302              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 1303              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 1304              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 1305              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 1306              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 1307              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 1308              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_can.h"
 1309              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c.h"
 1310              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 1311              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 1312              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
ARM GAS  /tmp/ccVFuPtH.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccVFuPtH.s:24     .bss.hcan1:0000000000000000 hcan1
     /tmp/ccVFuPtH.s:21     .bss.hcan1:0000000000000000 $d
     /tmp/ccVFuPtH.s:31     .bss.hi2c1:0000000000000000 hi2c1
     /tmp/ccVFuPtH.s:28     .bss.hi2c1:0000000000000000 $d
     /tmp/ccVFuPtH.s:38     .bss.huart1:0000000000000000 huart1
     /tmp/ccVFuPtH.s:35     .bss.huart1:0000000000000000 $d
     /tmp/ccVFuPtH.s:45     .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccVFuPtH.s:42     .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccVFuPtH.s:56     .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
     /tmp/ccVFuPtH.s:49     .rodata:0000000000000000 $d
     /tmp/ccVFuPtH.s:53     .rodata.defaultTask_attributes:0000000000000000 $d
     /tmp/ccVFuPtH.s:67     .bss.testStuct:0000000000000000 testStuct
     /tmp/ccVFuPtH.s:64     .bss.testStuct:0000000000000000 $d
     /tmp/ccVFuPtH.s:74     .data.pTestStuct:0000000000000000 pTestStuct
     /tmp/ccVFuPtH.s:71     .data.pTestStuct:0000000000000000 $d
     /tmp/ccVFuPtH.s:81     .bss.TxHeader:0000000000000000 TxHeader
     /tmp/ccVFuPtH.s:78     .bss.TxHeader:0000000000000000 $d
     /tmp/ccVFuPtH.s:88     .bss.RxHeader:0000000000000000 RxHeader
     /tmp/ccVFuPtH.s:85     .bss.RxHeader:0000000000000000 $d
     /tmp/ccVFuPtH.s:95     .bss.TxMailbox:0000000000000000 TxMailbox
     /tmp/ccVFuPtH.s:92     .bss.TxMailbox:0000000000000000 $d
     /tmp/ccVFuPtH.s:102    .bss.TxData:0000000000000000 TxData
     /tmp/ccVFuPtH.s:99     .bss.TxData:0000000000000000 $d
     /tmp/ccVFuPtH.s:109    .bss.RxData:0000000000000000 RxData
     /tmp/ccVFuPtH.s:106    .bss.RxData:0000000000000000 $d
     /tmp/ccVFuPtH.s:112    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/ccVFuPtH.s:118    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/ccVFuPtH.s:156    .text.HAL_CAN_RxFifo0MsgPendingCallback:000000000000001c $d
     /tmp/ccVFuPtH.s:162    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/ccVFuPtH.s:168    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/ccVFuPtH.s:257    .text.main:0000000000000000 $t
     /tmp/ccVFuPtH.s:263    .text.main:0000000000000000 main
     /tmp/ccVFuPtH.s:377    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccVFuPtH.s:826    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccVFuPtH.s:507    .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccVFuPtH.s:645    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccVFuPtH.s:745    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccVFuPtH.s:359    .text.main:000000000000008c $d
     /tmp/ccVFuPtH.s:1110   .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccVFuPtH.s:371    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccVFuPtH.s:1264   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccVFuPtH.s:502    .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccVFuPtH.s:634    .text.MX_CAN1_Init:00000000000000a8 $d
     /tmp/ccVFuPtH.s:640    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccVFuPtH.s:733    .text.MX_I2C1_Init:0000000000000074 $d
     /tmp/ccVFuPtH.s:740    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccVFuPtH.s:815    .text.MX_USART1_UART_Init:0000000000000058 $d
     /tmp/ccVFuPtH.s:821    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccVFuPtH.s:1096   .text.MX_GPIO_Init:00000000000001d4 $d
     /tmp/ccVFuPtH.s:1104   .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccVFuPtH.s:1198   .text.StartDefaultTask:000000000000008c $d
     /tmp/ccVFuPtH.s:1206   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccVFuPtH.s:1212   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccVFuPtH.s:1253   .text.HAL_TIM_PeriodElapsedCallback:0000000000000020 $d
     /tmp/ccVFuPtH.s:1258   .text.Error_Handler:0000000000000000 $t
ARM GAS  /tmp/ccVFuPtH.s 			page 39


                           .group:0000000000000000 wm4.0.7c07f3f6b993d5df097fdb8d3ce9a6de
                           .group:0000000000000000 wm4.stm32l4xx_hal_conf.h.25.67df7bfb263225dfcb11ad6d535659e5
                           .group:0000000000000000 wm4.stm32l4xx.h.38.13610480d662c5d808817940a37afcf4
                           .group:0000000000000000 wm4.stm32l432xx.h.34.64bfd283c23d6d1aa5faea715519c36d
                           .group:0000000000000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:0000000000000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.cmsis_version.h.32.46e8eccfa2cfeaae11d008bb2823a3ed
                           .group:0000000000000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.78077cef1206e937f7b56043ffca496a
                           .group:0000000000000000 wm4.core_cm4.h.174.fcddd62df80231752fa39eb9b61dadfe
                           .group:0000000000000000 wm4.mpu_armv7.h.32.4049752bb5792d4e15357775e9506cfc
                           .group:0000000000000000 wm4.stm32l432xx.h.380.93d43fb335c0ebed2f7b80a16f382831
                           .group:0000000000000000 wm4.stm32l4xx.h.196.f5ae8047c57b6175c94f246ef967a286
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.22.60f4b739ef84b68a7e7ed16e5103575e
                           .group:0000000000000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:0000000000000000 wm4.stm32l4xx_hal_def.h.57.b521302d6c089e94008be04ada42518c
                           .group:0000000000000000 wm4.stm32l4xx_hal_rcc.h.156.c2cf90ca16490b11bfea6d5b9c02447d
                           .group:0000000000000000 wm4.stm32l4xx_hal_rcc_ex.h.20.9d2cd8406af411ccecbbc69175fe86df
                           .group:0000000000000000 wm4.stm32l4xx_hal_gpio.h.21.2d2b1fd6aa6afa7b6dcc89cf752a9a25
                           .group:0000000000000000 wm4.stm32l4xx_hal_gpio_ex.h.21.bbbc787a7485a4871211b5fa6c8b588b
                           .group:0000000000000000 wm4.stm32l4xx_hal_dma.h.21.85535a9033ff7e527296f1cd4943a831
                           .group:0000000000000000 wm4.stm32l4xx_hal_cortex.h.21.94fe10dd50baf2cef42a470b44b9074a
                           .group:0000000000000000 wm4.stm32l4xx_hal_can.h.21.b5d46d7f01b4bc61c276be2c4b59db6b
                           .group:0000000000000000 wm4.stm32l4xx_hal_exti.h.21.d3645023ea960a07b41f6c9b90a2ecc4
                           .group:0000000000000000 wm4.stm32l4xx_hal_flash.h.20.3f4ef626abeefd93430968dc6defca64
                           .group:0000000000000000 wm4.stm32l4xx_hal_flash.h.848.b5e1a92ab03fcd2ac5572c217f864bbd
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c.h.21.1c548a113da5711525bbba5ee1988cbd
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c_ex.h.21.a624122f67715a687a1d5f17f7841251
                           .group:0000000000000000 wm4.stm32l4xx_hal_i2c.h.738.08f9916803fd1d9db10b6451187300a7
                           .group:0000000000000000 wm4.stm32l4xx_hal_pwr.h.21.7ddab2caa97243c36e496eca17b27618
                           .group:0000000000000000 wm4.stm32l4xx_hal_pwr_ex.h.21.5c96c6ce2d8c449959a988a298b6fd6b
                           .group:0000000000000000 wm4.stm32l4xx_hal_tim.h.21.514f1bd267cd24adfb57081a913ef29f
                           .group:0000000000000000 wm4.stm32l4xx_hal_tim_ex.h.21.fc4cf6652f188acb945f023f83d5be40
                           .group:0000000000000000 wm4.stm32l4xx_hal_uart.h.21.fc846d838d179e557421cc5a6a90c71c
                           .group:0000000000000000 wm4.stm32l4xx_hal_uart_ex.h.21.a0d4c7c414dffdc178f0a3a708ac77ea
                           .group:0000000000000000 wm4.stm32l4xx_hal.h.75.771e267559f2fdcd4148207229da2f39
                           .group:0000000000000000 wm4.main.h.60.84418a90fcd58ba06baa4da515eb273a
                           .group:0000000000000000 wm4.FreeRTOSConfig.h.32.a1b57c0d46431311074569d60ca736af
                           .group:0000000000000000 wm4.projdefs.h.29.3472c8470d131a5f474bc7437ea94609
                           .group:0000000000000000 wm4.portmacro.h.30.ebb5f3ce711e1dad21b3172c9bc8e19f
                           .group:0000000000000000 wm4.portable.h.64.742f2ce568820e866a7b541b4c77966f
                           .group:0000000000000000 wm4.mpu_wrappers.h.29.4f9aea82ee68d943d141825e5294de63
                           .group:0000000000000000 wm4.newlib.h.8.7cb3972cd43265932d4782d5eb589854
                           .group:0000000000000000 wm4.ieeefp.h.77.c88535c35f465c05b101960cf0179075
                           .group:0000000000000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:0000000000000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:0000000000000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:0000000000000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:0000000000000000 wm4.reent.h.96.88022c5a22979c33a20a5d76964119ed
ARM GAS  /tmp/ccVFuPtH.s 			page 40


                           .group:0000000000000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:0000000000000000 wm4.FreeRTOS.h.136.a17c2bf78722c1d7b86ba8d45e5b5f29
                           .group:0000000000000000 wm4.list.h.61.5c5a38f6bc6687eed6d893e57dabd8e6
                           .group:0000000000000000 wm4.task.h.46.9fb92b2c1a30a52e436f6063552b709b
                           .group:0000000000000000 wm4.cmsis_os.h.129.5f4adf2a422dfa714f64051974ebee7a
                           .group:0000000000000000 wm4.cmsis_os2.h.151.57db232dfe421e4f781dd02c42ee4360
                           .group:0000000000000000 wm4.cmsis_os.h.179.c36f217fbf28f1f2e754518bfb5a2ae8

UNDEFINED SYMBOLS
HAL_CAN_GetRxMessage
HAL_Init
HAL_CAN_Start
HAL_CAN_ActivateNotification
osKernelInitialize
osThreadNew
osKernelStart
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_MCOConfig
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_UART_Init
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_CAN_AddTxMessage
osDelay
HAL_IncTick
