ARM GAS  /tmp/ccXAIw3a.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"syscalls.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__env
  20              		.section	.bss.__env,"aw",%nobits
  21              		.align	2
  24              	__env:
  25 0000 00000000 		.space	4
  26              		.global	environ
  27              		.section	.data.environ,"aw"
  28              		.align	2
  31              	environ:
  32 0000 00000000 		.word	__env
  33              		.section	.text.initialise_monitor_handles,"ax",%progbits
  34              		.align	1
  35              		.global	initialise_monitor_handles
  36              		.syntax unified
  37              		.thumb
  38              		.thumb_func
  40              	initialise_monitor_handles:
  41              	.LFB25:
  42              		.file 1 "Core/Src/syscalls.c"
   1:Core/Src/syscalls.c **** /**
   2:Core/Src/syscalls.c **** *****************************************************************************
   3:Core/Src/syscalls.c **** **
   4:Core/Src/syscalls.c **** **  File        : syscalls.c
   5:Core/Src/syscalls.c **** **
   6:Core/Src/syscalls.c **** **  Author        : Auto-generated by System workbench for STM32
   7:Core/Src/syscalls.c **** **
   8:Core/Src/syscalls.c **** **  Abstract    : System Workbench Minimal System calls file
   9:Core/Src/syscalls.c **** **
  10:Core/Src/syscalls.c **** **                   For more information about which c-functions
  11:Core/Src/syscalls.c **** **                need which of these lowlevel functions
  12:Core/Src/syscalls.c **** **                please consult the Newlib libc-manual
  13:Core/Src/syscalls.c **** **
  14:Core/Src/syscalls.c **** **  Target      : STMicroelectronics STM32
  15:Core/Src/syscalls.c **** **
  16:Core/Src/syscalls.c **** **  Distribution: The file is distributed “as is,” without any warranty
  17:Core/Src/syscalls.c **** **                of any kind.
  18:Core/Src/syscalls.c **** **
  19:Core/Src/syscalls.c **** *****************************************************************************
  20:Core/Src/syscalls.c **** ** @attention
ARM GAS  /tmp/ccXAIw3a.s 			page 2


  21:Core/Src/syscalls.c **** **
  22:Core/Src/syscalls.c **** ** <h2><center>&copy; COPYRIGHT(c) 2019 STMicroelectronics</center></h2>
  23:Core/Src/syscalls.c **** **
  24:Core/Src/syscalls.c **** ** Redistribution and use in source and binary forms, with or without
  25:Core/Src/syscalls.c **** *modification,
  26:Core/Src/syscalls.c **** ** are permitted provided that the following conditions are met:
  27:Core/Src/syscalls.c **** **   1. Redistributions of source code must retain the above copyright notice,
  28:Core/Src/syscalls.c **** **      this list of conditions and the following disclaimer.
  29:Core/Src/syscalls.c **** **   2. Redistributions in binary form must reproduce the above copyright
  30:Core/Src/syscalls.c **** *notice,
  31:Core/Src/syscalls.c **** **      this list of conditions and the following disclaimer in the
  32:Core/Src/syscalls.c **** *documentation
  33:Core/Src/syscalls.c **** **      and/or other materials provided with the distribution.
  34:Core/Src/syscalls.c **** **   3. Neither the name of STMicroelectronics nor the names of its contributors
  35:Core/Src/syscalls.c **** **      may be used to endorse or promote products derived from this software
  36:Core/Src/syscalls.c **** **      without specific prior written permission.
  37:Core/Src/syscalls.c **** **
  38:Core/Src/syscalls.c **** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  39:Core/Src/syscalls.c **** ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  40:Core/Src/syscalls.c **** ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  41:Core/Src/syscalls.c **** *ARE
  42:Core/Src/syscalls.c **** ** DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  43:Core/Src/syscalls.c **** ** FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  44:Core/Src/syscalls.c **** ** DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  45:Core/Src/syscalls.c **** ** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  46:Core/Src/syscalls.c **** ** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  47:Core/Src/syscalls.c **** ** OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  48:Core/Src/syscalls.c **** ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  49:Core/Src/syscalls.c **** **
  50:Core/Src/syscalls.c **** *****************************************************************************
  51:Core/Src/syscalls.c **** */
  52:Core/Src/syscalls.c **** 
  53:Core/Src/syscalls.c **** // the code was modified by Fynn Boyer
  54:Core/Src/syscalls.c **** 
  55:Core/Src/syscalls.c **** /* Includes */
  56:Core/Src/syscalls.c **** #include <errno.h>
  57:Core/Src/syscalls.c **** #include <signal.h>
  58:Core/Src/syscalls.c **** #include <stdio.h>
  59:Core/Src/syscalls.c **** #include <stdlib.h>
  60:Core/Src/syscalls.c **** #include <sys/stat.h>
  61:Core/Src/syscalls.c **** #include <sys/time.h>
  62:Core/Src/syscalls.c **** #include <sys/times.h>
  63:Core/Src/syscalls.c **** #include <time.h>
  64:Core/Src/syscalls.c **** 
  65:Core/Src/syscalls.c **** /* Variables */
  66:Core/Src/syscalls.c **** //#undef errno
  67:Core/Src/syscalls.c **** extern int errno;
  68:Core/Src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  69:Core/Src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  70:Core/Src/syscalls.c **** 
  71:Core/Src/syscalls.c **** register char *stack_ptr asm("sp");
  72:Core/Src/syscalls.c **** 
  73:Core/Src/syscalls.c **** char *__env[1] = {0};
  74:Core/Src/syscalls.c **** char **environ = __env;
  75:Core/Src/syscalls.c **** 
  76:Core/Src/syscalls.c **** extern char _estack;         // see ld file
  77:Core/Src/syscalls.c **** extern char _Min_Stack_Size; // see ld file
ARM GAS  /tmp/ccXAIw3a.s 			page 3


  78:Core/Src/syscalls.c **** 
  79:Core/Src/syscalls.c **** /* Functions */
  80:Core/Src/syscalls.c **** void initialise_monitor_handles() {}
  43              		.loc 1 80 35
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 0
  46              		@ frame_needed = 1, uses_anonymous_args = 0
  47              		@ link register save eliminated.
  48 0000 80B4     		push	{r7}
  49              	.LCFI0:
  50              		.cfi_def_cfa_offset 4
  51              		.cfi_offset 7, -4
  52 0002 00AF     		add	r7, sp, #0
  53              	.LCFI1:
  54              		.cfi_def_cfa_register 7
  55              		.loc 1 80 36
  56 0004 00BF     		nop
  57 0006 BD46     		mov	sp, r7
  58              	.LCFI2:
  59              		.cfi_def_cfa_register 13
  60              		@ sp needed
  61 0008 5DF8047B 		ldr	r7, [sp], #4
  62              	.LCFI3:
  63              		.cfi_restore 7
  64              		.cfi_def_cfa_offset 0
  65 000c 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE25:
  69              		.section	.text._getpid,"ax",%progbits
  70              		.align	1
  71              		.global	_getpid
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	_getpid:
  77              	.LFB26:
  81:Core/Src/syscalls.c **** 
  82:Core/Src/syscalls.c **** int _getpid(void) { return 1; }
  78              		.loc 1 82 19
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83 0000 80B4     		push	{r7}
  84              	.LCFI4:
  85              		.cfi_def_cfa_offset 4
  86              		.cfi_offset 7, -4
  87 0002 00AF     		add	r7, sp, #0
  88              	.LCFI5:
  89              		.cfi_def_cfa_register 7
  90              		.loc 1 82 28
  91 0004 0123     		movs	r3, #1
  92              		.loc 1 82 31
  93 0006 1846     		mov	r0, r3
  94 0008 BD46     		mov	sp, r7
  95              	.LCFI6:
  96              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccXAIw3a.s 			page 4


  97              		@ sp needed
  98 000a 5DF8047B 		ldr	r7, [sp], #4
  99              	.LCFI7:
 100              		.cfi_restore 7
 101              		.cfi_def_cfa_offset 0
 102 000e 7047     		bx	lr
 103              		.cfi_endproc
 104              	.LFE26:
 106              		.section	.text._kill,"ax",%progbits
 107              		.align	1
 108              		.global	_kill
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 113              	_kill:
 114              	.LFB27:
  83:Core/Src/syscalls.c **** 
  84:Core/Src/syscalls.c **** int _kill(int pid, int sig) {
 115              		.loc 1 84 29
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 8
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              	.LCFI8:
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 7, -8
 123              		.cfi_offset 14, -4
 124 0002 82B0     		sub	sp, sp, #8
 125              	.LCFI9:
 126              		.cfi_def_cfa_offset 16
 127 0004 00AF     		add	r7, sp, #0
 128              	.LCFI10:
 129              		.cfi_def_cfa_register 7
 130 0006 7860     		str	r0, [r7, #4]
 131 0008 3960     		str	r1, [r7]
  85:Core/Src/syscalls.c ****   errno = EINVAL;
 132              		.loc 1 85 3
 133 000a FFF7FEFF 		bl	__errno
 134 000e 0346     		mov	r3, r0
 135              		.loc 1 85 9
 136 0010 1622     		movs	r2, #22
 137 0012 1A60     		str	r2, [r3]
  86:Core/Src/syscalls.c ****   return -1;
 138              		.loc 1 86 10
 139 0014 4FF0FF33 		mov	r3, #-1
  87:Core/Src/syscalls.c **** }
 140              		.loc 1 87 1
 141 0018 1846     		mov	r0, r3
 142 001a 0837     		adds	r7, r7, #8
 143              	.LCFI11:
 144              		.cfi_def_cfa_offset 8
 145 001c BD46     		mov	sp, r7
 146              	.LCFI12:
 147              		.cfi_def_cfa_register 13
 148              		@ sp needed
 149 001e 80BD     		pop	{r7, pc}
 150              		.cfi_endproc
ARM GAS  /tmp/ccXAIw3a.s 			page 5


 151              	.LFE27:
 153              		.section	.text._exit,"ax",%progbits
 154              		.align	1
 155              		.global	_exit
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	_exit:
 161              	.LFB28:
  88:Core/Src/syscalls.c **** 
  89:Core/Src/syscalls.c **** void _exit(int status) {
 162              		.loc 1 89 24
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 8
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166 0000 80B5     		push	{r7, lr}
 167              	.LCFI13:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 7, -8
 170              		.cfi_offset 14, -4
 171 0002 82B0     		sub	sp, sp, #8
 172              	.LCFI14:
 173              		.cfi_def_cfa_offset 16
 174 0004 00AF     		add	r7, sp, #0
 175              	.LCFI15:
 176              		.cfi_def_cfa_register 7
 177 0006 7860     		str	r0, [r7, #4]
  90:Core/Src/syscalls.c ****   _kill(status, -1);
 178              		.loc 1 90 3
 179 0008 4FF0FF31 		mov	r1, #-1
 180 000c 7868     		ldr	r0, [r7, #4]
 181 000e FFF7FEFF 		bl	_kill
 182              	.L7:
  91:Core/Src/syscalls.c ****   while (1) {
 183              		.loc 1 91 9 discriminator 1
 184 0012 FEE7     		b	.L7
 185              		.cfi_endproc
 186              	.LFE28:
 188              		.section	.text._read,"ax",%progbits
 189              		.align	1
 190              		.weak	_read
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 195              	_read:
 196              	.LFB29:
  92:Core/Src/syscalls.c ****   } /* Make sure we hang here */
  93:Core/Src/syscalls.c **** }
  94:Core/Src/syscalls.c **** 
  95:Core/Src/syscalls.c **** __attribute__((weak)) int _read(int file, char *ptr, int len) {
 197              		.loc 1 95 63
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 24
 200              		@ frame_needed = 1, uses_anonymous_args = 0
 201 0000 80B5     		push	{r7, lr}
 202              	.LCFI16:
 203              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccXAIw3a.s 			page 6


 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 86B0     		sub	sp, sp, #24
 207              	.LCFI17:
 208              		.cfi_def_cfa_offset 32
 209 0004 00AF     		add	r7, sp, #0
 210              	.LCFI18:
 211              		.cfi_def_cfa_register 7
 212 0006 F860     		str	r0, [r7, #12]
 213 0008 B960     		str	r1, [r7, #8]
 214 000a 7A60     		str	r2, [r7, #4]
  96:Core/Src/syscalls.c ****   int DataIdx;
  97:Core/Src/syscalls.c **** 
  98:Core/Src/syscalls.c ****   for (DataIdx = 0; DataIdx < len; DataIdx++) {
 215              		.loc 1 98 16
 216 000c 0023     		movs	r3, #0
 217 000e 7B61     		str	r3, [r7, #20]
 218              		.loc 1 98 3
 219 0010 0AE0     		b	.L9
 220              	.L10:
  99:Core/Src/syscalls.c ****     *ptr++ = __io_getchar();
 221              		.loc 1 99 14 discriminator 3
 222 0012 FFF7FEFF 		bl	__io_getchar
 223 0016 0146     		mov	r1, r0
 224              		.loc 1 99 9 discriminator 3
 225 0018 BB68     		ldr	r3, [r7, #8]
 226 001a 5A1C     		adds	r2, r3, #1
 227 001c BA60     		str	r2, [r7, #8]
 228              		.loc 1 99 12 discriminator 3
 229 001e CAB2     		uxtb	r2, r1
 230 0020 1A70     		strb	r2, [r3]
  98:Core/Src/syscalls.c ****     *ptr++ = __io_getchar();
 231              		.loc 1 98 43 discriminator 3
 232 0022 7B69     		ldr	r3, [r7, #20]
 233 0024 0133     		adds	r3, r3, #1
 234 0026 7B61     		str	r3, [r7, #20]
 235              	.L9:
  98:Core/Src/syscalls.c ****     *ptr++ = __io_getchar();
 236              		.loc 1 98 3 discriminator 1
 237 0028 7A69     		ldr	r2, [r7, #20]
 238 002a 7B68     		ldr	r3, [r7, #4]
 239 002c 9A42     		cmp	r2, r3
 240 002e F0DB     		blt	.L10
 100:Core/Src/syscalls.c ****   }
 101:Core/Src/syscalls.c **** 
 102:Core/Src/syscalls.c ****   return len;
 241              		.loc 1 102 10
 242 0030 7B68     		ldr	r3, [r7, #4]
 103:Core/Src/syscalls.c **** }
 243              		.loc 1 103 1
 244 0032 1846     		mov	r0, r3
 245 0034 1837     		adds	r7, r7, #24
 246              	.LCFI19:
 247              		.cfi_def_cfa_offset 8
 248 0036 BD46     		mov	sp, r7
 249              	.LCFI20:
 250              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccXAIw3a.s 			page 7


 251              		@ sp needed
 252 0038 80BD     		pop	{r7, pc}
 253              		.cfi_endproc
 254              	.LFE29:
 256              		.section	.text._write,"ax",%progbits
 257              		.align	1
 258              		.weak	_write
 259              		.syntax unified
 260              		.thumb
 261              		.thumb_func
 263              	_write:
 264              	.LFB30:
 104:Core/Src/syscalls.c **** 
 105:Core/Src/syscalls.c **** __attribute__((weak)) int _write(int file, char *ptr, int len) {
 265              		.loc 1 105 64
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 24
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269 0000 80B5     		push	{r7, lr}
 270              	.LCFI21:
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 7, -8
 273              		.cfi_offset 14, -4
 274 0002 86B0     		sub	sp, sp, #24
 275              	.LCFI22:
 276              		.cfi_def_cfa_offset 32
 277 0004 00AF     		add	r7, sp, #0
 278              	.LCFI23:
 279              		.cfi_def_cfa_register 7
 280 0006 F860     		str	r0, [r7, #12]
 281 0008 B960     		str	r1, [r7, #8]
 282 000a 7A60     		str	r2, [r7, #4]
 106:Core/Src/syscalls.c ****   int DataIdx;
 107:Core/Src/syscalls.c **** 
 108:Core/Src/syscalls.c ****   for (DataIdx = 0; DataIdx < len; DataIdx++) {
 283              		.loc 1 108 16
 284 000c 0023     		movs	r3, #0
 285 000e 7B61     		str	r3, [r7, #20]
 286              		.loc 1 108 3
 287 0010 09E0     		b	.L13
 288              	.L14:
 109:Core/Src/syscalls.c ****     __io_putchar(*ptr++);
 289              		.loc 1 109 22 discriminator 3
 290 0012 BB68     		ldr	r3, [r7, #8]
 291 0014 5A1C     		adds	r2, r3, #1
 292 0016 BA60     		str	r2, [r7, #8]
 293              		.loc 1 109 18 discriminator 3
 294 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 295              		.loc 1 109 5 discriminator 3
 296 001a 1846     		mov	r0, r3
 297 001c FFF7FEFF 		bl	__io_putchar
 108:Core/Src/syscalls.c ****     __io_putchar(*ptr++);
 298              		.loc 1 108 43 discriminator 3
 299 0020 7B69     		ldr	r3, [r7, #20]
 300 0022 0133     		adds	r3, r3, #1
 301 0024 7B61     		str	r3, [r7, #20]
 302              	.L13:
ARM GAS  /tmp/ccXAIw3a.s 			page 8


 108:Core/Src/syscalls.c ****     __io_putchar(*ptr++);
 303              		.loc 1 108 3 discriminator 1
 304 0026 7A69     		ldr	r2, [r7, #20]
 305 0028 7B68     		ldr	r3, [r7, #4]
 306 002a 9A42     		cmp	r2, r3
 307 002c F1DB     		blt	.L14
 110:Core/Src/syscalls.c ****   }
 111:Core/Src/syscalls.c ****   return len;
 308              		.loc 1 111 10
 309 002e 7B68     		ldr	r3, [r7, #4]
 112:Core/Src/syscalls.c **** }
 310              		.loc 1 112 1
 311 0030 1846     		mov	r0, r3
 312 0032 1837     		adds	r7, r7, #24
 313              	.LCFI24:
 314              		.cfi_def_cfa_offset 8
 315 0034 BD46     		mov	sp, r7
 316              	.LCFI25:
 317              		.cfi_def_cfa_register 13
 318              		@ sp needed
 319 0036 80BD     		pop	{r7, pc}
 320              		.cfi_endproc
 321              	.LFE30:
 323              		.section	.bss.heap_end.0,"aw",%nobits
 324              		.align	2
 327              	heap_end.0:
 328 0000 00000000 		.space	4
 329              		.section	.text._sbrk,"ax",%progbits
 330              		.align	1
 331              		.global	_sbrk
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 336              	_sbrk:
 337              	.LFB31:
 113:Core/Src/syscalls.c **** 
 114:Core/Src/syscalls.c **** caddr_t _sbrk(int incr) {
 338              		.loc 1 114 25
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 16
 341              		@ frame_needed = 1, uses_anonymous_args = 0
 342 0000 80B5     		push	{r7, lr}
 343              	.LCFI26:
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 84B0     		sub	sp, sp, #16
 348              	.LCFI27:
 349              		.cfi_def_cfa_offset 24
 350 0004 00AF     		add	r7, sp, #0
 351              	.LCFI28:
 352              		.cfi_def_cfa_register 7
 353 0006 7860     		str	r0, [r7, #4]
 115:Core/Src/syscalls.c ****   extern char __heap_start__ asm("end"); // Defined by the linker.
 116:Core/Src/syscalls.c ****   static char *heap_end;
 117:Core/Src/syscalls.c ****   char *prev_heap_end;
 118:Core/Src/syscalls.c **** 
ARM GAS  /tmp/ccXAIw3a.s 			page 9


 119:Core/Src/syscalls.c ****   if (heap_end == NULL)
 354              		.loc 1 119 16
 355 0008 144B     		ldr	r3, .L20
 356 000a 1B68     		ldr	r3, [r3]
 357              		.loc 1 119 6
 358 000c 002B     		cmp	r3, #0
 359 000e 02D1     		bne	.L17
 120:Core/Src/syscalls.c ****     heap_end = &__heap_start__;
 360              		.loc 1 120 14
 361 0010 124B     		ldr	r3, .L20
 362 0012 134A     		ldr	r2, .L20+4
 363 0014 1A60     		str	r2, [r3]
 364              	.L17:
 121:Core/Src/syscalls.c **** 
 122:Core/Src/syscalls.c ****   prev_heap_end = heap_end;
 365              		.loc 1 122 17
 366 0016 114B     		ldr	r3, .L20
 367 0018 1B68     		ldr	r3, [r3]
 368 001a FB60     		str	r3, [r7, #12]
 123:Core/Src/syscalls.c **** 
 124:Core/Src/syscalls.c ****   if (heap_end + incr > &_estack - _Min_Stack_Size) {
 369              		.loc 1 124 16
 370 001c 0F4B     		ldr	r3, .L20
 371 001e 1A68     		ldr	r2, [r3]
 372 0020 7B68     		ldr	r3, [r7, #4]
 373 0022 1A44     		add	r2, r2, r3
 374              		.loc 1 124 34
 375 0024 0F4B     		ldr	r3, .L20+8
 376 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 377 0028 5B42     		rsbs	r3, r3, #0
 378 002a 0F49     		ldr	r1, .L20+12
 379 002c 0B44     		add	r3, r3, r1
 380              		.loc 1 124 6
 381 002e 9A42     		cmp	r2, r3
 382 0030 08D9     		bls	.L18
 125:Core/Src/syscalls.c ****     __asm("BKPT #0\n");
 383              		.loc 1 125 5
 384              		.syntax unified
 385              	@ 125 "Core/Src/syscalls.c" 1
 386 0032 00BE     		BKPT #0
 387              	
 388              	@ 0 "" 2
 126:Core/Src/syscalls.c ****     errno = ENOMEM;
 389              		.loc 1 126 5
 390              		.thumb
 391              		.syntax unified
 392 0034 FFF7FEFF 		bl	__errno
 393 0038 0346     		mov	r3, r0
 394              		.loc 1 126 11
 395 003a 0C22     		movs	r2, #12
 396 003c 1A60     		str	r2, [r3]
 127:Core/Src/syscalls.c ****     return (caddr_t)-1;
 397              		.loc 1 127 12
 398 003e 4FF0FF33 		mov	r3, #-1
 399 0042 06E0     		b	.L19
 400              	.L18:
 128:Core/Src/syscalls.c ****   }
ARM GAS  /tmp/ccXAIw3a.s 			page 10


 129:Core/Src/syscalls.c **** 
 130:Core/Src/syscalls.c ****   heap_end += incr;
 401              		.loc 1 130 12
 402 0044 054B     		ldr	r3, .L20
 403 0046 1A68     		ldr	r2, [r3]
 404 0048 7B68     		ldr	r3, [r7, #4]
 405 004a 1344     		add	r3, r3, r2
 406 004c 034A     		ldr	r2, .L20
 407 004e 1360     		str	r3, [r2]
 131:Core/Src/syscalls.c ****   return (caddr_t)prev_heap_end;
 408              		.loc 1 131 10
 409 0050 FB68     		ldr	r3, [r7, #12]
 410              	.L19:
 132:Core/Src/syscalls.c **** }
 411              		.loc 1 132 1
 412 0052 1846     		mov	r0, r3
 413 0054 1037     		adds	r7, r7, #16
 414              	.LCFI29:
 415              		.cfi_def_cfa_offset 8
 416 0056 BD46     		mov	sp, r7
 417              	.LCFI30:
 418              		.cfi_def_cfa_register 13
 419              		@ sp needed
 420 0058 80BD     		pop	{r7, pc}
 421              	.L21:
 422 005a 00BF     		.align	2
 423              	.L20:
 424 005c 00000000 		.word	heap_end.0
 425 0060 00000000 		.word	end
 426 0064 00000000 		.word	_Min_Stack_Size
 427 0068 00000000 		.word	_estack
 428              		.cfi_endproc
 429              	.LFE31:
 431              		.section	.text._close,"ax",%progbits
 432              		.align	1
 433              		.global	_close
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 438              	_close:
 439              	.LFB32:
 133:Core/Src/syscalls.c **** 
 134:Core/Src/syscalls.c **** int _close(int file) { return -1; }
 440              		.loc 1 134 22
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 8
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445 0000 80B4     		push	{r7}
 446              	.LCFI31:
 447              		.cfi_def_cfa_offset 4
 448              		.cfi_offset 7, -4
 449 0002 83B0     		sub	sp, sp, #12
 450              	.LCFI32:
 451              		.cfi_def_cfa_offset 16
 452 0004 00AF     		add	r7, sp, #0
 453              	.LCFI33:
ARM GAS  /tmp/ccXAIw3a.s 			page 11


 454              		.cfi_def_cfa_register 7
 455 0006 7860     		str	r0, [r7, #4]
 456              		.loc 1 134 31
 457 0008 4FF0FF33 		mov	r3, #-1
 458              		.loc 1 134 35
 459 000c 1846     		mov	r0, r3
 460 000e 0C37     		adds	r7, r7, #12
 461              	.LCFI34:
 462              		.cfi_def_cfa_offset 4
 463 0010 BD46     		mov	sp, r7
 464              	.LCFI35:
 465              		.cfi_def_cfa_register 13
 466              		@ sp needed
 467 0012 5DF8047B 		ldr	r7, [sp], #4
 468              	.LCFI36:
 469              		.cfi_restore 7
 470              		.cfi_def_cfa_offset 0
 471 0016 7047     		bx	lr
 472              		.cfi_endproc
 473              	.LFE32:
 475              		.section	.text._fstat,"ax",%progbits
 476              		.align	1
 477              		.global	_fstat
 478              		.syntax unified
 479              		.thumb
 480              		.thumb_func
 482              	_fstat:
 483              	.LFB33:
 135:Core/Src/syscalls.c **** 
 136:Core/Src/syscalls.c **** int _fstat(int file, struct stat *st) {
 484              		.loc 1 136 39
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 8
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 489 0000 80B4     		push	{r7}
 490              	.LCFI37:
 491              		.cfi_def_cfa_offset 4
 492              		.cfi_offset 7, -4
 493 0002 83B0     		sub	sp, sp, #12
 494              	.LCFI38:
 495              		.cfi_def_cfa_offset 16
 496 0004 00AF     		add	r7, sp, #0
 497              	.LCFI39:
 498              		.cfi_def_cfa_register 7
 499 0006 7860     		str	r0, [r7, #4]
 500 0008 3960     		str	r1, [r7]
 137:Core/Src/syscalls.c ****   st->st_mode = S_IFCHR;
 501              		.loc 1 137 15
 502 000a 3B68     		ldr	r3, [r7]
 503 000c 4FF40052 		mov	r2, #8192
 504 0010 5A60     		str	r2, [r3, #4]
 138:Core/Src/syscalls.c ****   return 0;
 505              		.loc 1 138 10
 506 0012 0023     		movs	r3, #0
 139:Core/Src/syscalls.c **** }
 507              		.loc 1 139 1
ARM GAS  /tmp/ccXAIw3a.s 			page 12


 508 0014 1846     		mov	r0, r3
 509 0016 0C37     		adds	r7, r7, #12
 510              	.LCFI40:
 511              		.cfi_def_cfa_offset 4
 512 0018 BD46     		mov	sp, r7
 513              	.LCFI41:
 514              		.cfi_def_cfa_register 13
 515              		@ sp needed
 516 001a 5DF8047B 		ldr	r7, [sp], #4
 517              	.LCFI42:
 518              		.cfi_restore 7
 519              		.cfi_def_cfa_offset 0
 520 001e 7047     		bx	lr
 521              		.cfi_endproc
 522              	.LFE33:
 524              		.section	.text._isatty,"ax",%progbits
 525              		.align	1
 526              		.global	_isatty
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 531              	_isatty:
 532              	.LFB34:
 140:Core/Src/syscalls.c **** 
 141:Core/Src/syscalls.c **** int _isatty(int file) { return 1; }
 533              		.loc 1 141 23
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 8
 536              		@ frame_needed = 1, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 538 0000 80B4     		push	{r7}
 539              	.LCFI43:
 540              		.cfi_def_cfa_offset 4
 541              		.cfi_offset 7, -4
 542 0002 83B0     		sub	sp, sp, #12
 543              	.LCFI44:
 544              		.cfi_def_cfa_offset 16
 545 0004 00AF     		add	r7, sp, #0
 546              	.LCFI45:
 547              		.cfi_def_cfa_register 7
 548 0006 7860     		str	r0, [r7, #4]
 549              		.loc 1 141 32
 550 0008 0123     		movs	r3, #1
 551              		.loc 1 141 35
 552 000a 1846     		mov	r0, r3
 553 000c 0C37     		adds	r7, r7, #12
 554              	.LCFI46:
 555              		.cfi_def_cfa_offset 4
 556 000e BD46     		mov	sp, r7
 557              	.LCFI47:
 558              		.cfi_def_cfa_register 13
 559              		@ sp needed
 560 0010 5DF8047B 		ldr	r7, [sp], #4
 561              	.LCFI48:
 562              		.cfi_restore 7
 563              		.cfi_def_cfa_offset 0
 564 0014 7047     		bx	lr
ARM GAS  /tmp/ccXAIw3a.s 			page 13


 565              		.cfi_endproc
 566              	.LFE34:
 568              		.section	.text._lseek,"ax",%progbits
 569              		.align	1
 570              		.global	_lseek
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 575              	_lseek:
 576              	.LFB35:
 142:Core/Src/syscalls.c **** 
 143:Core/Src/syscalls.c **** int _lseek(int file, int ptr, int dir) { return 0; }
 577              		.loc 1 143 40
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 16
 580              		@ frame_needed = 1, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 582 0000 80B4     		push	{r7}
 583              	.LCFI49:
 584              		.cfi_def_cfa_offset 4
 585              		.cfi_offset 7, -4
 586 0002 85B0     		sub	sp, sp, #20
 587              	.LCFI50:
 588              		.cfi_def_cfa_offset 24
 589 0004 00AF     		add	r7, sp, #0
 590              	.LCFI51:
 591              		.cfi_def_cfa_register 7
 592 0006 F860     		str	r0, [r7, #12]
 593 0008 B960     		str	r1, [r7, #8]
 594 000a 7A60     		str	r2, [r7, #4]
 595              		.loc 1 143 49
 596 000c 0023     		movs	r3, #0
 597              		.loc 1 143 52
 598 000e 1846     		mov	r0, r3
 599 0010 1437     		adds	r7, r7, #20
 600              	.LCFI52:
 601              		.cfi_def_cfa_offset 4
 602 0012 BD46     		mov	sp, r7
 603              	.LCFI53:
 604              		.cfi_def_cfa_register 13
 605              		@ sp needed
 606 0014 5DF8047B 		ldr	r7, [sp], #4
 607              	.LCFI54:
 608              		.cfi_restore 7
 609              		.cfi_def_cfa_offset 0
 610 0018 7047     		bx	lr
 611              		.cfi_endproc
 612              	.LFE35:
 614              		.section	.text._open,"ax",%progbits
 615              		.align	1
 616              		.global	_open
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 621              	_open:
 622              	.LFB36:
 144:Core/Src/syscalls.c **** 
ARM GAS  /tmp/ccXAIw3a.s 			page 14


 145:Core/Src/syscalls.c **** int _open(char *path, int flags, ...) {
 623              		.loc 1 145 39
 624              		.cfi_startproc
 625              		@ args = 4, pretend = 12, frame = 8
 626              		@ frame_needed = 1, uses_anonymous_args = 1
 627              		@ link register save eliminated.
 628 0000 0EB4     		push	{r1, r2, r3}
 629              	.LCFI55:
 630              		.cfi_def_cfa_offset 12
 631              		.cfi_offset 1, -12
 632              		.cfi_offset 2, -8
 633              		.cfi_offset 3, -4
 634 0002 80B4     		push	{r7}
 635              	.LCFI56:
 636              		.cfi_def_cfa_offset 16
 637              		.cfi_offset 7, -16
 638 0004 82B0     		sub	sp, sp, #8
 639              	.LCFI57:
 640              		.cfi_def_cfa_offset 24
 641 0006 00AF     		add	r7, sp, #0
 642              	.LCFI58:
 643              		.cfi_def_cfa_register 7
 644 0008 7860     		str	r0, [r7, #4]
 146:Core/Src/syscalls.c ****   /* Pretend like we always fail */
 147:Core/Src/syscalls.c ****   return -1;
 645              		.loc 1 147 10
 646 000a 4FF0FF33 		mov	r3, #-1
 148:Core/Src/syscalls.c **** }
 647              		.loc 1 148 1
 648 000e 1846     		mov	r0, r3
 649 0010 0837     		adds	r7, r7, #8
 650              	.LCFI59:
 651              		.cfi_def_cfa_offset 16
 652 0012 BD46     		mov	sp, r7
 653              	.LCFI60:
 654              		.cfi_def_cfa_register 13
 655              		@ sp needed
 656 0014 5DF8047B 		ldr	r7, [sp], #4
 657              	.LCFI61:
 658              		.cfi_restore 7
 659              		.cfi_def_cfa_offset 12
 660 0018 03B0     		add	sp, sp, #12
 661              	.LCFI62:
 662              		.cfi_restore 3
 663              		.cfi_restore 2
 664              		.cfi_restore 1
 665              		.cfi_def_cfa_offset 0
 666 001a 7047     		bx	lr
 667              		.cfi_endproc
 668              	.LFE36:
 670              		.section	.text._wait,"ax",%progbits
 671              		.align	1
 672              		.global	_wait
 673              		.syntax unified
 674              		.thumb
 675              		.thumb_func
 677              	_wait:
ARM GAS  /tmp/ccXAIw3a.s 			page 15


 678              	.LFB37:
 149:Core/Src/syscalls.c **** 
 150:Core/Src/syscalls.c **** int _wait(int *status) {
 679              		.loc 1 150 24
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 8
 682              		@ frame_needed = 1, uses_anonymous_args = 0
 683 0000 80B5     		push	{r7, lr}
 684              	.LCFI63:
 685              		.cfi_def_cfa_offset 8
 686              		.cfi_offset 7, -8
 687              		.cfi_offset 14, -4
 688 0002 82B0     		sub	sp, sp, #8
 689              	.LCFI64:
 690              		.cfi_def_cfa_offset 16
 691 0004 00AF     		add	r7, sp, #0
 692              	.LCFI65:
 693              		.cfi_def_cfa_register 7
 694 0006 7860     		str	r0, [r7, #4]
 151:Core/Src/syscalls.c ****   errno = ECHILD;
 695              		.loc 1 151 3
 696 0008 FFF7FEFF 		bl	__errno
 697 000c 0346     		mov	r3, r0
 698              		.loc 1 151 9
 699 000e 0A22     		movs	r2, #10
 700 0010 1A60     		str	r2, [r3]
 152:Core/Src/syscalls.c ****   return -1;
 701              		.loc 1 152 10
 702 0012 4FF0FF33 		mov	r3, #-1
 153:Core/Src/syscalls.c **** }
 703              		.loc 1 153 1
 704 0016 1846     		mov	r0, r3
 705 0018 0837     		adds	r7, r7, #8
 706              	.LCFI66:
 707              		.cfi_def_cfa_offset 8
 708 001a BD46     		mov	sp, r7
 709              	.LCFI67:
 710              		.cfi_def_cfa_register 13
 711              		@ sp needed
 712 001c 80BD     		pop	{r7, pc}
 713              		.cfi_endproc
 714              	.LFE37:
 716              		.section	.text._unlink,"ax",%progbits
 717              		.align	1
 718              		.global	_unlink
 719              		.syntax unified
 720              		.thumb
 721              		.thumb_func
 723              	_unlink:
 724              	.LFB38:
 154:Core/Src/syscalls.c **** 
 155:Core/Src/syscalls.c **** int _unlink(char *name) {
 725              		.loc 1 155 25
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 8
 728              		@ frame_needed = 1, uses_anonymous_args = 0
 729 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccXAIw3a.s 			page 16


 730              	.LCFI68:
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 7, -8
 733              		.cfi_offset 14, -4
 734 0002 82B0     		sub	sp, sp, #8
 735              	.LCFI69:
 736              		.cfi_def_cfa_offset 16
 737 0004 00AF     		add	r7, sp, #0
 738              	.LCFI70:
 739              		.cfi_def_cfa_register 7
 740 0006 7860     		str	r0, [r7, #4]
 156:Core/Src/syscalls.c ****   errno = ENOENT;
 741              		.loc 1 156 3
 742 0008 FFF7FEFF 		bl	__errno
 743 000c 0346     		mov	r3, r0
 744              		.loc 1 156 9
 745 000e 0222     		movs	r2, #2
 746 0010 1A60     		str	r2, [r3]
 157:Core/Src/syscalls.c ****   return -1;
 747              		.loc 1 157 10
 748 0012 4FF0FF33 		mov	r3, #-1
 158:Core/Src/syscalls.c **** }
 749              		.loc 1 158 1
 750 0016 1846     		mov	r0, r3
 751 0018 0837     		adds	r7, r7, #8
 752              	.LCFI71:
 753              		.cfi_def_cfa_offset 8
 754 001a BD46     		mov	sp, r7
 755              	.LCFI72:
 756              		.cfi_def_cfa_register 13
 757              		@ sp needed
 758 001c 80BD     		pop	{r7, pc}
 759              		.cfi_endproc
 760              	.LFE38:
 762              		.section	.text._times,"ax",%progbits
 763              		.align	1
 764              		.global	_times
 765              		.syntax unified
 766              		.thumb
 767              		.thumb_func
 769              	_times:
 770              	.LFB39:
 159:Core/Src/syscalls.c **** 
 160:Core/Src/syscalls.c **** int _times(struct tms *buf) { return -1; }
 771              		.loc 1 160 29
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 8
 774              		@ frame_needed = 1, uses_anonymous_args = 0
 775              		@ link register save eliminated.
 776 0000 80B4     		push	{r7}
 777              	.LCFI73:
 778              		.cfi_def_cfa_offset 4
 779              		.cfi_offset 7, -4
 780 0002 83B0     		sub	sp, sp, #12
 781              	.LCFI74:
 782              		.cfi_def_cfa_offset 16
 783 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccXAIw3a.s 			page 17


 784              	.LCFI75:
 785              		.cfi_def_cfa_register 7
 786 0006 7860     		str	r0, [r7, #4]
 787              		.loc 1 160 38
 788 0008 4FF0FF33 		mov	r3, #-1
 789              		.loc 1 160 42
 790 000c 1846     		mov	r0, r3
 791 000e 0C37     		adds	r7, r7, #12
 792              	.LCFI76:
 793              		.cfi_def_cfa_offset 4
 794 0010 BD46     		mov	sp, r7
 795              	.LCFI77:
 796              		.cfi_def_cfa_register 13
 797              		@ sp needed
 798 0012 5DF8047B 		ldr	r7, [sp], #4
 799              	.LCFI78:
 800              		.cfi_restore 7
 801              		.cfi_def_cfa_offset 0
 802 0016 7047     		bx	lr
 803              		.cfi_endproc
 804              	.LFE39:
 806              		.section	.text._stat,"ax",%progbits
 807              		.align	1
 808              		.global	_stat
 809              		.syntax unified
 810              		.thumb
 811              		.thumb_func
 813              	_stat:
 814              	.LFB40:
 161:Core/Src/syscalls.c **** 
 162:Core/Src/syscalls.c **** int _stat(char *file, struct stat *st) {
 815              		.loc 1 162 40
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 8
 818              		@ frame_needed = 1, uses_anonymous_args = 0
 819              		@ link register save eliminated.
 820 0000 80B4     		push	{r7}
 821              	.LCFI79:
 822              		.cfi_def_cfa_offset 4
 823              		.cfi_offset 7, -4
 824 0002 83B0     		sub	sp, sp, #12
 825              	.LCFI80:
 826              		.cfi_def_cfa_offset 16
 827 0004 00AF     		add	r7, sp, #0
 828              	.LCFI81:
 829              		.cfi_def_cfa_register 7
 830 0006 7860     		str	r0, [r7, #4]
 831 0008 3960     		str	r1, [r7]
 163:Core/Src/syscalls.c ****   st->st_mode = S_IFCHR;
 832              		.loc 1 163 15
 833 000a 3B68     		ldr	r3, [r7]
 834 000c 4FF40052 		mov	r2, #8192
 835 0010 5A60     		str	r2, [r3, #4]
 164:Core/Src/syscalls.c ****   return 0;
 836              		.loc 1 164 10
 837 0012 0023     		movs	r3, #0
 165:Core/Src/syscalls.c **** }
ARM GAS  /tmp/ccXAIw3a.s 			page 18


 838              		.loc 1 165 1
 839 0014 1846     		mov	r0, r3
 840 0016 0C37     		adds	r7, r7, #12
 841              	.LCFI82:
 842              		.cfi_def_cfa_offset 4
 843 0018 BD46     		mov	sp, r7
 844              	.LCFI83:
 845              		.cfi_def_cfa_register 13
 846              		@ sp needed
 847 001a 5DF8047B 		ldr	r7, [sp], #4
 848              	.LCFI84:
 849              		.cfi_restore 7
 850              		.cfi_def_cfa_offset 0
 851 001e 7047     		bx	lr
 852              		.cfi_endproc
 853              	.LFE40:
 855              		.section	.text._link,"ax",%progbits
 856              		.align	1
 857              		.global	_link
 858              		.syntax unified
 859              		.thumb
 860              		.thumb_func
 862              	_link:
 863              	.LFB41:
 166:Core/Src/syscalls.c **** 
 167:Core/Src/syscalls.c **** int _link(char *old, char *new) {
 864              		.loc 1 167 33
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 8
 867              		@ frame_needed = 1, uses_anonymous_args = 0
 868 0000 80B5     		push	{r7, lr}
 869              	.LCFI85:
 870              		.cfi_def_cfa_offset 8
 871              		.cfi_offset 7, -8
 872              		.cfi_offset 14, -4
 873 0002 82B0     		sub	sp, sp, #8
 874              	.LCFI86:
 875              		.cfi_def_cfa_offset 16
 876 0004 00AF     		add	r7, sp, #0
 877              	.LCFI87:
 878              		.cfi_def_cfa_register 7
 879 0006 7860     		str	r0, [r7, #4]
 880 0008 3960     		str	r1, [r7]
 168:Core/Src/syscalls.c ****   errno = EMLINK;
 881              		.loc 1 168 3
 882 000a FFF7FEFF 		bl	__errno
 883 000e 0346     		mov	r3, r0
 884              		.loc 1 168 9
 885 0010 1F22     		movs	r2, #31
 886 0012 1A60     		str	r2, [r3]
 169:Core/Src/syscalls.c ****   return -1;
 887              		.loc 1 169 10
 888 0014 4FF0FF33 		mov	r3, #-1
 170:Core/Src/syscalls.c **** }
 889              		.loc 1 170 1
 890 0018 1846     		mov	r0, r3
 891 001a 0837     		adds	r7, r7, #8
ARM GAS  /tmp/ccXAIw3a.s 			page 19


 892              	.LCFI88:
 893              		.cfi_def_cfa_offset 8
 894 001c BD46     		mov	sp, r7
 895              	.LCFI89:
 896              		.cfi_def_cfa_register 13
 897              		@ sp needed
 898 001e 80BD     		pop	{r7, pc}
 899              		.cfi_endproc
 900              	.LFE41:
 902              		.section	.text._fork,"ax",%progbits
 903              		.align	1
 904              		.global	_fork
 905              		.syntax unified
 906              		.thumb
 907              		.thumb_func
 909              	_fork:
 910              	.LFB42:
 171:Core/Src/syscalls.c **** 
 172:Core/Src/syscalls.c **** int _fork(void) {
 911              		.loc 1 172 17
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 1, uses_anonymous_args = 0
 915 0000 80B5     		push	{r7, lr}
 916              	.LCFI90:
 917              		.cfi_def_cfa_offset 8
 918              		.cfi_offset 7, -8
 919              		.cfi_offset 14, -4
 920 0002 00AF     		add	r7, sp, #0
 921              	.LCFI91:
 922              		.cfi_def_cfa_register 7
 173:Core/Src/syscalls.c ****   errno = EAGAIN;
 923              		.loc 1 173 3
 924 0004 FFF7FEFF 		bl	__errno
 925 0008 0346     		mov	r3, r0
 926              		.loc 1 173 9
 927 000a 0B22     		movs	r2, #11
 928 000c 1A60     		str	r2, [r3]
 174:Core/Src/syscalls.c ****   return -1;
 929              		.loc 1 174 10
 930 000e 4FF0FF33 		mov	r3, #-1
 175:Core/Src/syscalls.c **** }
 931              		.loc 1 175 1
 932 0012 1846     		mov	r0, r3
 933 0014 80BD     		pop	{r7, pc}
 934              		.cfi_endproc
 935              	.LFE42:
 937              		.section	.text._execve,"ax",%progbits
 938              		.align	1
 939              		.global	_execve
 940              		.syntax unified
 941              		.thumb
 942              		.thumb_func
 944              	_execve:
 945              	.LFB43:
 176:Core/Src/syscalls.c **** 
 177:Core/Src/syscalls.c **** int _execve(char *name, char **argv, char **env) {
ARM GAS  /tmp/ccXAIw3a.s 			page 20


 946              		.loc 1 177 50
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 16
 949              		@ frame_needed = 1, uses_anonymous_args = 0
 950 0000 80B5     		push	{r7, lr}
 951              	.LCFI92:
 952              		.cfi_def_cfa_offset 8
 953              		.cfi_offset 7, -8
 954              		.cfi_offset 14, -4
 955 0002 84B0     		sub	sp, sp, #16
 956              	.LCFI93:
 957              		.cfi_def_cfa_offset 24
 958 0004 00AF     		add	r7, sp, #0
 959              	.LCFI94:
 960              		.cfi_def_cfa_register 7
 961 0006 F860     		str	r0, [r7, #12]
 962 0008 B960     		str	r1, [r7, #8]
 963 000a 7A60     		str	r2, [r7, #4]
 178:Core/Src/syscalls.c ****   errno = ENOMEM;
 964              		.loc 1 178 3
 965 000c FFF7FEFF 		bl	__errno
 966 0010 0346     		mov	r3, r0
 967              		.loc 1 178 9
 968 0012 0C22     		movs	r2, #12
 969 0014 1A60     		str	r2, [r3]
 179:Core/Src/syscalls.c ****   return -1;
 970              		.loc 1 179 10
 971 0016 4FF0FF33 		mov	r3, #-1
 180:Core/Src/syscalls.c **** }
 972              		.loc 1 180 1
 973 001a 1846     		mov	r0, r3
 974 001c 1037     		adds	r7, r7, #16
 975              	.LCFI95:
 976              		.cfi_def_cfa_offset 8
 977 001e BD46     		mov	sp, r7
 978              	.LCFI96:
 979              		.cfi_def_cfa_register 13
 980              		@ sp needed
 981 0020 80BD     		pop	{r7, pc}
 982              		.cfi_endproc
 983              	.LFE43:
 985              		.weak	__io_putchar
 986              		.weak	__io_getchar
 987              		.text
 988              	.Letext0:
 989              		.file 2 "/usr/local/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_ty
 990              		.file 3 "/usr/local/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_types.h"
 991              		.file 4 "/usr/local/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_timeval.h"
 992              		.file 5 "/usr/local/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_timespec.h"
 993              		.file 6 "/usr/local/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/types.h"
 994              		.file 7 "/usr/local/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/stat.h"
 995              		.file 8 "/usr/local/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/times.h"
ARM GAS  /tmp/ccXAIw3a.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscalls.c
     /tmp/ccXAIw3a.s:24     .bss.__env:0000000000000000 __env
     /tmp/ccXAIw3a.s:21     .bss.__env:0000000000000000 $d
     /tmp/ccXAIw3a.s:31     .data.environ:0000000000000000 environ
     /tmp/ccXAIw3a.s:28     .data.environ:0000000000000000 $d
     /tmp/ccXAIw3a.s:34     .text.initialise_monitor_handles:0000000000000000 $t
     /tmp/ccXAIw3a.s:40     .text.initialise_monitor_handles:0000000000000000 initialise_monitor_handles
     /tmp/ccXAIw3a.s:70     .text._getpid:0000000000000000 $t
     /tmp/ccXAIw3a.s:76     .text._getpid:0000000000000000 _getpid
     /tmp/ccXAIw3a.s:107    .text._kill:0000000000000000 $t
     /tmp/ccXAIw3a.s:113    .text._kill:0000000000000000 _kill
     /tmp/ccXAIw3a.s:154    .text._exit:0000000000000000 $t
     /tmp/ccXAIw3a.s:160    .text._exit:0000000000000000 _exit
     /tmp/ccXAIw3a.s:189    .text._read:0000000000000000 $t
     /tmp/ccXAIw3a.s:195    .text._read:0000000000000000 _read
     /tmp/ccXAIw3a.s:257    .text._write:0000000000000000 $t
     /tmp/ccXAIw3a.s:263    .text._write:0000000000000000 _write
     /tmp/ccXAIw3a.s:324    .bss.heap_end.0:0000000000000000 $d
     /tmp/ccXAIw3a.s:327    .bss.heap_end.0:0000000000000000 heap_end.0
     /tmp/ccXAIw3a.s:330    .text._sbrk:0000000000000000 $t
     /tmp/ccXAIw3a.s:336    .text._sbrk:0000000000000000 _sbrk
     /tmp/ccXAIw3a.s:424    .text._sbrk:000000000000005c $d
     /tmp/ccXAIw3a.s:432    .text._close:0000000000000000 $t
     /tmp/ccXAIw3a.s:438    .text._close:0000000000000000 _close
     /tmp/ccXAIw3a.s:476    .text._fstat:0000000000000000 $t
     /tmp/ccXAIw3a.s:482    .text._fstat:0000000000000000 _fstat
     /tmp/ccXAIw3a.s:525    .text._isatty:0000000000000000 $t
     /tmp/ccXAIw3a.s:531    .text._isatty:0000000000000000 _isatty
     /tmp/ccXAIw3a.s:569    .text._lseek:0000000000000000 $t
     /tmp/ccXAIw3a.s:575    .text._lseek:0000000000000000 _lseek
     /tmp/ccXAIw3a.s:615    .text._open:0000000000000000 $t
     /tmp/ccXAIw3a.s:621    .text._open:0000000000000000 _open
     /tmp/ccXAIw3a.s:671    .text._wait:0000000000000000 $t
     /tmp/ccXAIw3a.s:677    .text._wait:0000000000000000 _wait
     /tmp/ccXAIw3a.s:717    .text._unlink:0000000000000000 $t
     /tmp/ccXAIw3a.s:723    .text._unlink:0000000000000000 _unlink
     /tmp/ccXAIw3a.s:763    .text._times:0000000000000000 $t
     /tmp/ccXAIw3a.s:769    .text._times:0000000000000000 _times
     /tmp/ccXAIw3a.s:807    .text._stat:0000000000000000 $t
     /tmp/ccXAIw3a.s:813    .text._stat:0000000000000000 _stat
     /tmp/ccXAIw3a.s:856    .text._link:0000000000000000 $t
     /tmp/ccXAIw3a.s:862    .text._link:0000000000000000 _link
     /tmp/ccXAIw3a.s:903    .text._fork:0000000000000000 $t
     /tmp/ccXAIw3a.s:909    .text._fork:0000000000000000 _fork
     /tmp/ccXAIw3a.s:938    .text._execve:0000000000000000 $t
     /tmp/ccXAIw3a.s:944    .text._execve:0000000000000000 _execve
                           .group:0000000000000000 wm4.0.7c07f3f6b993d5df097fdb8d3ce9a6de
                           .group:0000000000000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:0000000000000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:0000000000000000 wm4.newlib.h.18.1c9fedb6b3cd797cff253cc0fd593ef2
                           .group:0000000000000000 wm4.ieeefp.h.77.c88535c35f465c05b101960cf0179075
                           .group:0000000000000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:0000000000000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:0000000000000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
ARM GAS  /tmp/ccXAIw3a.s 			page 22


                           .group:0000000000000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:0000000000000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:0000000000000000 wm4.errno.h.14.6a5939d3ae7434a1e97991a97123b12d
                           .group:0000000000000000 wm4.cdefs.h.49.39045112216f6a021dbdffe3bf5accce
                           .group:0000000000000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.19.40cd3f2bfc456b193b790c2754690ebf
                           .group:0000000000000000 wm4.types.h.51.5571ec98f267d17d3c670b7a3ba33afa
                           .group:0000000000000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:0000000000000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:0000000000000000 wm4.signal.h.30.5277b477a5ebb7d1254c1af3095d1011
                           .group:0000000000000000 wm4.signal.h.18.14c8d0c03fc1e06775633fad7399cfc7
                           .group:0000000000000000 wm4.stdio.h.27.3fc80220048df77954e38daec3bb9670
                           .group:0000000000000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.stdio.h.47.1f5845210bb9053bbca9ed76fc4018da
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:0000000000000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:0000000000000000 wm4.time.h.8.db4619001f026d0b4874c029fef0e91f
                           .group:0000000000000000 wm4.time.h.2.4581ce0ffb6627cfc02162c94bf846c9
                           .group:0000000000000000 wm4.time.h.25.0e6a0fdbc9955f5707ed54246ed2e089
                           .group:0000000000000000 wm4.time.h.142.403dcded079b6de6a2d2f21a34c2ae96
                           .group:0000000000000000 wm4.stat.h.54.5a9b823658423102e7a8de4ed089eedc
                           .group:0000000000000000 wm4.time.h.40.07bdef2e51e429b46276cd6f2246b78b

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
end
_Min_Stack_Size
_estack
